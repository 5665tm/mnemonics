<?xml version="1.0"?>
<TemplatesExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" family="Live Templates">
  <Template uid="c0a2e6fb-0e89-48ab-8151-5192dcac0f10" shortcut="c" description="" text="public class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35e5ce85-56ce-44de-b40a-fad133e9df19" shortcut="a" description="" text="public abstract class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4085cc0f-d3c1-449e-b6fd-bed26acd21e8" shortcut="C" description="" text="public static class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ffc79798-735a-4792-b931-cae63eed0552" shortcut="i" description="" text="public interface $INTERFACENAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;IMyInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0948402d-52c2-4fe8-af32-fedb6690f320" shortcut="s" description="" text="public struct $STRUCTNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;MyStruct&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ffb8cf5f-716d-44dc-833c-1f47a3c08747" shortcut="e" description="" text="public enum $ENUMNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;MyEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb5c3135-a5b8-4983-9778-9e04da72512f" shortcut="c" description="" text="Public Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32a7a9d5-7aa9-456a-91f5-bf17aaf97824" shortcut="a" description="" text="Public MustInherit Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9963c27f-f7e5-4744-8545-c5093e5cf5e5" shortcut="C" description="" text="Public Module $MODULENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="MODULENAME" expression="constant(&quot;SomeModule&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5cb6cc9-08ad-46b1-9833-d070fea3911f" shortcut="i" description="" text="Public Interface $INTERFACENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;ISomeInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b9ddf91-7c85-42d9-ba35-b4b902422fea" shortcut="s" description="" text="Public Structure $STRUCTNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;SomeStructure&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc9e8fbf-16ba-4a39-b1bd-8f7f99350b95" shortcut="e" description="" text="Public Enum $ENUMNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;SomeEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c65783cb-6a57-4b0e-824e-800743f2907f" shortcut="vb" description="A field of type $typename$" text="private bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b381096f-bcc1-45ea-9d07-d2d8080a52b1" shortcut="vc" description="A field of type $typename$" text="private char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78b420f6-c595-4a31-80e6-adc2f7e611a5" shortcut="vf" description="A field of type $typename$" text="private float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a93681b-1ae4-4165-b7a5-310f0900fc7e" shortcut="vby" description="A field of type $typename$" text="private byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7144d759-d09e-4089-a9a1-60b46e4ecf4b" shortcut="vd" description="A field of type $typename$" text="private double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0120eb66-575f-4d4b-9603-ecaa008e4e67" shortcut="vi" description="A field of type $typename$" text="private int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7a3ace1-d914-4e64-86b0-5350fd099174" shortcut="vm" description="A field of type $typename$" text="private decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c38bf2b2-5cfc-4339-adfe-d91c90bcc493" shortcut="vs" description="A field of type $typename$" text="private string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="633aa4af-818c-4114-bba9-5b78d0172010" shortcut="vl" description="A field of type $typename$" text="private long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5233f48b-82f0-497a-b160-b2f8cde5f552" shortcut="vu" description="A field of type $typename$" text="private uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa961d1e-6c6e-4274-9fb9-3a682bfa22ff" shortcut="vg" description="A field of type $typename$" text="private System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6016d60-3bdb-4ccc-89a6-5ebbb1cb1f36" shortcut="vt" description="A field of type $typename$" text="private System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e13f4abb-967a-40c6-9367-318d357110af" shortcut="vl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt;" text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a92dcedc-ce80-4678-9759-9708b8841614" shortcut="vl.c" description="A field of type System.Collections.Generic.List&lt;char&gt;" text="private System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6fe1abb8-6549-4b23-86d0-3329fc8b5e88" shortcut="vl.f" description="A field of type System.Collections.Generic.List&lt;float&gt;" text="private System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3bc55cbb-77e4-4c34-bc64-350f3e46b97a" shortcut="vl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt;" text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b9f95f0-948b-4bae-8721-39eef77cbaaa" shortcut="vl.d" description="A field of type System.Collections.Generic.List&lt;double&gt;" text="private System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15946e14-35df-4bdc-b94b-68ac7c691df0" shortcut="vl.i" description="A field of type System.Collections.Generic.List&lt;int&gt;" text="private System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="814946c6-1fb5-447d-adab-ec1a327f4bfa" shortcut="vl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt;" text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="137ced96-171b-41b3-9c88-69c6a0707453" shortcut="vl.s" description="A field of type System.Collections.Generic.List&lt;string&gt;" text="private System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af27bf3b-1080-400c-8d65-fb36c4642c67" shortcut="vl.l" description="A field of type System.Collections.Generic.List&lt;long&gt;" text="private System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee1428e6-8914-4d96-be94-8f9e3bb5d7db" shortcut="vl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt;" text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0a16190-71eb-40df-8a20-b185b4f1608e" shortcut="vl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4400c785-3bcc-42f7-a240-b89d861d43fc" shortcut="vl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="136a72d6-995c-41be-b3fb-870ba58ed094" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7f03b53-9bcb-4828-9009-3107dddf478c" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b98575c-ac1b-4d44-a450-0b95ea731640" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34605425-8348-4c91-b0cc-b90f78ded0db" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d65d4e1-f85e-4045-97ad-a513fd4d9b45" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22bdc3d2-a2fc-44aa-adf3-056c9437b452" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="490eeee5-1349-4943-919c-490ddf8d3bc0" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ac07265-8d0a-4e49-b221-5fe5adb07627" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efb7530a-e623-461a-b007-a8fd56daa8b7" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f88fd728-aa36-433c-8115-932c9427290e" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0dca82ea-7062-4830-af93-dfb9ed5a9aba" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b1f9e5d-707f-4f43-9218-b53b188edf59" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96deb31c-70fa-490c-af61-94f5037f0317" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef9e219c-1c9e-4b71-8b44-640d483e5123" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3469a79-7528-4e63-840e-7244bfd9693b" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f631e82-3d4f-4547-87f0-c30c2ef38566" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a32bd20-117b-4663-8daa-750fdf16d699" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4ce68a0-e0ed-46aa-894b-dbbc6dd954d7" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ead16bec-d8ec-4e78-a11d-1a447404fbb5" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa5ceffe-312e-4bfd-9c29-2ecaa0d2e526" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a56fe0b7-6aae-4cf7-8783-ae180a84247a" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6611ef7-5aa1-4455-962a-861361ef891f" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79b5b089-69aa-4b7e-b094-1721cf4d2504" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5822e30-ae85-4db2-a491-3e0f857709f9" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0aa5ab5-833b-47cb-bf40-64e2b0f01a4d" shortcut="vrb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98c752cb-8cdd-4374-9529-4df84664aac1" shortcut="vrc" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb355379-9208-43b9-ab6d-00b25f2bb614" shortcut="vrf" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25ec9612-9b77-4f32-8695-b7bf8c2a7551" shortcut="vrby" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="454d1e76-b131-4679-970c-9bbe3a10cb33" shortcut="vrd" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9662ef8e-1761-43a1-9bf1-64c84cc74ed9" shortcut="vri" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0219767-2df0-4e79-8711-ce874e5254f2" shortcut="vrm" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47e43995-10da-4f3a-9d44-50d30b7150cf" shortcut="vrs" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe1774fe-6d58-4851-bb77-5a9f53bddb1b" shortcut="vrl" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f2cdc77d-a2e6-4dff-856e-42e594e5f071" shortcut="vru" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1dee64a-c9d4-44ce-9133-72595950e115" shortcut="vrg" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e0b7c66-c5ff-4aca-93d3-f25d925274e6" shortcut="vrt" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af5a7691-1c1a-4496-8727-782c78123a4f" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98c2ce7c-2d56-4475-a1d9-88d712a87144" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a85c2cf4-8c90-43a8-85e2-c343c494dacb" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="868565da-0d41-4e6a-99e2-a5675ea12775" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="033dbfc7-81b2-42ea-991a-4e5f67aca532" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26a3006f-a79f-4446-a512-e389c498f83f" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb0260b9-69b2-4e29-909d-01c6c89a6bd9" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b018dce7-f001-48d6-9895-ca8489ab5c9e" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a29bc0b-e383-4184-ab75-8accb729e673" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff77f662-d604-49aa-bda0-52591940878b" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e6dcbff-c4e8-4a83-8eac-3238153e22fd" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29770da8-76c2-46de-85b3-69e6596264b8" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cbb6b1e1-0e59-4e11-89c2-bd679a6d2dc6" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6790cfa3-e203-4883-a158-20b8992d9834" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="034d8269-d561-4446-89fb-4cc1269d6be6" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59dffb82-c34c-45e5-8416-32122e622993" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2456345-0b81-46c9-8fdf-aaf595a5ba44" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="109d39f9-4d4d-4894-8d36-c10b5fcbd861" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e7fb43f-fa35-47df-a468-5b404cf5abee" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="735de404-cf82-4281-9d72-7639dc7a4ade" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85b44b17-6c01-4b89-a65e-ce6bd5f1d204" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="61ace175-d335-470a-8e41-1e3394fb0ccc" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8a738fd-21c1-43c6-b973-9fdf3f0256af" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19e64b5e-ecb2-4385-a149-bfb0dd0706fb" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0636f986-d5d9-417a-afbe-5da863b58c2a" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a55b5500-de7d-4392-8ee9-930ee568c086" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fbeaa4ea-9bed-4762-8012-89f22a8a47e3" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7a71bc1-5586-4672-8054-6727cb725250" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47e2c8e5-15ce-47d3-859e-35b1aa0cb2c0" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b974986-d1d7-4180-aa5d-a2e191a561e3" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe45d5b5-a5f9-4779-9a2c-2441946394ca" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eedad0b2-d105-4d61-af43-64f0e926ac37" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd5bf205-5d7e-4015-876a-4c773e7e8803" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6be4abe3-880c-4243-bb60-20eefdb1cdd8" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45be235b-e605-4591-89a6-da17bf38e497" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55b0beef-a04e-47c0-96a8-5e586c1a8ecc" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="279533fe-44c8-4897-b3fb-d7ad8687d220" shortcut="Vb" description="A static field of type $typename$" text="private static bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c740e2a6-9c5b-4d06-85b6-0ed73ea8d353" shortcut="Vc" description="A static field of type $typename$" text="private static char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f2e9966-20f3-4f0d-9175-7efebe6b6360" shortcut="Vf" description="A static field of type $typename$" text="private static float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="304b170e-3f7e-4a05-a3bf-0c49fdb579e8" shortcut="Vby" description="A static field of type $typename$" text="private static byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9db0624f-8087-4fe7-becb-f1ee05caa201" shortcut="Vd" description="A static field of type $typename$" text="private static double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41a0c369-ef13-4a0c-8f91-d94eab0e3cec" shortcut="Vi" description="A static field of type $typename$" text="private static int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa465aa3-4b09-4f74-a41e-b1d1eed9f01a" shortcut="Vm" description="A static field of type $typename$" text="private static decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4929b992-ff9e-443a-b39f-4ecc017026c8" shortcut="Vs" description="A static field of type $typename$" text="private static string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="859b837c-3525-421e-b819-00a7baddeb84" shortcut="Vl" description="A static field of type $typename$" text="private static long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e5bd97b-6b35-49d3-b74d-1c5f3c3222db" shortcut="Vu" description="A static field of type $typename$" text="private static uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e704ec7-232b-4f29-9e47-eae72a89f469" shortcut="Vg" description="A static field of type $typename$" text="private static System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d053932d-e697-499f-99cb-fb5e48d23b74" shortcut="Vt" description="A static field of type $typename$" text="private static System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02c61412-9161-4cb5-9264-205f07022d84" shortcut="Vl.b" description="A static field of type System.Collections.Generic.List&lt;bool&gt;" text="private static System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12414243-3336-4429-a92e-79a5973c5ff4" shortcut="Vl.c" description="A static field of type System.Collections.Generic.List&lt;char&gt;" text="private static System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75bd8a27-fb88-40ae-b8f0-b5acd1d1f6b6" shortcut="Vl.f" description="A static field of type System.Collections.Generic.List&lt;float&gt;" text="private static System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="979be815-fada-4bc0-9a38-9b8dd1e62910" shortcut="Vl.by" description="A static field of type System.Collections.Generic.List&lt;byte&gt;" text="private static System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7de12c53-423d-4053-9ce3-568fafb2b79c" shortcut="Vl.d" description="A static field of type System.Collections.Generic.List&lt;double&gt;" text="private static System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c21f9c73-b44d-49fa-9719-903d488c5539" shortcut="Vl.i" description="A static field of type System.Collections.Generic.List&lt;int&gt;" text="private static System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c70342eb-9e2d-44b5-9a32-a6c3c9106bb2" shortcut="Vl.m" description="A static field of type System.Collections.Generic.List&lt;decimal&gt;" text="private static System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab601488-a034-4b37-a230-4cff63b5a95e" shortcut="Vl.s" description="A static field of type System.Collections.Generic.List&lt;string&gt;" text="private static System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b7cfb26-2577-42aa-aeda-8fd9f1144a88" shortcut="Vl.l" description="A static field of type System.Collections.Generic.List&lt;long&gt;" text="private static System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26faf1f6-9eed-483b-8498-b87861afca2c" shortcut="Vl.u" description="A static field of type System.Collections.Generic.List&lt;uint&gt;" text="private static System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a32bfa4-1b1e-47b6-91dc-f86498b69e76" shortcut="Vl.g" description="A static field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private static System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02984f3c-90b1-4ca1-8721-cf3c5452d63c" shortcut="Vl.t" description="A static field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private static System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a115d85-1331-4f2d-b3ca-359874c2b423" shortcut="Vh.b" description="A static field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private static System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2f24216-f749-4fb9-ab83-6018e01c998e" shortcut="Vh.c" description="A static field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private static System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba8a7177-6503-4afb-89b5-ec8e568dbb7f" shortcut="Vh.f" description="A static field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private static System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9bdd663e-49a1-4925-ab95-6ef67127aaf5" shortcut="Vh.by" description="A static field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private static System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="487a8a23-15a2-407b-906b-5a7eab52e784" shortcut="Vh.d" description="A static field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private static System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fdcd2d9a-b510-4d83-a8bc-326c31d155a0" shortcut="Vh.i" description="A static field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private static System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d0eb7c3-37ee-4c43-8d48-5d906f397786" shortcut="Vh.m" description="A static field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private static System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44f602ae-97e9-4a5d-a1d7-7f15a491ae0a" shortcut="Vh.s" description="A static field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private static System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f72cba28-7295-4ce0-82d5-7155209a5f28" shortcut="Vh.l" description="A static field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private static System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48a2348a-62ee-4658-b49b-36a69c159997" shortcut="Vh.u" description="A static field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private static System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4fab6b4-4635-4492-87ef-7442bed57856" shortcut="Vh.g" description="A static field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4c5d460-f913-4128-8781-1ecd006a61c6" shortcut="Vh.t" description="A static field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f823fa67-46ff-45bf-a62f-97e90a4ae103" shortcut="V~b" description="A static field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private static System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d358e21e-112c-4b4c-9102-58ecfe6562fe" shortcut="V~c" description="A static field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private static System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f7d14bc-e44d-41b1-a81c-56b641bec888" shortcut="V~f" description="A static field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private static System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f535c03-952e-4bc0-891a-4090e2b2dacf" shortcut="V~by" description="A static field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private static System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3600ffd4-9eea-49dc-8f87-bdbbb054dab5" shortcut="V~d" description="A static field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private static System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1830bccc-c0e3-40db-8563-c9f7ff59fdcd" shortcut="V~i" description="A static field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private static System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a9713dc-0df5-429b-9b44-70174544ba68" shortcut="V~m" description="A static field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private static System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5b07a0a-3967-49c1-a05a-310e829575d6" shortcut="V~s" description="A static field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private static System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e5cb9da-1f9d-4aa7-b9f4-e20566c67d94" shortcut="V~l" description="A static field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private static System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21f0cea9-ab59-46bd-92b4-75f88236d905" shortcut="V~u" description="A static field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private static System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="50f1584a-ab42-42c4-bffe-4ef7ef364e1a" shortcut="V~g" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d8e3f6f-9beb-4afa-b0f5-1ff778dbf180" shortcut="V~t" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c400e8a-4e8c-4ff1-9d07-47585e01e4cb" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="private bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e97cb034-29a0-4140-b898-1be550086c2f" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="private char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aacec41c-fab9-494a-98c0-594c3bbab3a0" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="private float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bf35021-0035-44af-b61a-7de68d8d14a0" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="private byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c095be49-2116-4ed7-8618-c575e8a7dec3" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="private double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7c09ebf-ace2-4d65-9673-493561cd7ab2" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="private int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23656265-ea33-4c42-83c7-99e590d7fa25" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="private decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7fd630c-3c3d-4d81-9b30-5e3675492689" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="private string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aef922ea-e98a-4ed6-a916-32861ef1e87c" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="private long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="199227ec-5419-4597-82a4-3752fe851b77" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="private uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83840dd0-78e8-49d9-9be0-7572daecd541" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="private System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51cf2b81-d5d7-413a-ac03-36a0a01a632c" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="private System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="815368a3-b060-4db4-94b1-99c7691d7427" shortcut="nl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff350b57-8357-4332-b110-5e93ec82e108" shortcut="nl.c" description="A field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a42ec35-2835-4939-a879-b73bec9ba5cb" shortcut="nl.f" description="A field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14f51178-4614-4c6c-80c5-9d106aa8ef74" shortcut="nl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12d121c9-07ff-4e48-a6a1-36284ea5b6ea" shortcut="nl.d" description="A field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d47200fa-bfe5-4009-9082-d22cbe3d5cc7" shortcut="nl.i" description="A field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc7e9212-868e-4b1d-9480-41ca1035de61" shortcut="nl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5970ef3d-365c-4226-b2a1-2836d7cd365c" shortcut="nl.s" description="A field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a15ea1bd-2a08-4c8a-8bee-11fd366ba74e" shortcut="nl.l" description="A field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aff85d11-8540-479d-ae5f-54767aefacbe" shortcut="nl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11aeba03-6831-4750-9493-d09a91a46ba1" shortcut="nl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f6cddb2-333d-46b8-8361-e27f1d54d3e7" shortcut="nl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47b11c68-f5c2-49c5-87fa-66bd48872a93" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="127fb4cb-0ed7-45a2-87cd-39fe6d5217f9" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="467d10c9-ad7f-494b-94b3-1f584f2cbcdc" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01df9109-f5d1-459a-ba8d-85d9889d3109" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d09f7b1e-00c4-4982-8485-e51ff8af1ee9" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17e57769-7abb-4211-8ccd-ef14f90145ed" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2de58374-4e20-47f8-8cfe-666943170111" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3cbaa9b6-b516-4f3c-a3f6-eac1c61e37fe" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb789b9c-e80c-409b-aab5-350ee3f96a6a" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86e6346f-e5a5-4082-a9ae-247aab05f41b" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7be479b2-1309-4815-9dba-dd5565d454a3" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57e5a684-0cb2-4c4e-b9a6-397ac5a5d767" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8513125d-7bca-45af-9756-6b3e39070d48" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73cea308-ed68-4a59-905a-2a225f9b2ae2" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d351e8f-fdbe-4d16-8a34-0870fcb26295" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="042c0621-1aed-45da-8048-0e076d1590ad" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef53a95f-668a-4612-8eea-7084ece0caa3" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e78bef7-1448-4dde-b1f3-2e6699fe750e" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="126cf67a-c521-4bc0-966e-473c7e7db34a" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12a347cb-d77d-4f62-8319-7a87e73decc3" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3fbd4c5-b507-4fbe-8364-2bd346e26b78" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf38f89e-2cc7-4eda-a410-2295ccc8a3cd" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14be7cca-8f42-4726-9e32-20a801eadeb8" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd28bff4-ae8f-4618-b1e3-22982ef4ebbb" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de395ee4-7c4c-4e3f-a7f0-3afb530af59f" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="private readonly bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f9f244d-4d8a-4826-98ad-719c0b999aa7" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="private readonly char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8da64fc6-e95f-4e24-89ca-1946e0d1ec26" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="private readonly float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="915a1d59-01f7-45f8-ad43-293d7fe1f206" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="private readonly byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93832798-f809-4559-bf2f-4c26718b414b" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="private readonly double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef9a2b70-c6a2-4c32-a0fa-344374445449" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="private readonly int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a9632d0-924d-4722-b841-facd0718aa06" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="private readonly decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9000b185-8e27-4f8f-b0fa-6bef210b4209" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="private readonly string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="161fdf77-9100-4fdc-8561-9f2ce7838183" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="private readonly long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2fca5e2-5baa-4028-bd04-aa45e0cbe481" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="private readonly uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9634124b-6bd8-4457-8c7f-37ff73c554e7" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ee306c1-b08f-4056-973a-dda8e49942fc" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a059ff88-8b89-4391-88b3-38313e2e1e71" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c3411bb5-50a8-4a82-b7c6-4a71ae275674" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="304106ad-6186-4478-ab76-c45b60eb6087" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8919da22-79c5-492c-a18f-7ef4eb509630" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b797a1b8-5384-4b10-8b2f-308dcedddf87" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="019b0f11-8e84-44ca-a2ca-0f41f42fb668" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65ac0d64-2d78-47a7-b4c9-4b2349c04b44" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc87b3ed-c399-44f8-97be-2243b426cc05" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c292d490-5455-48b5-acad-ed3a2a8ed1f0" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e4fa40c-fb1e-447d-a167-f8d40b9b65e2" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9ab837d-9678-43f8-987c-9d69b56ec02d" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8dfd9ce5-3889-479b-9ed7-452e5f22e77f" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4ba7845-dcf6-4f35-93ca-5ac7a35dcbbd" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8fc1623-ad5a-4ef5-b530-eaf08bde8951" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb36b888-7976-476f-9b92-9c59f2213119" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f043852-7ee4-43f6-a634-2f45782b9d5a" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc185c5f-2ddd-40f7-ac8c-73543b731637" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81b0d14c-62c5-491c-934c-af925c903d9b" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f704b39-d962-45f8-b3a7-c8536bcb21e7" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5348f34-2606-42ee-a0ac-de4ea9b3e899" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5798621b-1d74-4774-a1ca-964cb2069379" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f863158-07f8-4973-b45b-00c83a40c0b9" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b56bf30-e59e-4e3c-b6ba-886163467c71" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe8a3975-72a4-45e1-8624-d4ce7cf275fe" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0dfbd3e6-5b30-46ea-8451-3bd0eea962e7" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="929cd8fb-9cae-4d5f-80d4-2a6832e81c73" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0d9cd33-bb43-4d2c-843a-08fed8c9a849" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24ef6360-dc9c-4d21-a018-26a3662caa3c" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d35b7a3-af29-40ec-aed9-1d46cf018d89" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6b62c6c-32c1-4dd4-a91f-c6facf92138e" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ca6625e-c953-41b8-8b2c-88a68b51642c" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82156174-7d50-447e-8356-71521c5e1427" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0193eb8-0f42-496f-bf4c-d6516b15f923" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8e9495a-918b-4dff-96ff-72926acc3802" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc0e3d67-f220-4bb3-bb71-cebb2ec8d663" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10ae0fba-c3eb-4eee-89fe-03631852d357" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91b4c968-c43a-4fea-856f-41b9c4d2cc62" shortcut="tb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5dea50b-1e30-4023-8504-6a4566b65399" shortcut="tc" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89dad077-7576-4c4b-81ae-217c75d4eb18" shortcut="tf" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0216aaff-3f19-4240-8aa6-f1aad1ea1256" shortcut="tby" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5da20f8a-6c5f-48dc-bf01-6326b647e484" shortcut="td" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5f852a9-6a7b-471b-8e74-5565c55b3eea" shortcut="ti" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2485e82-0f31-4dd2-a6a6-938bf2b5f0a2" shortcut="tm" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbc9f11f-0b1b-4178-a173-8cb2bf54c7a6" shortcut="ts" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b49bea8d-ef60-43da-a570-9fe37a62b829" shortcut="tl" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d76832b8-14ec-4ba7-8673-b430787a2be3" shortcut="tu" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8052eaa-e9fd-4c4a-8525-e7b371eee204" shortcut="tg" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="740aeefb-91f9-4000-ba5d-cf5211a78495" shortcut="tt" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e5370ea-cff4-4621-89c7-fd89449082e5" shortcut="tl.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd4f0b5a-a597-4f32-aad1-7e5ab3406a3c" shortcut="tl.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14e99e6c-73eb-415a-8182-e787fbb83a5f" shortcut="tl.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af00f380-343a-4d71-a3b8-f968e98447e1" shortcut="tl.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07166ff4-0f5f-4d7c-95d2-f045e71c5f5a" shortcut="tl.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e806b99-b764-459f-a9e4-9daa63d1805c" shortcut="tl.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd6dcfb5-153c-4062-94c6-d2e65252a2ff" shortcut="tl.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6c44b0e-7ae7-4ada-819e-301c57777ab7" shortcut="tl.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32622f98-8ca7-4be9-9392-26da12db969d" shortcut="tl.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3faa4a9b-6270-4552-9b82-4ccb28ddaac5" shortcut="tl.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e8e23f5-47b5-41d0-897e-818f7eed523d" shortcut="tl.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65e69b94-90c6-4e8a-bbe8-ae5e599c2a46" shortcut="tl.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ed33c09-4b6b-4aaa-be16-9520cdb2c2c9" shortcut="th.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e834e75-36fc-4020-91d1-f56d4ea810da" shortcut="th.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0aa865e-3d0a-4e8e-bc6e-7fa4e6c2ce63" shortcut="th.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69e5d545-ad9b-4c9c-89e6-d53206e30385" shortcut="th.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ecf8bd0b-223d-4e66-a5de-3cd32a2ef056" shortcut="th.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce00ff6b-5ff0-414c-8b83-6caed678c11b" shortcut="th.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70e043e7-2827-4c6c-8518-c7bf7ae76336" shortcut="th.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b710dc9-ca32-4b45-86f8-0efa4df99896" shortcut="th.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c40a445-7c61-4610-9a04-83bc6432abab" shortcut="th.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d48b451-cfac-4ba9-9a48-9105d14e2cc6" shortcut="th.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9db2d249-274b-4ae2-b2d3-17ed3f397eb5" shortcut="th.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a1ca0a5-f0d1-4a73-b86c-745fac7a8aec" shortcut="th.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58ae3ca9-c8d4-448d-95cd-f528d3f72878" shortcut="t~b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ac4deed-4319-4051-a52c-f69fc9bf4f0a" shortcut="t~c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="50d2c99d-d1e3-488f-b266-69677a3dd128" shortcut="t~f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6cd9d17-1511-4af2-8a3b-e1fa74c7ed25" shortcut="t~by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f9a78be-9a2d-497b-8358-b7f811800328" shortcut="t~d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="076a4dac-9131-446a-9f10-a3ee39c259e7" shortcut="t~i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84b24695-d483-4152-9316-e25ea2d774de" shortcut="t~m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12784861-48b3-414d-891b-0fb92f27d2d3" shortcut="t~s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef49fac5-1bf6-47f9-982b-d25cfb2130e1" shortcut="t~l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f95ff08c-e446-4687-9663-08b28161b9d9" shortcut="t~u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e67027f-c83a-4c04-81b8-983d1155fd1d" shortcut="t~g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7fbb02a-88b3-40bd-81e6-673dc59e60fa" shortcut="t~t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73451114-2f46-47b9-b6d0-a29c3a4f120a" shortcut="m" description="A method that returns a(n) $typename$" text="public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1431214-60fd-4901-a427-463a7f7d0e4e" shortcut="mb" description="A method that returns a(n) $typename$" text="public bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5d459c7-f642-4f42-8852-c4503c0ef70f" shortcut="mc" description="A method that returns a(n) $typename$" text="public char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39400f4a-981b-4493-a88c-91271fa7ca1e" shortcut="mf" description="A method that returns a(n) $typename$" text="public float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f88473f6-80fa-4860-86f5-550ad1322e0a" shortcut="mby" description="A method that returns a(n) $typename$" text="public byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68fe342d-314d-4e8a-be34-2e134fb099fe" shortcut="md" description="A method that returns a(n) $typename$" text="public double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4bdab82-f8a4-4ffa-a455-d08cb9407ab9" shortcut="mi" description="A method that returns a(n) $typename$" text="public int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6c1f69d-8975-4872-baab-ff15625d7ae1" shortcut="mm" description="A method that returns a(n) $typename$" text="public decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1df2c7e-fcf9-408a-b5e5-716ac4bd1d97" shortcut="ms" description="A method that returns a(n) $typename$" text="public string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a9f6896-02fa-4e5b-9c42-191ac70db936" shortcut="ml" description="A method that returns a(n) $typename$" text="public long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f632244c-971d-4465-ba39-518498ae35bb" shortcut="mu" description="A method that returns a(n) $typename$" text="public uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5efb664-8f8d-439a-aa4d-c1f6abb06698" shortcut="mg" description="A method that returns a(n) $typename$" text="public System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ffbe262-fd41-4619-87f4-ba4be479c9e1" shortcut="mt" description="A method that returns a(n) $typename$" text="public System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4054118a-5879-4e4b-bbb8-66f11a580953" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0dcfc6a-e20a-4de8-b8a0-d4343f1a70a7" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f83c63af-e572-40d8-9fc7-a555d832951e" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="238b4c38-2f32-4575-8903-3e773ef0d0d5" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97cf68f7-d5e6-4b17-a8b5-4f20ae9fcfc2" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b151dbb-4027-4793-8505-c0620874dff5" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90a2e21f-06c4-4e0b-b72b-f8c23b5205df" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0fae538d-b970-4cae-a9d4-afbc1b3bf428" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3492e904-9a82-4d44-89c6-8650f22e0243" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0ac8140-9051-483f-ac53-98f1912b8422" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71393f2e-bcf7-4ae8-8d9c-1dcc5f2be9f8" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fcaf6a8-f2bb-4bb3-acc5-03df33c0d03a" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3a45514-8691-4dce-9497-81e7fd9aeb53" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="947ff6f0-0fd7-4f5a-82a0-771d08b5c4f1" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce05e586-65c0-4adf-b5b4-216cd357baa0" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42e28c8c-8529-41fb-837c-00786462af10" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52a3710d-c8f3-4054-b532-1570fa49e785" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="018c7c6f-364e-4226-9237-0a81d5cae1b6" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87b81818-9d95-40ad-826e-4e8fb4d25f06" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="520c4078-48b2-4292-bb80-f58b58d60e89" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e52bde98-cff5-4f93-99ff-fdd26188269f" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b90b6b1-5598-40e0-b30e-4a7fdbc6c953" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af7aa4e4-a2b1-43aa-a808-38903e8f793d" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e384839-c604-4a25-9a19-e2c1cd27aca0" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12ed3ac3-3007-499f-b471-90a6714d5dac" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7f26184-4497-46e0-89a0-0bda6adf7137" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7710ac0-665a-4729-8ca0-317c43a79d41" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60f8e554-cad5-4bbb-ab6a-65ab66a7f664" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="883b5aae-440e-4534-bd98-e1ae3384e994" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a89a77ec-2a52-462b-9653-9571a25e4b79" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="deb594ca-ed72-4fbc-b203-263d16aa9db5" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf726394-a204-4ec7-b9e5-860cdc5ef8e8" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b39871a-9c18-48b0-9833-15f7e0bfe166" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5e614dc-8c0c-408a-9acb-0087adffbaa8" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dedd49e0-c66c-479f-99af-af6a39391d1c" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0dfb8ed6-fb38-4fc4-ae92-283d1c71a916" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56880c4f-9e07-4017-a891-034c6d297b2d" shortcut="M" description="A static method that returns a(n) $typename$" text="public static void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c9f82a5-b644-4648-85d1-1fcb3c1158aa" shortcut="Mb" description="A static method that returns a(n) $typename$" text="public static bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5c8388f-ae1b-4ec3-af88-e15b87688273" shortcut="Mc" description="A static method that returns a(n) $typename$" text="public static char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="447b1603-9b26-497e-936d-853f007cdbbd" shortcut="Mf" description="A static method that returns a(n) $typename$" text="public static float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ae85097-4bc7-4520-8187-fa6a74ab3ce3" shortcut="Mby" description="A static method that returns a(n) $typename$" text="public static byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ea316ff-ed8d-4114-952e-a8b6ac6402b1" shortcut="Md" description="A static method that returns a(n) $typename$" text="public static double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39ee5cc2-d756-44c3-bd12-4e85d9e0c15e" shortcut="Mi" description="A static method that returns a(n) $typename$" text="public static int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="176a45e5-0cdd-40b7-bb44-5d38b113452d" shortcut="Mm" description="A static method that returns a(n) $typename$" text="public static decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a005e22f-f7d9-4def-8760-bf7256bcc6ed" shortcut="Ms" description="A static method that returns a(n) $typename$" text="public static string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2456d61e-ab96-41e7-9e9f-8b2cbad32da2" shortcut="Ml" description="A static method that returns a(n) $typename$" text="public static long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15274bb5-335e-4294-9458-8fda623ccb58" shortcut="Mu" description="A static method that returns a(n) $typename$" text="public static uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be8dc4b9-261e-4275-8e99-09eedc5927a8" shortcut="Mg" description="A static method that returns a(n) $typename$" text="public static System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d772bce7-92ca-4902-b52c-138abc908f02" shortcut="Mt" description="A static method that returns a(n) $typename$" text="public static System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b9a04d8-125e-47cf-9db0-a6f51867ef21" shortcut="Ml.b" description="A static method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public static System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="632707c0-839d-4141-9cb1-f2ba087e45da" shortcut="Ml.c" description="A static method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public static System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcbdd23c-d33d-439b-be3e-1d032fe4ac11" shortcut="Ml.f" description="A static method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public static System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3be95e7d-7ea0-46d8-b656-f751040c6aba" shortcut="Ml.by" description="A static method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public static System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df598d40-05d8-4212-bf83-e4dfa122f44d" shortcut="Ml.d" description="A static method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public static System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a80740a-561f-4616-b132-8c262026d5b7" shortcut="Ml.i" description="A static method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public static System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b3e9c9a-54bf-408d-8500-6c1d5426933e" shortcut="Ml.m" description="A static method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public static System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b03c238-be2d-45ea-ac46-a7bfb5caf994" shortcut="Ml.s" description="A static method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public static System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc9ed9f1-7fc3-4a79-9883-965a749f7928" shortcut="Ml.l" description="A static method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public static System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67765a1e-a137-4c63-b9fc-c8d3a95f4ad6" shortcut="Ml.u" description="A static method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public static System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9427d175-5110-43b3-b5f6-61422f3d6040" shortcut="Ml.g" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public static System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0bc2219-98bf-46c6-85f5-9cc098f859fe" shortcut="Ml.t" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public static System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28ca08f5-9afb-42aa-9575-b73b49a5c6a5" shortcut="Mh.b" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public static System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8d1d553-453f-4767-bba5-e042b0005ce0" shortcut="Mh.c" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public static System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a36c8307-b60e-44cd-9422-59c4d958e114" shortcut="Mh.f" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public static System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e34fa90-1a5a-4a59-aa79-f4e7ad57b47b" shortcut="Mh.by" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public static System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5be92759-06da-4a34-b353-c32cbf65cb04" shortcut="Mh.d" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public static System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3510d35e-2367-4009-a2a7-e5d615c5e3a6" shortcut="Mh.i" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public static System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="228d0389-58de-4e0c-ae62-e19befb48e8e" shortcut="Mh.m" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public static System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39ea37a9-4ab1-44dc-86a0-6c8ca177eb64" shortcut="Mh.s" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public static System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea21b5ad-3b78-429c-8ac2-731b78bf6b9d" shortcut="Mh.l" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public static System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21e4a0dd-61d4-4a96-a825-e92a8610c067" shortcut="Mh.u" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public static System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d11adc23-c913-48fe-b9ff-aa6e51610be3" shortcut="Mh.g" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d64f7467-3a58-4fc2-a451-ec414175d45c" shortcut="Mh.t" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d8baf45-e24a-4d41-8a98-13065219c72a" shortcut="M~b" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public static System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="593eb641-e50a-4b78-8c7f-c311a2c245df" shortcut="M~c" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public static System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34ea7641-3d9e-4004-8e3f-43d91366ae19" shortcut="M~f" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public static System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72e3cea2-4a8a-4b87-8e6e-a2688b0ba87b" shortcut="M~by" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public static System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b25f4e6-0f17-4263-856a-8bedcaf3e71f" shortcut="M~d" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public static System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8dd3b96-3d74-428e-902e-a566095b3a87" shortcut="M~i" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public static System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c42d8f5e-e78e-421f-93fb-e0669a6461bc" shortcut="M~m" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public static System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e18b73a-a57e-4e39-91ef-d342c9fcd64f" shortcut="M~s" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public static System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d8a081d-a2a5-492d-8690-08a64aa373af" shortcut="M~l" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public static System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c706884a-3f43-40e8-b427-dd2f5eaeacf4" shortcut="M~u" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public static System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b42423e-8975-42fa-81bf-d5261fce9f75" shortcut="M~g" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0213e0e5-2451-4e3b-9d87-9d0421142b5e" shortcut="M~t" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4d18ce5-7c83-40ff-806e-c5f3d699e6e6" shortcut="pb" description="An automatic property of type $typename$" text="public bool $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98c47a2a-34b7-4404-8843-d2e4f1a65f5f" shortcut="pc" description="An automatic property of type $typename$" text="public char $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="16e9d33d-245e-4c27-8a22-ca19341f84a7" shortcut="pf" description="An automatic property of type $typename$" text="public float $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ba2260c-e8ae-4821-b7e5-c5fa82f8cb66" shortcut="pby" description="An automatic property of type $typename$" text="public byte $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95d0c3df-3ebd-4ee9-83b9-335a4f5d0b91" shortcut="pd" description="An automatic property of type $typename$" text="public double $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28293149-fea3-4d67-aa03-58235f59dfbc" shortcut="pi" description="An automatic property of type $typename$" text="public int $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ac9a954-2876-423a-aaf0-31322037a794" shortcut="pm" description="An automatic property of type $typename$" text="public decimal $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="440c7bb3-29a2-415e-86fc-a91f3a3da2a8" shortcut="ps" description="An automatic property of type $typename$" text="public string $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="454e45d1-c762-4629-85dc-cf5eae5d1738" shortcut="pl" description="An automatic property of type $typename$" text="public long $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74afa153-0248-45ed-9847-ea8510bdd405" shortcut="pu" description="An automatic property of type $typename$" text="public uint $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="feaa4caf-0c03-4880-9972-61e607046b87" shortcut="pg" description="An automatic property of type $typename$" text="public System.Guid $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="babb53a9-1df8-4469-a372-1ec312b2819a" shortcut="pt" description="An automatic property of type $typename$" text="public System.DateTime $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e55f0a7-7688-4d51-9f07-dc0b39eaeca7" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea3a5038-636e-4308-b2b7-999c99542105" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f6e81cb-e6f6-425f-86eb-41d0b583b82c" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ec745dc-3a50-43bc-94ca-61886b59e92d" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="414c0ef7-2a34-4f74-8852-066a40392a70" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99ef3fa1-a11d-4cbf-a77f-abbcc64f7c3e" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6cc36cbf-49ca-4807-984d-1c87c79c4864" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="690aa8a2-62e2-444b-b6e7-8fa3df138699" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7da12ac-a1b7-4d99-9f2d-8f9164e35974" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52156c41-4a55-43b6-b872-5e093c7bf413" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75d51bf1-d11f-4806-b16b-ebd4375b31b9" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ffe315e-866b-4d71-afc7-df265f20c0bc" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba3ea1c9-07e5-4773-9afc-4c1317030702" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dfbe4b2e-d6a1-4666-bd43-a136234fe90f" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="833c43e1-b1ce-4c85-a854-e9ca561d7d16" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e067ea8e-768f-4314-b8b7-255d82b18c70" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56e6f823-d3a2-4d97-bcbb-d7d412c1bd52" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b2499e1-db22-46a9-94dd-01f9accb5510" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="602a5e8a-35d2-455e-b6b2-395f9fb0fa34" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddca37ec-1aa3-4916-b458-e061b0a83118" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07f2ff79-01a0-4d4a-bed0-8808bf2bc6df" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2436ba10-169a-4ec2-a1b7-a68708be2e00" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="50d24abd-d976-44d9-9292-5eccf99090d4" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af7d4f6d-8ad1-4d6b-9150-222a6caeb285" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8e74b61-0fa2-4c3d-8aa8-74b38b1f019f" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a614a79-7e13-4ede-b6fe-73799295f614" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="407de748-c6c0-4b84-876e-25e40cf10361" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2a99087-7a6a-4c6e-87cb-ea7652a932ed" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="adacf5d0-510c-4763-8215-5edd522c10d3" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4eed97c-d1ad-4d31-9156-9c9df9e077b0" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd480225-186e-46b5-80ee-e5e43ff4feeb" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a2bc067-d414-467a-9d77-6d09cba3b069" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ffb541f-5eec-48c4-b88e-dd7c5d6c028f" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24bb64a6-885c-4692-a29a-b4d357f8205c" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86e6e324-56a9-4e05-8139-b4a32d2b8687" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87f7bc14-e7e2-4e74-a0e0-16a13df4e3df" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4e49fd0-a8f2-4bee-a15f-aa78a3858ac8" shortcut="prb" description="An automatic property of type $typename$ with a private setter" text="public bool $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bf7bdf9-9bdb-42a2-bc55-8d6252b2e37e" shortcut="prc" description="An automatic property of type $typename$ with a private setter" text="public char $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65461da7-5406-41c5-a026-a6f47a2bdba4" shortcut="prf" description="An automatic property of type $typename$ with a private setter" text="public float $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1cea6c44-414f-4133-91a6-09cb4158c593" shortcut="prby" description="An automatic property of type $typename$ with a private setter" text="public byte $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8beb873d-767b-4c05-9c0f-27b2171fa03a" shortcut="prd" description="An automatic property of type $typename$ with a private setter" text="public double $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e8c3be2-d992-4c10-8620-5174c5a42d29" shortcut="pri" description="An automatic property of type $typename$ with a private setter" text="public int $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e613cdeb-85c3-44cb-9fbf-bcde1d7a63ef" shortcut="prm" description="An automatic property of type $typename$ with a private setter" text="public decimal $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d5c4003-1929-4a36-87bf-a0b125947ad1" shortcut="prs" description="An automatic property of type $typename$ with a private setter" text="public string $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d9923a2-4d98-4cf1-b85e-1e7a386b3e4e" shortcut="prl" description="An automatic property of type $typename$ with a private setter" text="public long $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b211b594-d680-464b-ba60-0d3651f1d6ac" shortcut="pru" description="An automatic property of type $typename$ with a private setter" text="public uint $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28ac3f07-24bb-404c-a531-90240e1d5575" shortcut="prg" description="An automatic property of type $typename$ with a private setter" text="public System.Guid $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4380492c-27ad-4d3b-b67e-d50d5bf3e4de" shortcut="prt" description="An automatic property of type $typename$ with a private setter" text="public System.DateTime $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14c3bddd-4c1f-469e-89a8-f7aefb312133" shortcut="prl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with a private setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1cf4a15d-62a0-4fbf-b6ae-993214346ea9" shortcut="prl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with a private setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac594474-0f70-4bbf-8bc2-01bef8534eb2" shortcut="prl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with a private setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ca172a4-b48d-4fa2-aa82-f4d4ff64db87" shortcut="prl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with a private setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea3a92dd-c5e8-4aed-89ff-3fab03406574" shortcut="prl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with a private setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="793c381d-1650-46a3-9a76-78a9903c74ae" shortcut="prl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with a private setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60dd5182-e338-4675-8d07-a77637602db8" shortcut="prl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7aa28d27-dec0-410c-a5d1-feda87325704" shortcut="prl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with a private setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0e46427-769f-4a14-ab40-71d9faf7eda1" shortcut="prl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with a private setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1077449-1a1d-4992-af47-0a3ce7ec9313" shortcut="prl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with a private setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4e2e9e5-1f7e-44a1-911f-e0dd21fab5c4" shortcut="prl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c1c2187-6b65-4625-9c96-70c051e35894" shortcut="prl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="827f64dd-d601-4f93-bb09-937dd28e5a70" shortcut="prh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e40dbc0-502f-4626-ae76-e182aac81bf2" shortcut="prh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80a1ec57-3a6f-46fd-8931-16dfaca7665a" shortcut="prh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f28c8fe-0f6c-4175-9221-047f85167188" shortcut="prh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68c7491e-8ad2-48fa-93ed-8f3519251b95" shortcut="prh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1832693f-dcc6-415a-b7f3-dbfd6cdd8e43" shortcut="prh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37f7f0fc-8a57-4004-a539-f03ed0433698" shortcut="prh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="591a58ec-1445-4e71-8ab7-31114b39fd6d" shortcut="prh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5081230-d9d9-4299-842a-208f79579968" shortcut="prh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3af42901-8429-4f88-a406-fa04b390634d" shortcut="prh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebdde375-9184-4b64-b55d-4b256974bea9" shortcut="prh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b367b09f-43d4-4855-8c24-bf9f3f186d67" shortcut="prh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dab9e9f5-a570-41d9-9591-6131e97a522a" shortcut="pr~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="814b672a-890a-433b-b071-27bc259cf9ce" shortcut="pr~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d43e96b4-e3ac-448b-9c1c-32a41ad830d2" shortcut="pr~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9b57e51-9b63-4dfc-b07e-4fcb1d04f351" shortcut="pr~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef81e398-6e6d-4994-9e80-742c3c22039b" shortcut="pr~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="474de4f2-72ad-449c-8816-821ddcfe2601" shortcut="pr~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcbb90b4-5866-4d3c-afdc-833b64ecc0bb" shortcut="pr~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c26799c7-a1e7-4bd8-8fe7-f97012cce601" shortcut="pr~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07eb5eb2-78b1-4c53-82e6-a71005aa63b4" shortcut="pr~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62e120fd-64cd-4492-aa4e-6ac34e844e8b" shortcut="pr~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9addb75-cb1e-49ff-802d-a0de163fc225" shortcut="pr~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08fae86a-bade-4b15-8c88-fd54446547c5" shortcut="pr~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82f8f9ef-3843-4933-9576-412e72cd1929" shortcut="pgb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public bool $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abbc756b-8fcb-4e65-9294-d829bcc87ef3" shortcut="pgc" description="An automatic property of type $typename$ with an empty getter and no setter" text="public char $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa79cd0e-b9e6-4133-93bc-790abf34f936" shortcut="pgf" description="An automatic property of type $typename$ with an empty getter and no setter" text="public float $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb3d4a81-396c-4e3b-9ce2-22ac47240308" shortcut="pgby" description="An automatic property of type $typename$ with an empty getter and no setter" text="public byte $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cbbb7e75-8838-4c3f-9798-f1169fce388c" shortcut="pgd" description="An automatic property of type $typename$ with an empty getter and no setter" text="public double $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4662ce42-e288-4701-947d-611f28cfd891" shortcut="pgi" description="An automatic property of type $typename$ with an empty getter and no setter" text="public int $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6d03593-07b2-47f3-8c09-0c9a65def4f8" shortcut="pgm" description="An automatic property of type $typename$ with an empty getter and no setter" text="public decimal $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ce61445-9131-4b6e-9969-c98635e42de5" shortcut="pgs" description="An automatic property of type $typename$ with an empty getter and no setter" text="public string $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5fa83aac-5343-41dd-862b-8650a3d166cf" shortcut="pgl" description="An automatic property of type $typename$ with an empty getter and no setter" text="public long $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4f08a90-c83e-4071-bd8f-affdff3d4a9a" shortcut="pgu" description="An automatic property of type $typename$ with an empty getter and no setter" text="public uint $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24413ff1-cba0-4648-bd4b-787f70f5522b" shortcut="pgg" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Guid $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c356d00a-d166-4e5d-b1c8-43d1e901f8c6" shortcut="pgt" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.DateTime $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7c001a6-86a0-42f9-90fc-875bd2110e49" shortcut="pgl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="534ea61b-d54e-4410-970e-92210f6e8348" shortcut="pgl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5a81c19-ceed-43e3-953a-c93a2d1a887b" shortcut="pgl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ffd73cfc-9af0-45eb-8242-2bcbd3c7ddac" shortcut="pgl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e12f6787-577f-48f8-9117-f5c6235e2d69" shortcut="pgl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d25fec8-e3e9-41fd-8b48-45762f042a72" shortcut="pgl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ebaa516-ef19-48e7-89ea-06a15970b36f" shortcut="pgl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a9670ed-0926-41a7-8904-7cf3cfc60bb7" shortcut="pgl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de7ea572-2f7a-48f0-be0b-87a8f954993c" shortcut="pgl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0584bdd-99a3-4599-b5c7-22ae8d6222f3" shortcut="pgl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78e55a3b-5997-4e3e-ba9a-3571cbf3735e" shortcut="pgl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84c1eabc-b67c-4b3b-855c-ddd6296e2c82" shortcut="pgl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87b0e52d-fa45-42f4-ae67-ef5e4b213ecf" shortcut="pgh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6135b5af-39a0-41a1-99c1-d60592985392" shortcut="pgh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b50b2210-2f03-45c0-8646-be79776b4a3e" shortcut="pgh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35fd0a69-0fe6-4b39-9c98-d6cabee74d69" shortcut="pgh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2015441f-ec5c-4611-aea6-30caeb819eff" shortcut="pgh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca5a6043-8dd0-49fa-ba2a-400e44ed803f" shortcut="pgh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ceb7969b-e353-44e4-9904-70e0997f1287" shortcut="pgh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38c341d8-5036-4198-b3fc-29aeee4be7d1" shortcut="pgh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6cfb894-bab7-445f-b58c-d74c69991920" shortcut="pgh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="295154cf-a8a9-4ef5-9102-bf777355672f" shortcut="pgh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="790fc929-fd5a-483c-89df-ec6877ea383d" shortcut="pgh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f11ce96b-62d5-463f-98c2-eb5fb143f308" shortcut="pgh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b1c28c2-255d-4d6a-99ed-8a07122bfb88" shortcut="pg~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="214039ef-fb1d-4fd1-97ae-b4a453863303" shortcut="pg~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="662625dd-7903-4473-beea-4b5083b4735c" shortcut="pg~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3acbcca-b7f0-403f-945f-5d238dd5d1b2" shortcut="pg~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4de34ea5-def4-42ba-b2e2-bc368b578fd5" shortcut="pg~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0df985b6-1622-4e75-912e-21e806b8aa26" shortcut="pg~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="263b0e7b-c2f7-46e3-97d1-5691062b4787" shortcut="pg~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e9a38dc-9c1f-4316-b0ab-a42bedc8e0cc" shortcut="pg~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a1dc3f97-2bf4-4252-8065-7c2ddc19167b" shortcut="pg~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb3bef57-104a-412f-a3f8-e8ad2fad42e1" shortcut="pg~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02647361-5e7c-44ee-a240-ea89a1613153" shortcut="pg~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b76110d-dd7c-4add-8c56-f76f6b6d4b4e" shortcut="pg~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fce8dec6-f221-47a3-b82e-b48005da4789" shortcut="vb" description="A field of type $typename$" text="Private $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f5b8c85-d77c-4627-ac35-b8fb1abec015" shortcut="vc" description="A field of type $typename$" text="Private $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd938433-522b-4a2a-97b3-f42b195fb674" shortcut="vf" description="A field of type $typename$" text="Private $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ccd4c6c2-1162-40ba-94f5-083c8fdf3304" shortcut="vby" description="A field of type $typename$" text="Private $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5f663c2-c064-421f-9801-375f1843fb89" shortcut="vd" description="A field of type $typename$" text="Private $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17e7d98f-cf5c-4197-bf7c-aa30bdc07981" shortcut="vi" description="A field of type $typename$" text="Private $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="572d5ca3-b5f6-4995-850a-5b42e0424365" shortcut="vm" description="A field of type $typename$" text="Private $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5af8124c-b37f-4c8f-b27a-e27f88f11d3c" shortcut="vs" description="A field of type $typename$" text="Private $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4475c845-6fa9-435c-ae6e-a52cb18a0ea4" shortcut="vl" description="A field of type $typename$" text="Private $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3fd39071-7295-473a-88f3-39d29bd4b16d" shortcut="vu" description="A field of type $typename$" text="Private $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a931bdd0-a920-4dda-8cd1-7f3b86c3eb9a" shortcut="vg" description="A field of type $typename$" text="Private $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28a44fcb-5914-4e31-88e7-9e2ecf86dc1c" shortcut="vt" description="A field of type $typename$" text="Private $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d1cc479-effc-46f6-a1d0-d56e801ff0eb" shortcut="vl.b" description="A field of type System.Collections.Generic.List(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31a33639-d83b-431b-ac3e-0c5b61cd096b" shortcut="vl.c" description="A field of type System.Collections.Generic.List(Of Char)" text="Private $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39f63a69-11d3-4a66-9406-2ff6ae3c020e" shortcut="vl.f" description="A field of type System.Collections.Generic.List(Of Single)" text="Private $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4eb9ae30-6c97-4697-b072-4caaaea3c09f" shortcut="vl.by" description="A field of type System.Collections.Generic.List(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ddf107f-6d54-41e6-bce8-3a898254cc29" shortcut="vl.d" description="A field of type System.Collections.Generic.List(Of Double)" text="Private $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e72ec84-a5b3-4dc4-9418-f160b961b8bf" shortcut="vl.i" description="A field of type System.Collections.Generic.List(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2c4f965-1d3c-490a-867c-32b075e4e0ec" shortcut="vl.m" description="A field of type System.Collections.Generic.List(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a153ac1c-66ca-4d2e-b899-76525486baba" shortcut="vl.s" description="A field of type System.Collections.Generic.List(Of String)" text="Private $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b52dbc4b-585e-4c54-935f-fca01d88511f" shortcut="vl.l" description="A field of type System.Collections.Generic.List(Of Long)" text="Private $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c311ac1b-3b61-4571-8f2f-334e433d1112" shortcut="vl.u" description="A field of type System.Collections.Generic.List(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae86be3c-0ba5-487c-81db-5392f7102519" shortcut="vl.g" description="A field of type System.Collections.Generic.List(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29810cef-ba7d-4326-826d-5b852e247598" shortcut="vl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d85ae24e-b07e-4315-9eb5-c39d9e90b9a9" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca1d7c9b-3640-4e2e-bb5b-9284a5bdc337" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet(Of Char)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a523fa5-bab3-4031-8a3f-1f11272f6bf8" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet(Of Single)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2922da3c-e4d0-4893-8b67-7bd9c289aab2" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="947de36e-16fd-4fd5-90c7-b613b5c92f12" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet(Of Double)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76645d28-3aa7-4c1b-a144-cabe94d9a849" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5c7bee8-c77e-4bde-a77d-4403019a75f4" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58976409-5d2c-455c-9b73-4d8f29061926" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet(Of String)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51f29ece-95aa-4a5e-aebf-56999d721401" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet(Of Long)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="287ca638-1981-4781-99a8-7899b12e6beb" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2451335-2349-4f8f-914b-e464304afc1e" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c121fd71-763a-4230-930c-38e29c1ed9bd" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f332d13-9daa-4305-ac24-9d5dfa6b7dfd" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b8ed565-1e27-40dd-9cb4-57f8b0a8b119" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="436068d7-3699-4d88-af0a-30b9855b7faa" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6af57e0d-e05f-4541-a4a1-242733140d82" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88b4d60f-f9c6-40f1-8b68-c7efa1bbcb58" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a31ab136-7a50-4fb0-8d10-22f1a6a44934" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a14310c0-87d2-4eec-a28b-f6c1ca63e6be" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="735eec84-9d05-4caa-8c0c-e590f1b37db5" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable(Of String)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8e560ad-659a-4365-b777-7bb66e40035f" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4c6ff95-8316-4746-8668-f124fc0b61cd" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2935568d-141d-4a91-a002-09d8b052b67a" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="684d6f51-c88b-4b0c-bf9f-848a48aa3d92" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4140558a-cd13-446e-aa28-0ce193ce91bf" shortcut="vrb" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82ab7449-b39f-4c29-b71c-f7829f62b3d7" shortcut="vrc" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d89f2748-fa5b-4347-ae1c-4fafd3f1e496" shortcut="vrf" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="601c6ac0-9327-4a67-b66f-9a64a78b1627" shortcut="vrby" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65d05d01-7211-41ea-8fa3-b8b97d5b72d9" shortcut="vrd" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2ae4dec-f14f-4752-841d-6b4c03a7bea0" shortcut="vri" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5a95770-df43-4650-ac0b-6ba95a2170c9" shortcut="vrm" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fef9564-6b82-4596-b54f-666e8f49b183" shortcut="vrs" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d25d264-1cdd-491f-ba24-ee0b7171f0f6" shortcut="vrl" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef150a23-9a81-46bf-ae63-3f325192fcd7" shortcut="vru" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="128883e2-68f4-4201-9f4a-be62b6e642cf" shortcut="vrg" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0490cf48-dfa1-4b2d-9305-b84fc56244e1" shortcut="vrt" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b28b850-be87-4397-a1fe-164780caa11a" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9dae8597-c4e7-4743-b154-8b4c96a3713a" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eed64c99-6f3b-4faf-af3b-418b7b2c8e18" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="516899b7-d582-45de-8461-84d7fedac917" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01352b4b-5dd3-4a48-904a-005f79b69fed" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d34e5f3-4f4f-41e6-8c61-8630565dad6c" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1732ec8e-e2c0-498a-9315-a7b1d719a591" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae17bde8-2ba3-4b3a-83c9-77dd9ea7e201" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="968638ed-9a7a-4c77-a42e-ccdce7f529cf" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3710ca97-5420-495d-98d9-9164c4fdcb85" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a9b1b154-3537-4d1d-af06-1d2913a924f2" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f81347b9-77cb-4d41-9fc0-e79beef11f86" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd50e7d6-8129-45d5-8a12-426e98037da2" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bde1b09-a5f7-48db-a817-d8d4e8adc66a" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="438a7cc8-72d1-4ad5-bf75-6a86eeb7ab45" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce70cf1c-3c0e-48ec-a2cf-8cfdd6ae49a2" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f3fd7c1-cb6e-41d1-941b-090048a5dac5" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71f75076-9089-4406-acfa-6a06a5c9f952" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79a19ea1-0cbd-465b-92d7-710230fdbe1f" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b4c5824-b4e1-4a08-8dcd-f49b922e3d9d" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8defec8e-aa76-4b84-a353-190d1d4d0fe1" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f64eafec-804b-4026-809d-590c122e9eda" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6beaffd2-fd22-4b2a-a887-1d6b8cc1651c" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="400b5b94-2806-4581-a9b5-083917e6ff00" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb05da4a-2274-482b-8e0f-a638f7d76107" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47e1ea64-0a1c-4d7b-8a56-288559a431f1" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0bf2ece4-6d1e-40f5-88cb-6715381d30d8" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be880eb8-b1cb-458e-81b4-056cb80ee0c4" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ede8671-35ff-44d3-8bec-abc00cac2a21" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9574bb6-88f5-4cd8-9fab-29ba29fdbb77" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47af1ef7-0aeb-4ffb-94bd-88c14be85fca" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3415a43-88ed-47de-84c7-7c9da355c349" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34b422b9-c1b7-4a93-9393-9f461f710560" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99b72ed0-450a-498d-b229-316c3e0447b6" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a7b571d-9ce0-4ca6-95bd-85a031bf9f96" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f41ce0a-7227-4434-a6ca-cd5abbb3e13d" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ab96e78-b59d-48e6-9dc2-5c7b871045db" shortcut="Vb" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="983ed4d9-8d7e-4f01-8d7e-70d1216a5375" shortcut="Vc" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7529caf8-93c4-45f1-9f0c-a5574acf54d6" shortcut="Vf" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="987fa815-3168-4e27-8287-eec5ab8004dc" shortcut="Vby" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="110e7d36-8b6a-4f4e-b198-b593da97dc5f" shortcut="Vd" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de108cf5-1c4d-4924-8761-1396c7fd4509" shortcut="Vi" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="142bf9c9-8e6b-4384-973d-ab33ff3ac066" shortcut="Vm" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87bfc89a-c191-42ce-93fd-ffd20fb24cd4" shortcut="Vs" description="A shared field of type $typename$" text="Private Shared $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13c0e5bf-735b-45ca-a519-eb6789cc4b1c" shortcut="Vl" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c96b561-80d5-4747-88cd-1068491848a6" shortcut="Vu" description="A shared field of type $typename$" text="Private Shared $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="129e795a-f182-40f6-b3dc-213273c3b8ec" shortcut="Vg" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7489f760-0c79-4e92-b342-4fed8f056bc5" shortcut="Vt" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e297137-b698-46f6-8bc3-ef43cbae719e" shortcut="Vl.b" description="A shared field of type System.Collections.Generic.List(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a27a4614-eb1b-4111-8f00-ea9083204a90" shortcut="Vl.c" description="A shared field of type System.Collections.Generic.List(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a2d507d-0db9-4bb8-9932-1e81ce2d6f0c" shortcut="Vl.f" description="A shared field of type System.Collections.Generic.List(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f9b69cb-ef11-4fe1-b6f5-ac79be457535" shortcut="Vl.by" description="A shared field of type System.Collections.Generic.List(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edc3eb4e-5029-4ee7-8560-b6d474335912" shortcut="Vl.d" description="A shared field of type System.Collections.Generic.List(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85b75c52-0edc-4036-8732-2143f7eee356" shortcut="Vl.i" description="A shared field of type System.Collections.Generic.List(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83720e11-6b1b-4476-a247-24e1ce53196d" shortcut="Vl.m" description="A shared field of type System.Collections.Generic.List(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9842ad93-d8a6-4e28-ae95-9db1cd31fe39" shortcut="Vl.s" description="A shared field of type System.Collections.Generic.List(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40849784-de49-42de-8181-f9a0fca41755" shortcut="Vl.l" description="A shared field of type System.Collections.Generic.List(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c03d79f-2cb3-4141-afb7-549cf16af689" shortcut="Vl.u" description="A shared field of type System.Collections.Generic.List(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eca4bb3d-db56-4746-90a1-47d655158dcd" shortcut="Vl.g" description="A shared field of type System.Collections.Generic.List(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24793f56-61b0-4028-8e13-5272f5f0deeb" shortcut="Vl.t" description="A shared field of type System.Collections.Generic.List(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ddee0d6-5016-46dd-8278-d836faaaa98a" shortcut="Vh.b" description="A shared field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0814db9d-5a13-493b-88bd-1e972b527f66" shortcut="Vh.c" description="A shared field of type System.Collections.Generic.HashSet(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="077faeff-02ae-4178-8af0-98e0c39d589c" shortcut="Vh.f" description="A shared field of type System.Collections.Generic.HashSet(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8467df7-bbd3-42c5-b0c9-9071e60cc21b" shortcut="Vh.by" description="A shared field of type System.Collections.Generic.HashSet(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2f6fdb8-8888-417a-9201-161dedcc75df" shortcut="Vh.d" description="A shared field of type System.Collections.Generic.HashSet(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e65611a-b306-4e1c-b9dc-1f3009e7682d" shortcut="Vh.i" description="A shared field of type System.Collections.Generic.HashSet(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="506bbc8a-2dc2-497b-949b-60e7c5c079f1" shortcut="Vh.m" description="A shared field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cfcadf30-bdbf-49d8-b999-d4152ce35af1" shortcut="Vh.s" description="A shared field of type System.Collections.Generic.HashSet(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="421dfeb3-dc17-415b-a970-9a5538f23766" shortcut="Vh.l" description="A shared field of type System.Collections.Generic.HashSet(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9eefbfa1-1f45-485e-b563-334d637d784d" shortcut="Vh.u" description="A shared field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c6a6c29-ff02-47fa-ae04-227b46c2398b" shortcut="Vh.g" description="A shared field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9975d8c-707d-4f95-96b7-8ad04da760bb" shortcut="Vh.t" description="A shared field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1103354-db2f-4aef-a32a-cc744d8e8215" shortcut="V~b" description="A shared field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6191cf50-4da2-43b4-aad1-19cbceb8580f" shortcut="V~c" description="A shared field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8969727d-7859-44dd-a34a-97c2d706c528" shortcut="V~f" description="A shared field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53349ebf-96c1-4f98-9675-01537aa5ac96" shortcut="V~by" description="A shared field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9138584b-3f2f-499a-a746-b901325577e6" shortcut="V~d" description="A shared field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c27f4b24-dc43-4956-af2d-cc9c4723a127" shortcut="V~i" description="A shared field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="923b642f-752d-4b3d-b49b-3c1f7db3bbaa" shortcut="V~m" description="A shared field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d35ab0a-267a-4c44-9ae5-3471ac764e53" shortcut="V~s" description="A shared field of type System.Collections.Generic.IEnumerable(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30f0eb59-2f66-4e40-b6b6-3e4ccc5dbe76" shortcut="V~l" description="A shared field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cbbcfb88-c1cb-42bf-bf15-33d9fcc394e7" shortcut="V~u" description="A shared field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a860433-b146-44ac-b891-3c11ea9d0376" shortcut="V~g" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91bbb4e0-1fce-4633-a427-25e82042a2dd" shortcut="V~t" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7155b663-40ce-49ed-93c5-df9af41c6b18" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f39612fc-5c8f-4619-aa74-3be6bb533a7b" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bbf97cd8-3a6b-4274-95cf-ba3fb46d8949" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b6a9b0b-50f1-4832-bd68-423858879149" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10474d2f-0c22-4f71-9d14-2b77262f2c5f" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cff38d83-7945-41a6-bc8e-93f72880275c" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="461b3ec1-ef73-49f0-b677-2ddcc66683a0" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48205055-01f1-4805-8cb8-6f589bb97de3" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d71a340-8242-4939-a9d1-3f7e999e0deb" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2ab54c2-3a76-43e0-9baf-4c3fb397b23c" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4e3ee0a-9ce6-4e0f-91e1-83e3ec89ba2b" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e93cd32-72c5-4fc8-9dfe-5ddb237faf2b" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0dfe4dc0-d90f-4143-b44b-ef4cb1c1330a" shortcut="nl.b" description="A field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fd49d50-97b3-40fc-a4be-cb41413c4c74" shortcut="nl.c" description="A field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2c978f5-4ffc-488d-b2e4-1957f6d705da" shortcut="nl.f" description="A field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05a4988b-54fc-4e37-b87a-6d70f35da9a2" shortcut="nl.by" description="A field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="50610262-4999-469a-be59-dd70596579a8" shortcut="nl.d" description="A field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b9e0d81-ac65-498e-9bae-0c20ea8d55ff" shortcut="nl.i" description="A field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b897257a-9551-4746-8fe9-946295e4c023" shortcut="nl.m" description="A field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="193e984b-a3a0-4c87-a444-50aed92b6409" shortcut="nl.s" description="A field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b2c8822-6a79-4398-8184-4ce8869a6ca7" shortcut="nl.l" description="A field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5dc9ec60-6aef-46c1-b52e-596c6d0b04fe" shortcut="nl.u" description="A field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5df2bb79-8cba-4149-a65c-a22b29776ae5" shortcut="nl.g" description="A field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b029ef9-c093-470e-82b0-ae2f7b7b6e78" shortcut="nl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0267cc5-aeb4-4d7c-9a98-24ec8ec5942f" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91bfc990-f8b8-424b-8178-3efebe6ad237" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cca68a97-c606-4d69-bd60-6a49b4c35d1f" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f151690-b4d6-4586-ab9d-ca3c86c18f13" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cbe532d5-a5ec-4a32-9a02-fa90e9a3df82" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1219c09e-7258-40b8-af3f-a43d8d52cb30" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d317da57-5f0b-4d12-9828-99228258d6a5" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79e8aa86-5b77-4e6b-ae4a-94c638d392ba" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4306dca-5c6b-485f-a2a9-fc73179b5631" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34655f55-4016-4eb2-aaf1-fb66cc3b1d48" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1e61d80-1483-4196-8b84-e5e2c26c4273" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc58c01c-1500-4813-8cae-2a45609a9521" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf2a6dbe-70b7-431b-9739-3578a06168dd" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12ded563-13e3-4b7d-ac43-150480733212" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29c6944c-5b33-4307-8333-b8bc35354931" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="54d366d2-34bd-4714-84b3-7d3739d186da" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5771b82-2b86-4528-a8ee-5427a307d480" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07ccbf62-d7bb-40c2-9fdd-251dfd013bab" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5739eade-2217-491e-b151-d69e8a42ba77" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0deeb8ac-4a2e-4dd6-b66c-7abe024b99de" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6fe41d3-a76d-4297-84e5-4331b1fa71f1" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc3615a3-feff-4927-92a5-cc98ba0ba885" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b8bc2a0-3d30-4899-b757-e7922394d284" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ccaa2099-13f7-4f3f-9d4f-291d027db8e0" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8dda36d5-95cf-4275-9d67-12dca2a9cd02" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89d1c583-c0c5-4053-a6b2-99a124aa8f02" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="432d3375-e3a6-48a5-835b-6006ed307983" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="777b968a-0615-45ba-8529-22a63b75c4df" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b78e8bed-c929-4c81-8875-edff4844e88c" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ef7818e-a065-4bc5-aed3-d15257ab9101" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7e9eccd-7b58-4e30-8f07-e0b1d879b5c6" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4a75348-811e-4cf2-b109-bdabaa59ac63" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fecc5a0-4ab8-4f89-a187-ceea9f8e2524" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f98e765-3fc4-42ab-9185-8e33643f3b1b" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9a86ac9-2874-42c5-bc87-e2e72f02aebc" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f80b79e-3593-4d9d-92b2-3943ff042fac" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="baa34389-b249-460b-b7a3-20991d83823e" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="50bd8ccb-b4aa-4a9b-82c7-e2dbc56a123c" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce810264-a446-4130-8c66-31a8c3c547fa" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9335cccf-e8ae-420f-9874-45b7806aa74f" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="103e5d20-3d68-4bee-830a-46883a66169e" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13df6a0f-c8da-41bb-8ab0-ce5202b288f0" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e66d6df-6e93-49ab-8f61-9c05c5837b31" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76c144a2-4269-479d-99d6-6a0c5482e11c" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45e11c4d-32ec-4188-8fde-cb09220368cd" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc16f8a7-0305-4ecc-b541-9131f0843f6e" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d724adbd-7743-4555-a40b-b068c9f604f6" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0c28738-5d86-41da-9e34-59f2c3709e30" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa8990e6-37a0-423b-8956-751567baffa9" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43a5b49a-3188-42ed-b3ac-27968796c476" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8696eeb0-5f5a-441b-9be9-770af410a1a9" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8dcc7605-e0aa-42ae-847b-925b0474fa29" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26ad80f6-a157-4a8c-803f-79912a0d4e43" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d6bf32d-70ee-4c0e-ab03-044f4a94b9e1" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6997efa9-727a-44f7-8ded-1b682fc2959c" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fbae47ca-1617-4dc1-9616-2387a9452d76" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a15f9c86-c935-4274-a841-e407974b7097" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a11cef8e-2036-41dd-87be-e65ee4bea8e3" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aefbca38-0186-49f8-a55f-59c7ce93ed5c" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e0622a1-3f99-47e7-89fe-52ac19ed9ce3" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="966f595c-c282-4eb5-b4b4-62930ff00306" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a90124ef-ee9c-41b6-9424-2955d545dee1" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33a2059a-6cdf-4cfe-b2f3-aa2a04cb7ce2" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1545a94-4ed5-4d01-ae88-3ad8ed06c3c2" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="699ac015-b99d-427f-891b-a74895ff40f5" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3654abdd-d7c3-4db5-b2f4-432ad5440d89" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bfcbd273-e498-4283-8fa3-6e8e490ce5db" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15e342ce-2871-435c-84fb-b2af376141ee" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53206bfd-0f1c-4ebb-8b52-f342699310b2" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="734ec5d1-bdac-4bfe-a733-adcad7ace236" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ca7a25d-74d8-4c44-bfd3-bf930a87fbcc" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7bbf17f-e77c-4774-9037-b178b496ce47" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="105e5aa9-d598-4e9f-a652-3f37181819f0" shortcut="tb" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03d8c98c-b61a-4546-a4bd-ed128f86d261" shortcut="tc" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31863779-6897-4ae8-9814-a24451d5f7cd" shortcut="tf" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ad5c854-95a3-42fc-aef5-9b44b6b1ff3e" shortcut="tby" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36e26677-a625-4cac-9ea7-c58cff1789a7" shortcut="td" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3ebc89b-cb2a-46e5-99c8-b7b00d3c3abe" shortcut="ti" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be5f7812-262a-4df0-9af3-56c613021bee" shortcut="tm" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="821a752e-f642-41b8-b598-59dca6e526e8" shortcut="ts" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b453d8c6-175b-443f-aff3-de11ef2fe65b" shortcut="tl" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b021085-fc06-4bfd-8929-8a64a6922766" shortcut="tu" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="478cfe7b-e96f-4e1f-9f30-2179af01ad28" shortcut="tg" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d85cb6f-7021-4ba7-af2e-f0f4fd4b6aee" shortcut="tt" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf177f26-3f8d-42b2-9af6-13849c71cb03" shortcut="tl.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0f80777-e1e8-441e-ae42-dd0c1013e40f" shortcut="tl.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11d76035-5f9b-4c48-81cc-b1d4f58c1985" shortcut="tl.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24ee599c-ef88-4390-a01f-b3893593c588" shortcut="tl.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="557f4838-2666-49b1-956a-ff860311782b" shortcut="tl.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="def04914-d44b-413a-abe0-093f9be1fdaa" shortcut="tl.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf0c50e0-58cc-483a-8af1-8648b6b9beaf" shortcut="tl.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7fe6126-1709-4030-adb3-449e9fb4d192" shortcut="tl.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="543d9c4c-52f7-402f-9297-e5f027c69d7c" shortcut="tl.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae030b32-061f-47fd-8677-bed2ee5d9893" shortcut="tl.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="108a4221-406c-4ce9-a169-520ba8fd20e8" shortcut="tl.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b5287b7-ee99-4e9b-8cc3-49d4b501f382" shortcut="tl.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ecc1b03f-b01e-4697-9d95-69f14c2ff27c" shortcut="th.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c4a0d50-cbeb-4580-b688-e087af1c9c56" shortcut="th.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="541f0595-1eca-4c19-8501-21b84658979e" shortcut="th.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="462cf1e8-63de-4ccb-9004-7e65d8e22161" shortcut="th.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc1ab590-b1de-4960-8f8a-2b651ae76b86" shortcut="th.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c44025a-9b1d-4204-9ece-c2fe6e90ee33" shortcut="th.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="082706a9-0ff3-4866-80e1-6db4b94a4f73" shortcut="th.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c93cfed-7fcf-42d2-bf56-f88b558742eb" shortcut="th.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a9f444df-cd9b-4e8f-bf36-6530376b380d" shortcut="th.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="566e3094-9396-43dc-bc25-0877bc1102d2" shortcut="th.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="995234ec-ffae-4bc2-a301-e4f0fcc9470f" shortcut="th.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08552ea4-393a-4f27-821a-70658b56449b" shortcut="th.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="551be17f-780f-4bac-b063-a723dc2fc78c" shortcut="t~b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f04cf512-f18d-4599-8529-8fa7b0bce4e8" shortcut="t~c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69867d43-0990-4b53-ba35-1f144dfcebc2" shortcut="t~f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a12eac6-8813-403d-be44-8ee94f95b657" shortcut="t~by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6efd7e2-2ea1-4cd5-b03e-28de067a2ba6" shortcut="t~d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84344c57-e5ba-47c8-a19a-0a5d1d4cc13f" shortcut="t~i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c50f49d-79a9-433c-9d91-6ec04e1df4a5" shortcut="t~m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb897513-46c9-4c58-8c4f-5caab9c6d0a2" shortcut="t~s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9328f985-0d62-447c-9eb5-c90d95c9d0ac" shortcut="t~l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="54009497-5010-45cb-8abf-d3d72b284d31" shortcut="t~u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af853aa2-5d7c-4e86-8096-ee984617175b" shortcut="t~g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ccb301a-0720-42a8-aefa-cb16249df8d1" shortcut="t~t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31f45962-d4b7-4636-87cf-c383ca3eedb3" shortcut="mb" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81792134-5e56-4881-82b3-97eaa0476568" shortcut="mc" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe013bf6-c2a8-477f-b336-abcbfa181007" shortcut="mf" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95cf8ec7-4bf0-49c1-88a4-fb5ce4c7e9d0" shortcut="mby" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f669d5f-e0b6-4927-8def-547fd727e3e8" shortcut="md" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5eb3e0da-ce08-4ce1-ab59-1130b7239fd9" shortcut="mi" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa55e8d8-c35c-42fb-a9cf-5fadea77ed6f" shortcut="mm" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc4d58b6-812d-4a9e-a3af-a3cd0a3fa650" shortcut="ms" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="04131a9b-15cd-4f44-a803-2cd71eb220d6" shortcut="ml" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9442e744-fca8-4983-a31b-c12f8afef6d9" shortcut="mu" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="604b3ca7-b59d-4685-a7ad-ccf7eaf00bb2" shortcut="mg" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d61efa5-2eb7-4e65-9fa4-4d7a3d556706" shortcut="mt" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="461428e5-1a07-493c-9986-5b7b00c261e3" shortcut="ml.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d9b6a78-23e8-48f6-a240-c91a3f92b357" shortcut="ml.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fdbc1bb6-3aac-46b4-a0b1-83ff51dea1ad" shortcut="ml.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2383610a-6b00-4d82-88c2-2ad7f71e927c" shortcut="ml.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec3da6a8-d2e8-42ca-b3b2-3de4b358017a" shortcut="ml.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85c5c800-11a5-45b8-8535-4ad9d2ba3c32" shortcut="ml.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4058fefb-2b8a-4b5a-8787-28742abeeec2" shortcut="ml.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a086992-518d-4cb1-84aa-5e351f24b54a" shortcut="ml.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="936bed03-170c-49ad-b1c5-66e1e1f1d8c0" shortcut="ml.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18c84a39-a154-4d1b-b769-9853ca17d6b8" shortcut="ml.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48b3b344-8433-4400-8cd9-37f3f8c1182f" shortcut="ml.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4f57164-d136-44ce-bf80-e4ff266dd738" shortcut="ml.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7daa697b-7c40-4ea9-8c94-efccf9f62062" shortcut="mh.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a54b40a5-0305-452b-a151-eeda31e17159" shortcut="mh.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f17ccf3b-525c-4334-b429-af440834f192" shortcut="mh.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdaf17a0-bef4-4013-903c-851fb3360ee4" shortcut="mh.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1f6d52b-40c8-4b5a-8630-269d38d6e2e9" shortcut="mh.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d594e731-e12f-4fb6-8447-bf0fc232e929" shortcut="mh.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ba195ba-dc55-4f28-85e4-62204f538e16" shortcut="mh.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f78b487e-64f4-4f6f-9eed-d4796b3f850b" shortcut="mh.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b68678cd-1a30-4205-9840-d6165f933505" shortcut="mh.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46d20d3e-de31-48bd-a79b-4ba4e951eb44" shortcut="mh.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73ffa18d-2439-4cf1-8091-3aa62db71353" shortcut="mh.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="282747de-a402-423d-bc64-90aabe703b90" shortcut="mh.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e00faf5-e09d-4785-bad0-6361c50df0fe" shortcut="m~b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0fbe30a6-2cce-4bc6-90b6-c59a02b5abfc" shortcut="m~c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fc3c43c-54f2-473e-a26c-c5761bdd632e" shortcut="m~f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="782839de-c938-4def-aacb-d039ac04bf3f" shortcut="m~by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac164858-8b3d-4ba4-8901-7b0409b3b287" shortcut="m~d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="089a3445-8fbc-4acd-bf3b-075b343e8be5" shortcut="m~i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="224e368e-d696-4208-8a2d-adee528381b7" shortcut="m~m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73c9e9cd-cf8f-4911-9fac-ae8b3453d548" shortcut="m~s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ce778eb-9483-454a-99c3-08e1128e8d63" shortcut="m~l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="642eca44-7755-49d4-9214-97d2d48a3794" shortcut="m~u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ffa734a-9bd8-4254-babb-629c9a128025" shortcut="m~g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a46ad27-c5ff-48fb-89ed-5c889aa3d94c" shortcut="m~t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6ffd742-a940-4126-8e16-f11d4fe382fc" shortcut="Mb" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80a972d0-a1a0-4e12-8202-b299381fcb4a" shortcut="Mc" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="766a9221-e5c1-440e-ac76-c52e72aa4400" shortcut="Mf" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c76c94b-e9af-4981-a150-0abc0f2e31da" shortcut="Mby" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc437586-e3f5-41db-b5dc-bcdd853be765" shortcut="Md" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98645a00-fb83-4cbd-9ef5-66d719379721" shortcut="Mi" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90c9a305-761f-49cb-9326-e4bf4f9630ce" shortcut="Mm" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a356876-7b78-43a6-aac1-6015806a8c71" shortcut="Ms" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09e7ca16-6191-4458-b598-8ba19e0e4197" shortcut="Ml" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f089293-22e9-4f8e-b4b3-3a34e93cb871" shortcut="Mu" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf7918e5-2283-4f5f-9f4c-878d77238457" shortcut="Mg" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a650c2e-0220-408f-b81d-e401f16b63e2" shortcut="Mt" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1703c398-1bf8-4116-aced-d795302a9ac7" shortcut="Ml.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34b0d59e-1e91-41a2-9d3f-2c52f1b48a74" shortcut="Ml.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07679024-0bc9-4c92-82d2-715252be176a" shortcut="Ml.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e7b9625-b1fb-4c0c-b43b-8a1fc3b35634" shortcut="Ml.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31bc788a-7f08-4979-9365-eefebf368515" shortcut="Ml.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7e8a0f4-5596-4f44-aef1-2b0417b4784f" shortcut="Ml.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="995d19ed-ac38-4089-88e7-266aca2f01fb" shortcut="Ml.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd3111d7-76ed-4279-9165-015d9720cc5b" shortcut="Ml.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eee41fb3-7494-48c4-b676-e8f3f87ba1d2" shortcut="Ml.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="543eb108-209b-44dd-b707-494b01f7430e" shortcut="Ml.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="093b6828-6b6b-49a0-90a9-518c88de2293" shortcut="Ml.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63f6553d-7ca3-48ac-94c5-fa19e6538808" shortcut="Ml.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1efcb6db-628c-4c69-a6b8-524f94a37186" shortcut="Mh.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="acf7104e-f9e4-4b88-9add-a4898b1c3b89" shortcut="Mh.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87bd83e8-af1e-4adb-947a-de79e1984432" shortcut="Mh.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30b80940-29a3-4b29-9dbb-f49df88d580b" shortcut="Mh.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fceca333-fde4-498e-b5ca-966bbc5f72df" shortcut="Mh.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1f84d4d-458c-40a1-8153-2812a27d2eba" shortcut="Mh.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdac554c-4b32-4f00-a037-392e352aad9d" shortcut="Mh.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c3f99fda-b254-427d-8d2d-4ccf9214f413" shortcut="Mh.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="418fea05-2b00-46c6-afd5-0330b6967308" shortcut="Mh.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d4bd5aa-08a3-4cca-b5d3-50c493fb8bd2" shortcut="Mh.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3c89c9e-1a75-48f6-9669-95a46f32d4ca" shortcut="Mh.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f2588147-fc2d-44f8-8022-c7aca364891f" shortcut="Mh.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf588e0e-e684-46b1-ac29-ed54f0e1257f" shortcut="M~b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e3a4147-0a53-4e54-b0ea-654957980107" shortcut="M~c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e453be6a-4a99-45ea-ad33-338eec6fc52c" shortcut="M~f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d583e1f5-cb61-41ca-ad71-907795f38f42" shortcut="M~by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f38f720-6e64-44f1-889a-7bfb223038c6" shortcut="M~d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e18cb5f5-2eab-4831-a2a2-e6e7b9b3ce7b" shortcut="M~i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fbb2f5c-219b-4b1c-9633-1d2cdab5f752" shortcut="M~m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0033caee-7645-4da3-855a-2b7242e88c76" shortcut="M~s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1af7466-eded-4004-b5e2-36ffd70af51b" shortcut="M~l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5693f1eb-fa27-4c8e-aa5b-bcad7e7853ac" shortcut="M~u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be6fbef3-c91f-4877-ac36-5488a45b1f75" shortcut="M~g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c474d2e2-ae64-422c-bec2-33b1e54b978e" shortcut="M~t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dad875ab-4fc4-40c0-b748-cd2227855fef" shortcut="mb" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="baa1380c-a833-47de-bae5-72e37c8cb50f" shortcut="mc" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e2454ed-96b0-4086-acd8-c159cd924527" shortcut="mf" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c6f3595-1891-46f9-9613-98c563a5342c" shortcut="mby" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13d78831-ee3c-45a2-98ca-81d104155618" shortcut="md" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c18672ac-39f9-4543-abeb-b7bf648c4c3c" shortcut="mi" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d046f02-67dc-4e05-938c-6bd5b7b5843a" shortcut="mm" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="acb4073f-9003-41e7-af54-90ef873d1851" shortcut="ms" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed830307-d45b-43ed-afb7-59379f4eb673" shortcut="ml" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="369a002b-a2cf-4ad3-ad32-d51c95acb440" shortcut="mu" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e135c5c-beaa-402a-a030-cd1f69202710" shortcut="mg" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17d97321-9470-4781-90b1-9b2a5c47d5da" shortcut="mt" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="148284f4-50b8-4757-8c32-551e0b7e7a8f" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c7696ab-bea8-4cac-9a53-719e5de3ba4d" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8ea285b-1066-4cc7-8428-6e81aa082d93" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83f0ba96-048e-4e2e-b196-8a9ef58ef397" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="54b2abe2-a05e-4998-ab48-dc5afb9a42a4" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="571ceb92-1c57-4866-b594-0f11ba218f77" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="acfe346f-06e8-4be2-a796-6c1c96821b8d" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e98790ac-4956-4ff2-a415-7532dd47b149" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98ba3b48-d6b6-4934-b415-c0f081383037" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26ad9cf1-5595-4733-ad92-cab309eaa240" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed2fc4c6-82ae-47af-923e-78ac3d4624e1" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9663564a-10d4-43a5-aebd-bcbb9e3f1fec" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e5e8f9d-9533-4221-8539-cb02c55cbbbb" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f42613a-76a2-4c8e-a977-da0173d236fd" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="679e031f-b57e-4877-afa1-279cf3c87955" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d4282e5-6179-4eed-a144-14d2183413f6" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c775a7ed-4961-4916-ab87-86bbbf5864a2" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e73c1320-85f6-4ce5-ae01-52e1255a1c1d" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ebf8f2e-69ba-48e2-a75d-a6d1f0eca2eb" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85e4137b-53d4-43dd-a1d9-d0f1efdfed00" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e27ad9fa-ce5d-4be3-af69-1f44f4a9727d" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4074d881-2037-4980-9052-31a8762eaf04" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="160e0c80-10b3-4bc9-b537-2c31450177d4" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42a494ea-efc4-470f-aa3f-88ea91a83232" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df476446-2588-41ed-90e4-3e5998e99422" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69a50be9-374d-42cd-bdd5-d8d8c7fa72de" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb03d63e-8b3a-4353-8fa6-cccd01995203" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96c9dd26-7ec8-454b-9c52-4eb71df96879" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae1bb27a-487c-4701-87ef-1033c251d349" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4b9cae5-2c14-4ffe-8570-c0b917525618" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="612e1dc1-a411-4bf8-859c-5a93d3b458f7" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aaa29a71-9758-4436-aa70-b05349b73522" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e56fb384-5534-44d7-a565-683a4dbff959" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="165dd7d5-dca3-4c37-8a5c-af8c9cd69bd1" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d36e4da9-9c26-4e9c-beed-a0bab1941a11" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb891918-c997-46bd-a914-642b613b7bf0" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e54f0a61-8ef8-494c-b91a-7cf7a13bd638" shortcut="Mb" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="037afe85-5dbf-4d25-89a2-b9a8d8badc7b" shortcut="Mc" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca1638d0-0220-4014-90f6-ee1190ae68fc" shortcut="Mf" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fab7e9b-cb4a-44c8-8789-ed7233a3e562" shortcut="Mby" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f8a4c18-bc06-4fb4-ac7b-a9d007a62a1b" shortcut="Md" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af7f198f-59d6-436a-8199-3018d4a9a4a1" shortcut="Mi" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3122ead7-ce08-4473-8e21-ef864c6bf869" shortcut="Mm" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f842360-adf2-4be0-8f63-51442ebe80fc" shortcut="Ms" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c374380c-f9aa-4408-87de-c1080893daa0" shortcut="Ml" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b1eb60c-94c5-4d79-a8d8-b1ba1cd203cc" shortcut="Mu" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5486a63b-56b2-44e2-832f-501465b933cd" shortcut="Mg" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b36123e5-a9d9-4ed0-a20b-fd806872cb8a" shortcut="Mt" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1da542bd-b996-40c6-b7cc-5ba731f7f60c" shortcut="Ml.b" description="A shared method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56d6aacc-7bd1-4ea5-a7b1-791461cd69bc" shortcut="Ml.c" description="A shared method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="547dfc61-4f64-4cad-ae45-505cb006bc59" shortcut="Ml.f" description="A shared method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="baa86a70-93d7-461f-958d-7c8e34c11bac" shortcut="Ml.by" description="A shared method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78741fcb-5320-4dcf-b428-2acf3b542fde" shortcut="Ml.d" description="A shared method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9dba3ed1-ace8-44e6-a560-98c12c7493c8" shortcut="Ml.i" description="A shared method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6be16519-84df-460f-b354-a21e575f7c85" shortcut="Ml.m" description="A shared method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80202323-fe4b-4199-a19a-c21f716e3247" shortcut="Ml.s" description="A shared method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fc7e578-5b02-43bb-8cc7-60b065f38064" shortcut="Ml.l" description="A shared method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8289b27-ee85-4893-9907-4d0f3a23b41d" shortcut="Ml.u" description="A shared method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64e5d5a3-9ada-4f65-b2b6-d6c8c4b8539e" shortcut="Ml.g" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f24d7ea-c262-430f-9aa6-e178b1bde35d" shortcut="Ml.t" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80d497c5-a7aa-4cce-8faa-d44b17349b6f" shortcut="Mh.b" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4dd56dc-596f-4f96-abdd-46402eca11a4" shortcut="Mh.c" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="600ee29f-9d30-47f6-a8f7-31fd9d7cd701" shortcut="Mh.f" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33569783-59e0-49c9-8838-d672a2c58425" shortcut="Mh.by" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a15fa4c-1def-4672-a54f-82f4a781e0ed" shortcut="Mh.d" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2485861b-0f57-467e-b3e2-a0fb19fe52cd" shortcut="Mh.i" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a350f20-e65d-44f9-a034-784e1009de6e" shortcut="Mh.m" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="024d2b30-5e6a-4f19-95be-ac909fed2a43" shortcut="Mh.s" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e745300c-776d-4075-8ef4-56e038d00b8b" shortcut="Mh.l" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e62335b-acb4-47fb-ac98-9c35e87e5d96" shortcut="Mh.u" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c838468-6b2d-4d84-8ebf-b92311c2e9a8" shortcut="Mh.g" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c61664c-b39d-43e1-8314-7348c167c06e" shortcut="Mh.t" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6b954a7-4e92-4818-9fd6-f4e394efcf5a" shortcut="M~b" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10781f5d-5e54-40cb-9738-a7127158c27b" shortcut="M~c" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43c3ab28-41a6-4a81-819b-56d90a5ce670" shortcut="M~f" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13282ae3-1f5d-4be7-a742-f47301846c79" shortcut="M~by" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3244bda-6e95-4e9a-94bf-5838b0927be3" shortcut="M~d" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98dfde21-3465-44c1-9dd6-4d01194a5721" shortcut="M~i" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48359d26-ec1a-49b2-92c2-0effd7712201" shortcut="M~m" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0480e941-20d6-460d-b61e-bd5c7d5803bf" shortcut="M~s" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46af2279-66e7-407b-809f-46b579719491" shortcut="M~l" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e146d1a-a658-4f75-9b11-49ba8d1b04bd" shortcut="M~u" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ca1026f-77b9-4a80-9724-3559a9fb213e" shortcut="M~g" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78d96efc-feb4-4410-b2ba-7ff9d4f5cce7" shortcut="M~t" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71c215aa-4a24-4ccc-a811-7e67f6fea77b" shortcut="pb" description="An automatic property of type $typename$" text="Public Property $propname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b159b7d-d1b5-4d46-85e9-1c4ee6e60822" shortcut="pc" description="An automatic property of type $typename$" text="Public Property $propname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="697a4a7e-ad5b-43bf-99cf-5dd2662ba09f" shortcut="pf" description="An automatic property of type $typename$" text="Public Property $propname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ca89bae-18b7-4428-a456-3eb2f9667701" shortcut="pby" description="An automatic property of type $typename$" text="Public Property $propname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e94b24ef-029d-4126-9637-dab3541cf3b0" shortcut="pd" description="An automatic property of type $typename$" text="Public Property $propname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec43aa7c-0c94-4c71-ab33-4c685b78b652" shortcut="pi" description="An automatic property of type $typename$" text="Public Property $propname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15cf1e25-9c8d-495e-a97f-b9a5b6c548d6" shortcut="pm" description="An automatic property of type $typename$" text="Public Property $propname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96bc77f1-7d02-4011-b9ef-4db0c7f31401" shortcut="ps" description="An automatic property of type $typename$" text="Public Property $propname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7e9d828-a09e-40ca-8a48-71d6b36ac8a4" shortcut="pl" description="An automatic property of type $typename$" text="Public Property $propname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d38c1723-5f5b-4ca8-bbdf-10d665c0be4c" shortcut="pu" description="An automatic property of type $typename$" text="Public Property $propname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9dbb207-071c-4e9f-95e6-a74ba97894bb" shortcut="pg" description="An automatic property of type $typename$" text="Public Property $propname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="defe4784-da05-46ed-bcb5-a46fac0dccce" shortcut="pt" description="An automatic property of type $typename$" text="Public Property $propname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0456af56-4c91-4638-b2e6-840ef316bdd6" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67eb164a-413d-4b24-8fb1-0ff229f0649e" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List(Of Char)" text="Public Property $propname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34b04a74-fd56-4d97-9d20-f8ee507ee3ef" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List(Of Single)" text="Public Property $propname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="539fd3b7-2368-4804-995b-1883fb2b4118" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="008a9525-0680-4c5f-a041-d872b1f32c08" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List(Of Double)" text="Public Property $propname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6947ffd3-d895-4fd3-ab51-a08f3a957da8" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c21defca-0e61-452c-889b-859fae226b00" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f868404-ded8-487e-9557-5b30780d214d" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List(Of String)" text="Public Property $propname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5d24fa1-4261-4aa2-bbe0-ba48af151da4" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List(Of Long)" text="Public Property $propname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7adbe36-59e7-460b-aed6-04606faf6bcd" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf2c5c28-80e4-4c16-ada5-30581114ceef" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d3bf860-0c7b-41ef-b79a-8d7878737347" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8ec173c-773e-4c53-bedf-f57e99f8ccad" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c05fb48-aa5e-4b9a-b4e3-0eaa021c3bd2" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet(Of Char)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74705327-19be-4df9-be6a-a992e8015780" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet(Of Single)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a0081d8-1f45-4480-9cad-9f125417680f" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="007193e8-9765-43e5-a6fb-a5311a53e254" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet(Of Double)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="820f1bd7-9030-4271-b17f-2e135c97661e" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce61d909-aea2-4fcb-87d1-47b3c5d7620c" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="405e80e2-2e7e-4fd2-8a64-32b16816eb31" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet(Of String)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21963e35-5086-42cc-86f3-09a7174857ba" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet(Of Long)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="046d150f-d8ab-4e92-8d00-3fdbbe1e66bb" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="922d6bdd-2eba-4e0a-a44e-6505b5c319d7" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e5bde2b-82ee-4a3f-9c97-29d5d985f30e" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe85658b-bb02-45ce-a1b7-afa774c392d5" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d3e60b8-7b9a-4b60-8f75-d028be632edc" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Char)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ed11e04-f07f-4322-a1a2-98dea5240225" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Single)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca5067b0-750f-4906-8508-3d3e4c97cfc0" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06d9a169-5b74-48f6-b910-23f7905f92b0" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Double)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8938ce73-8f26-49b2-adaf-cdacc5c8841b" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5d3a4f7-f5c9-4e6b-8125-769606d1f2ab" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ebe91fd-7472-40ff-8942-f9cb036e4c9f" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable(Of String)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc87b4a7-0196-43c1-b0eb-77fac96d086e" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Long)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c1fb5e1-2612-4964-9744-3efbd429daac" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d35ec471-d30e-4d2d-ac0d-fef0203d24ca" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8009133-be21-48f4-9f6c-0112335044d0" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
</TemplatesExport>