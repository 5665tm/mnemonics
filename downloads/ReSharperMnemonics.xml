<?xml version="1.0"?>
<TemplatesExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" family="Live Templates">
  <Template uid="9073f23f-ddcd-486f-9c1d-376f0947573c" shortcut="c" description="" text="public class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc4ca1d4-f947-4892-b138-3905ce2164cf" shortcut="a" description="" text="public abstract class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="437689a6-7b7a-4ac3-a5e0-7e3a2fcd24bd" shortcut="C" description="" text="public static class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92ad5505-3303-4740-9dcb-038ff47e1e87" shortcut="i" description="" text="public interface $INTERFACENAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;IMyInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4c4c412-3e4f-4ea1-a25b-1fe21b816755" shortcut="s" description="" text="public struct $STRUCTNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;MyStruct&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb53a2ac-87d3-4265-a9eb-002e73511adb" shortcut="e" description="" text="public enum $ENUMNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;MyEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4235fcc2-ca7b-4926-af90-f18c1ebc2c12" shortcut="c" description="" text="Public Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c75e737-b81c-48d0-922f-3dc1a6bf136b" shortcut="a" description="" text="Public MustInherit Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53b0994b-7ca0-4270-a09a-90f32f1b6b7c" shortcut="C" description="" text="Public Module $MODULENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="MODULENAME" expression="constant(&quot;SomeModule&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19d017c3-5e17-4bbd-a3d7-810493200a4d" shortcut="i" description="" text="Public Interface $INTERFACENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;ISomeInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41211575-9c8a-4f25-af0a-3db227988cd0" shortcut="s" description="" text="Public Structure $STRUCTNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;SomeStructure&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7693ea88-2fe6-4919-8d83-2f0e1fa94a54" shortcut="e" description="" text="Public Enum $ENUMNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;SomeEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0cd583e-1084-4d09-9893-ccd3eebab351" shortcut="vb" description="A field of type $typename$" text="private bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="918f771a-a64e-4fbd-ab5f-cf382776b663" shortcut="vc" description="A field of type $typename$" text="private char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c4fe54e-cf17-4f93-9b72-396e76f30e6e" shortcut="vf" description="A field of type $typename$" text="private float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b100d8f-f45a-45b8-acba-c6b82d4fcf5d" shortcut="vby" description="A field of type $typename$" text="private byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="648bbcb1-b0ef-4318-92d4-334c2c335afe" shortcut="vd" description="A field of type $typename$" text="private double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d528fdf-49b9-4f37-bbb4-0fa9c832cf5c" shortcut="vi" description="A field of type $typename$" text="private int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9537eb5b-3112-4bf0-9571-3c66f5e01d2e" shortcut="vm" description="A field of type $typename$" text="private decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa63849e-8015-4533-9f1c-0db173a27eef" shortcut="vs" description="A field of type $typename$" text="private string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2b132fe-fcca-4d99-80d5-7aebd842a7a8" shortcut="vl" description="A field of type $typename$" text="private long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad2bde16-40a4-4a8a-8de0-79e27f4cf327" shortcut="vu" description="A field of type $typename$" text="private uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d993185c-95fa-4bf4-97ae-6daae36c9250" shortcut="vg" description="A field of type $typename$" text="private System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f0dccf3-9912-4e1f-92b6-1bae061d5b3f" shortcut="vt" description="A field of type $typename$" text="private System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3cfd35c4-4ca3-4744-aacf-945de93137ad" shortcut="vl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt;" text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1fb05ae5-fb7a-46a1-bffe-e76d046743ec" shortcut="vl.c" description="A field of type System.Collections.Generic.List&lt;char&gt;" text="private System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="691b8ae1-3aca-4c44-b8eb-6da22afbd9c6" shortcut="vl.f" description="A field of type System.Collections.Generic.List&lt;float&gt;" text="private System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed3c40a7-a510-4aeb-8f55-506aedcc5419" shortcut="vl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt;" text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3948c425-e995-4a23-b98c-837926fbe460" shortcut="vl.d" description="A field of type System.Collections.Generic.List&lt;double&gt;" text="private System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad010043-3ed5-4eb4-b88e-a48f11d65f93" shortcut="vl.i" description="A field of type System.Collections.Generic.List&lt;int&gt;" text="private System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd5a625a-b5a1-4630-9981-5e58cffd6c03" shortcut="vl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt;" text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1a4ccad-ad10-45bc-ad4a-880d3aefd4a0" shortcut="vl.s" description="A field of type System.Collections.Generic.List&lt;string&gt;" text="private System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc3ef3ef-c1f2-40bc-be7b-42ab57e2ab27" shortcut="vl.l" description="A field of type System.Collections.Generic.List&lt;long&gt;" text="private System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3c40faa-3a7d-4cd8-89ca-fc934e8d34fb" shortcut="vl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt;" text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="501d5946-ff85-426e-b419-825b943412bb" shortcut="vl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f22439c-9f11-4331-9433-7b27e16816a1" shortcut="vl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cdc82762-2a70-4707-9207-9a0210667764" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c3aab4a-aa90-449b-a362-4af59154cfc5" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="925cd83f-be04-4b31-8e64-3e6f104c0d5a" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06fe4339-ef7b-4999-b4e9-2e512766bf85" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53efd02a-4afe-47a9-b38e-5b012bfdef43" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="451c8d86-1ba7-40ae-acec-73f28aeb2a28" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d16ef40d-2934-4817-a301-032f1166fbe6" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01cff30e-b081-4df1-bc8f-79d78987a1a3" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48074fb0-9387-4f58-b7aa-4e0adfd038d6" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6c3affc-901b-472e-8be8-04a9c762632f" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51f9a20d-1eb1-4865-954f-a0aa069a09e7" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f5d7a45-3f68-4307-8173-5509d7f61a27" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c68dc5c-f458-44c3-b359-9f6ce011cbec" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6715ab5-129b-4cb1-928a-e6995391fc3a" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e5851b3-8395-45eb-a632-daf8cd9720ed" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc6ea962-e0ec-419c-bc2b-73dcaf741579" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c9a21bb-7e78-47b6-b1f0-92831884a80c" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fe47eff-5fdd-47ea-98fc-c7f0675fe8c5" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="61edace4-7074-4de0-893a-5b404d0522e6" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edf261da-6cb1-40d2-804a-6efe46628571" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e168c4e3-9654-4039-9408-c5f36bcbb576" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27abb9ed-862a-4cb8-a1d1-5f5897088306" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1e0b2f4-bf33-438b-912b-0d299009c74b" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd6fce8d-1b82-455c-a4bb-0cb840e2d473" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c588b75c-9dbe-40c1-8ce2-5963cdcaa36a" shortcut="vrb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ecdd28ec-1012-4c2d-bf5d-28a164d8a7a6" shortcut="vrc" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11307842-ca48-4830-a202-cd12c8cc02a0" shortcut="vrf" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="080af735-c5d4-49e1-9d51-38cf99e670ed" shortcut="vrby" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40d49f16-e6b0-4ba3-8d2d-99f55672874f" shortcut="vrd" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="852aec08-0f86-4c6e-8422-d3eef8679931" shortcut="vri" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb974130-402b-46bc-851e-30bf1f4363be" shortcut="vrm" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c6fad3e-1ec2-4ae0-beee-4bb96e45cad0" shortcut="vrs" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57dfd4d3-2c0e-4171-9bf8-86c62ae7d592" shortcut="vrl" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ac45403-c934-4939-83ce-931fa796110f" shortcut="vru" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ce53dd5-bed8-4027-82f1-6014679c016b" shortcut="vrg" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f1e8ce9-8005-4e8c-b4d7-8bad7b9a5235" shortcut="vrt" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c3f5b42-32bd-4ffa-a519-930ab8832271" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdcbf6de-5509-4a1e-9c69-bdc601a51451" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="759879f2-666a-459d-b83c-2d06c973b03e" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7214abe1-01ca-48eb-9bde-276d5d60f626" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c57b6a6f-ca64-471d-8af5-028c8b471878" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1028055c-5bc0-4719-b812-c25769928830" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="844f6d2e-d19f-4d7d-9712-d7ff5a5c012b" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="881e6d76-46a7-4922-8bed-48f690d4602a" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="634b68ca-fbcd-4cf3-b630-e23e0f90490b" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="852f1306-d54b-404b-b60c-ff40f4a06377" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00fb8b04-05c9-4dba-820c-1ef0e8d92bc5" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84dc69cc-5450-4b2b-afd3-5254d2336b4d" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3813bb0d-3f7f-4acc-bede-b4098de354ff" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="735e2b91-cdf8-4a41-8794-cfc266fae66d" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33c0b2fb-b0d9-4d6e-825b-71eba1e881c7" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="112be953-bb1f-45b5-8a16-6d849c10bc10" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ce839cb-26a6-4855-b3cf-12e4f761a333" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb61ba38-183a-4f66-895e-636b0d50f7d4" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eca6493a-ed37-459b-b148-ea155cc465fd" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7818cfd9-c896-4f6b-9043-0ca76f9ac63f" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d5fb892-2362-416f-a630-e91b3e175441" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18d16545-a96d-4371-b88b-300b8929fe1e" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40e2e8d2-f530-460b-b296-c1331012a440" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d14f7bb-bdfc-4981-b397-901ebf7796d5" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7eeefc04-5234-49c7-b3fc-37d4ebd6b977" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3fda4ae8-ed1d-4d78-b8a2-4761d91210b4" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fb2a6d0-ecaf-43c0-9833-aa0e0c390b40" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20696561-b095-4fdc-937f-a970511db7c8" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="183e5078-feba-4396-8a45-6b45ad9599f3" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7b4a27d-ebe7-40ea-bc2a-c6a571df35c8" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="04a42fae-a639-44f3-8286-a644fc1777f2" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72337c95-dc5c-401c-ae98-5aa32f9d26f5" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="136ba8e9-487b-45f9-ab74-1b799f277c89" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f72ae0e3-a0b2-4a01-9e71-9b7cb3be5093" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a83a9409-a91f-434c-b223-4c3cd5965870" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="052dc39d-43a7-43be-a036-63501ace0035" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2d059ed-1e91-4c20-99a0-7d296798cb66" shortcut="Vb" description="A static field of type $typename$" text="private static bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bb98be7-399a-4d87-8704-cbd67e5e6895" shortcut="Vc" description="A static field of type $typename$" text="private static char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d4fbdc4-860e-4ff1-aebf-1bc8fd960689" shortcut="Vf" description="A static field of type $typename$" text="private static float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18e4887f-c212-4b0c-a644-892fc0702699" shortcut="Vby" description="A static field of type $typename$" text="private static byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="353f39b4-5f77-432b-abf1-cd30cde2e1cf" shortcut="Vd" description="A static field of type $typename$" text="private static double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f207a3f3-4083-4076-bf0b-e4bfb76400f3" shortcut="Vi" description="A static field of type $typename$" text="private static int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="131662e7-d020-478e-b87c-fe2be04d25af" shortcut="Vm" description="A static field of type $typename$" text="private static decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97fe560d-110d-4161-a77a-1a25e510df8d" shortcut="Vs" description="A static field of type $typename$" text="private static string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2c013e6-6f6a-4e5e-9ca1-84544902f404" shortcut="Vl" description="A static field of type $typename$" text="private static long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db656ea8-3367-492f-998f-1398d538e652" shortcut="Vu" description="A static field of type $typename$" text="private static uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a43f6369-8e5d-44ff-9fdc-94545eec1d2e" shortcut="Vg" description="A static field of type $typename$" text="private static System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c692fc87-1a76-4417-8500-8d2c5783e665" shortcut="Vt" description="A static field of type $typename$" text="private static System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00d63ee8-46db-435a-943b-9ba798d46c74" shortcut="Vl.b" description="A static field of type System.Collections.Generic.List&lt;bool&gt;" text="private static System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e878b64-18c5-46af-83e7-514390d0a77f" shortcut="Vl.c" description="A static field of type System.Collections.Generic.List&lt;char&gt;" text="private static System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39905067-ffeb-4b4b-910e-ea14db9c7497" shortcut="Vl.f" description="A static field of type System.Collections.Generic.List&lt;float&gt;" text="private static System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="917e0637-fbeb-446c-909a-dfb2703310f9" shortcut="Vl.by" description="A static field of type System.Collections.Generic.List&lt;byte&gt;" text="private static System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="287de1d4-483c-412d-b282-dbb1b24d8bf2" shortcut="Vl.d" description="A static field of type System.Collections.Generic.List&lt;double&gt;" text="private static System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2f8b40b-3497-4f5a-a592-b7b474f82022" shortcut="Vl.i" description="A static field of type System.Collections.Generic.List&lt;int&gt;" text="private static System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d810885e-21fe-40d5-b4e3-a54e35bca1da" shortcut="Vl.m" description="A static field of type System.Collections.Generic.List&lt;decimal&gt;" text="private static System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="baa80351-efd8-4457-a876-230ce66fea52" shortcut="Vl.s" description="A static field of type System.Collections.Generic.List&lt;string&gt;" text="private static System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f1c8712-b8b0-4a45-b51e-f6c844837b34" shortcut="Vl.l" description="A static field of type System.Collections.Generic.List&lt;long&gt;" text="private static System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e3fed36-cd94-4db7-b89a-acf4af436a3d" shortcut="Vl.u" description="A static field of type System.Collections.Generic.List&lt;uint&gt;" text="private static System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df4dbd8c-23bd-4674-9db0-9e5c069dc4fa" shortcut="Vl.g" description="A static field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private static System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71bc0fe4-e418-40a0-ab00-b09b6ab3d7a3" shortcut="Vl.t" description="A static field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private static System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a9d162dd-3cd4-4d3e-a382-e27c943f3cfd" shortcut="Vh.b" description="A static field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private static System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18f93016-139d-4ed0-95ce-c8eefa4a41a0" shortcut="Vh.c" description="A static field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private static System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11ed4509-bd77-4952-bac9-19f1bcf3358e" shortcut="Vh.f" description="A static field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private static System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8392e0e-8e1c-4042-b173-7eb5155b56a9" shortcut="Vh.by" description="A static field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private static System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da132387-d9ce-4fed-987a-1fcbdd0b2163" shortcut="Vh.d" description="A static field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private static System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2db597c7-3f96-4bb7-bdc5-1207263a7f60" shortcut="Vh.i" description="A static field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private static System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07834bd3-25b5-4020-8911-d28085fe14a1" shortcut="Vh.m" description="A static field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private static System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="717ca7a4-7115-4d0e-8e6c-492240b3548a" shortcut="Vh.s" description="A static field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private static System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76a40b67-340e-4119-bafd-40a76055c5b8" shortcut="Vh.l" description="A static field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private static System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20f31ad4-02a6-4dd5-878c-220b10735b8b" shortcut="Vh.u" description="A static field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private static System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77fff7aa-8429-4bb3-b2b4-244cea622080" shortcut="Vh.g" description="A static field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f83748a-2d28-4ced-9418-1ce81a1fd622" shortcut="Vh.t" description="A static field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="144231bc-a087-4595-9322-f6ae36c939d0" shortcut="V~b" description="A static field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private static System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8100587f-1e70-4631-940e-546877d015e2" shortcut="V~c" description="A static field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private static System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8201fcf-2370-4804-98a3-ed82bde064a1" shortcut="V~f" description="A static field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private static System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40b5a34f-1aa5-4e3f-9791-dfa2330d0de1" shortcut="V~by" description="A static field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private static System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8119b6f7-8661-492d-87bb-45e77199ba3a" shortcut="V~d" description="A static field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private static System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f112974-6d57-4ae9-b2ab-62e58cdc4b42" shortcut="V~i" description="A static field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private static System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0d08623-17b5-4bc3-a4f1-49909edbfa1f" shortcut="V~m" description="A static field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private static System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="593d454e-e707-40e0-9c39-c198e8704e33" shortcut="V~s" description="A static field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private static System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6af3563d-97f3-41f8-90f3-221b1cb555be" shortcut="V~l" description="A static field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private static System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea4ae1da-3357-497f-910d-a7d8ea5feb9c" shortcut="V~u" description="A static field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private static System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abfa170d-c891-413d-85af-c2c4c3f37fa4" shortcut="V~g" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab417324-81b2-40ab-baa6-659bb63d7cac" shortcut="V~t" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2cbf75f9-a509-4c37-8cf8-f0ee1e543b7f" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="private bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0a405fe-18ee-4655-87e2-23be4c27bcee" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="private char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22e7c622-c3ea-4b03-b1ff-98ead32b1ca4" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="private float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4e35984-04cf-4901-a47c-1d9849557ebe" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="private byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56678498-9f6d-4d26-b04c-c64ad4849ef1" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="private double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82d9c8df-bacb-4568-867f-15c32b972f7b" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="private int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="433bc86d-1c75-4279-8476-fcfb6892d829" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="private decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eec2e9c3-95fe-4769-95b8-5c7ed653e657" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="private string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ccc37173-bce9-4754-976e-c985269e13f2" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="private long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bfb645c3-c2a8-4d2e-8c3b-0e9ae4d64183" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="private uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de73e19e-298c-4886-a6a1-19fbf5379e79" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="private System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1cdd9a1a-b403-41ca-b3d9-473b7862a60d" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="private System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6139dd89-5649-4bda-a9f8-f03f119bbffb" shortcut="nl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41c7631e-c1f6-42ae-9b96-ebf440a2f019" shortcut="nl.c" description="A field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9ca5bc3-5ab2-4286-aba1-70e25a194714" shortcut="nl.f" description="A field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5971e5a3-8e38-4fc4-aab6-a460ec72c10f" shortcut="nl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f70614a8-c83b-4777-8850-b681c8eb53a7" shortcut="nl.d" description="A field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="673188c8-b666-42db-89a5-3382275fcfcd" shortcut="nl.i" description="A field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c721490d-cbea-4706-9482-40236bf0c70e" shortcut="nl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8082363c-1e2b-40a7-ae50-d634e21bc649" shortcut="nl.s" description="A field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67073ef7-f403-4531-aa92-a1cccd9e7afd" shortcut="nl.l" description="A field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="125df326-3f5b-489f-979b-fb53b25427b3" shortcut="nl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab7b0adb-1c06-4b53-98c7-184af6d2557e" shortcut="nl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37aeceab-842e-4039-9da3-e272c3482f01" shortcut="nl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ff8d770-1e32-44fc-92ec-79e920b99923" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9747fc1d-832d-45c7-a164-eabe7bf44160" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e79814ca-5ffc-47f6-8e59-e636a8e6812e" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="228c3a94-426a-4232-8e80-1f8ab67e5da3" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4395b762-9c26-46b1-936a-c2de0a9e1a68" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3abc6ce0-47e1-4cb5-b876-8d2b39e49ec7" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b81a68d4-94c7-4632-a5ef-c9b8574a3d34" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d77db653-87f2-4324-8d67-9f4032dbdd06" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a504880a-27ec-4706-968c-6e1ee05b7844" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9eafbe8-577a-4ba0-8d27-afcf054da55f" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48a1b68a-c5c0-4cd4-a160-d6ffa6d438a9" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5a75be8-6b8b-41bd-a1d9-0d12656b68ba" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6c4480b-046b-4152-8d82-1aba9d7ff3cd" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bbf27200-86f5-4f25-9ac8-c08559912170" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8dcef55-27fc-4e77-8f73-4f9cba04fd69" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="871e1657-cfe6-4802-b3a4-0ebceeb22009" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b9f4c0d-8ab2-4824-81c9-bb2455630548" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a56bd98e-53d6-48a7-bf88-0aa351ab7529" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da829ac2-f0fb-4250-834f-f48b42ff8550" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4902417d-6b3d-4919-a3f3-6efc55c970eb" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0625aa18-1781-4baf-9a53-78d04292e0ef" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4399a364-12db-4446-9bdc-fd1a4cc6c005" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60b2ac77-41fd-46b4-95bd-52d77ed8e193" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a44bb24f-a812-4e03-b37b-0b3079760b24" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1cd28592-74a7-49c9-9303-1c6a99510a57" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="private readonly bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0049ab75-1f77-4b7f-9da8-ff0da917c6b4" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="private readonly char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3fc2318d-f0ae-4b9c-92bf-8853b32eebe1" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="private readonly float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e22ca1c-709a-482f-838b-5e8a75812656" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="private readonly byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d14a73b-df73-4d5e-8fec-67f536720181" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="private readonly double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21056af8-d830-4a50-8606-33e300aa15b3" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="private readonly int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b58e0b2c-c00d-4100-96d0-7b5fd140b6cf" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="private readonly decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0e4bd2d-f5ca-4bfd-9550-a79c18b6c86f" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="private readonly string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="720c1888-a3c3-4cca-aa4f-d7dd281bdf03" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="private readonly long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dfd2eecd-7a78-4d75-9107-70e153fb68b5" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="private readonly uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c018c6a1-1c5b-44dd-a7d9-30f034454574" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6100134-569c-4b48-8a1d-558aa178a920" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24f128cc-e60b-4480-8cdf-672cf04d3344" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5f343ff-7042-47f0-aed6-219d42f3c45e" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45706142-7a0d-4e2f-bac5-616be42c52bd" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a272632a-806a-462a-b213-ada487ed6056" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f93f708f-0d8b-44aa-9930-a27a324ba8e8" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00761024-2497-4480-a5ae-42d3f52ea9d8" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="089b34e7-d8cd-48f9-b867-58272723d32d" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e41d1cb7-29b0-4ad2-95bd-97052dfef9a0" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a82e5a8e-1320-4738-85d8-d56875afdec2" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7da23814-6111-4ded-b791-2f61e924db3b" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="515e853e-9bc8-4434-a837-093c672d32a7" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8e5acfa-e450-482e-b166-0ec9365900cd" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7523bc68-64bd-40f6-9243-3045c04ea375" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f449d2cb-8253-47a7-9937-fb92e33ef315" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8d7d3cb-6d45-4550-8ced-81637ac4ecaa" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4538e81b-9023-4f81-be2b-9b3841434c62" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="618c5a58-9087-4803-b9a8-90fd3987e62f" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebe5c07e-c94e-456b-b502-2a367807c1a9" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7621a51-8462-4728-b72c-176e6390f384" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d12ed3be-d9bc-4ca4-a3bb-8abb671a851e" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ab9ec03-b97a-4382-b654-0dc510878984" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49c3cdfa-0ce6-4d7e-bcc3-a7fc61e0ddfc" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5077ba6-519f-43fc-b600-9bd7e0725726" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9da05e5f-8115-49f7-ac5c-89706a5fd604" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e81f4ee-7a7e-4443-8f95-2a3744847649" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8166a646-5c0e-4122-854c-f9519830d886" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f16f341-3c33-4488-9226-56a49f080ef3" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad21aa48-0c7f-428d-a77e-d74f500ca200" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6645676b-4479-4c8b-b165-cf3f8587774d" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0653b177-a944-4aad-9d99-defc49cb972a" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="657789fb-5474-419d-a9bc-35cb5a12b50a" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6c29b53-86ad-4522-a507-bf6c3951b042" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0565d690-7672-4058-9690-1f30131b4f5f" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19c3f520-a9ba-4e99-a48a-01fe59d21db7" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05c3cb65-2a07-4db9-8559-c0326e1c19d2" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efb028a8-0ee5-4512-a24c-ba927f2f26bf" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1b65dbf-71dd-4795-a559-ac16eed852a1" shortcut="tb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="608e2917-8244-4395-80db-efcff9c3d63b" shortcut="tc" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0dd31d2-74b7-42df-83b1-82e2f7780094" shortcut="tf" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43b3dfb2-f4b5-4a54-955b-2a51b3e6fa8d" shortcut="tby" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66812782-b97e-49cb-9b8e-858cd1fc8b1c" shortcut="td" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f308e9b-f64b-4deb-a384-4a4417944e80" shortcut="ti" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f2331ade-7d00-4903-8766-e48899510a59" shortcut="tm" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="198d1c03-2021-4278-a75e-b83032d7e808" shortcut="ts" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc0c69a6-0a6c-40cc-85e7-a161567b2f70" shortcut="tl" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96931c47-d714-469c-a078-298a0749b5bc" shortcut="tu" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5e6f1f1-3225-4e49-bc77-59e5cd20c1d1" shortcut="tg" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a727a4d0-f7cc-4aab-a77b-6ff102f5d1f0" shortcut="tt" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9441a97-a57e-4cd4-a392-d14beb0942e6" shortcut="tl.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bb32e1c-688a-4914-96e9-577b297af385" shortcut="tl.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d640dab-5616-4be4-bde1-a9fc9d08a00a" shortcut="tl.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99e54f85-bc1d-4c4d-8603-05ae66fc062e" shortcut="tl.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d5cf454-eea1-4c2c-92f4-529655335bc5" shortcut="tl.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc91ac91-c0d7-4df1-ad33-284a769eeb23" shortcut="tl.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e87ead5-7716-4dca-9189-784f91eb57df" shortcut="tl.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73fdb72b-75d4-45e1-bad7-82ae55e25ffa" shortcut="tl.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51d34800-da8d-4cad-ab07-a6d1465b644f" shortcut="tl.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a94bb83-d917-4633-9064-4d1c27052862" shortcut="tl.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ea5699f-0021-4be1-b1bd-89e8c09ad12e" shortcut="tl.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ad13344-92b5-4dbd-98e7-4e6d8f91dd4a" shortcut="tl.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="658bdf1b-6c71-442e-98bc-8e7816dbd69e" shortcut="th.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba22e582-7667-477f-9ec5-fd0666addba6" shortcut="th.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f102837b-cf1b-4bc2-aeb4-53fc2408e756" shortcut="th.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7ba4d36-3cef-47bc-bdf2-3f975c7f5cb9" shortcut="th.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e8aa35a-bee1-4a41-9876-d7766fbc6f6b" shortcut="th.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f628e725-1429-4342-a8d6-2cd0f2f94aef" shortcut="th.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37f12735-72d7-4165-9fd6-042206e32d13" shortcut="th.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="475fb8d6-01ce-4b87-a8fe-2057963710c8" shortcut="th.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03f9527c-a47c-4407-94aa-47d2ae8c4ef1" shortcut="th.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d53f18bc-39e5-46b6-ad5e-38ccd393a41d" shortcut="th.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b97961a7-2470-4b64-b2ee-cd510cc4d9a4" shortcut="th.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39d5f3f6-b6d7-41ef-afc4-7568a6b20c90" shortcut="th.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="686d8127-067a-4385-afa0-bb8048deb5b5" shortcut="t~b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0acdfd9-511c-44e9-8e35-1edee688de08" shortcut="t~c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="655f08b6-a207-4acb-89c7-4fa44f20e606" shortcut="t~f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="426bfab4-ca4b-459a-9271-d839d8539f8d" shortcut="t~by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d77c6e7-456c-423f-986f-b0e036be13ef" shortcut="t~d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e160f6e-22d6-4c86-805d-7bcc8990a1b4" shortcut="t~i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2113cc28-8d52-41c5-8285-d69d09b3e4d3" shortcut="t~m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f79f7c26-5900-4213-a478-2b93dfc92573" shortcut="t~s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d9d0176-bac8-460a-ae7b-12499622f0c5" shortcut="t~l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d306a700-594a-4b83-a6c8-b8532aa9d6fa" shortcut="t~u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ae936a1-a28b-4d75-bd37-4690ec0d6edc" shortcut="t~g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bce5cc7b-8886-47ee-b4e5-671556d4abc1" shortcut="t~t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e87347b8-1ded-4f38-b1a1-1b0ef4d3b1e0" shortcut="m" description="A method that returns a(n) $typename$" text="public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3314a154-4e58-4148-97bd-f486229b8a61" shortcut="mb" description="A method that returns a(n) $typename$" text="public bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d19307b8-a411-4bb3-a998-b2552fc2fa07" shortcut="mc" description="A method that returns a(n) $typename$" text="public char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce9682ca-6cca-4315-baa1-878d6d9354ba" shortcut="mf" description="A method that returns a(n) $typename$" text="public float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1fc5fa9-8b60-4c30-9659-893e58403f17" shortcut="mby" description="A method that returns a(n) $typename$" text="public byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="277013fd-45ae-40dc-8396-078ad0c0c519" shortcut="md" description="A method that returns a(n) $typename$" text="public double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92ea2dc7-d532-458f-9ec5-c351d82772e9" shortcut="mi" description="A method that returns a(n) $typename$" text="public int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c543b162-d4f5-41c7-81d1-7f97a72601fb" shortcut="mm" description="A method that returns a(n) $typename$" text="public decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84ecfb56-d9d8-4827-a61c-4014c40f2225" shortcut="ms" description="A method that returns a(n) $typename$" text="public string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a6f25aa-891f-423e-8c19-f5cf66259964" shortcut="ml" description="A method that returns a(n) $typename$" text="public long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91f1816d-6f85-4e6b-b608-941f892bdc57" shortcut="mu" description="A method that returns a(n) $typename$" text="public uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42440190-32de-484f-ab58-4fd1296570bc" shortcut="mg" description="A method that returns a(n) $typename$" text="public System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be8af311-ac98-42eb-b870-7ef3e93954f5" shortcut="mt" description="A method that returns a(n) $typename$" text="public System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fed34d5-2a5c-4c99-adbe-b9c113344875" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c4efd24-4a37-43d7-be18-c47a339d2bb6" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a854ff7-db08-467c-9337-b0b455fb432d" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb13519a-a327-432f-ba9c-7638283e7f2e" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3662b56-8090-4f2e-bff8-894482ecc15a" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1cf4b12-b6f4-474c-9666-bef31af446bd" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bbb5eb8b-c0a8-470f-bd75-85334934c62a" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="368a70c5-c0ab-46e3-b4b2-4fd3a46c5d7e" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c3a285ec-14d6-4352-9dfe-b73199811bd0" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd140f37-5dd0-4382-a835-bfbd6606ec7e" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3d24ee7-c75f-4f73-9d0c-76bef6a55968" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27e2d45a-cc0f-4bbc-ac20-98dcaa7fc1ba" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="025deef1-ff46-414d-b85b-b41e7d51f8eb" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cad5eefd-e1f4-432c-9426-848e7be50907" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="170adcd2-c16f-4ffc-9f77-b80c1b870ab2" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="163e4a4e-cd1f-46cf-b50c-495d637f8e6a" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f466807-7c5c-481a-aad5-87cf696a620c" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e31f5f74-4c4d-45fb-9869-f324f4d755fa" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a8199a6-ebc9-404b-8922-832780e51eb6" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7eac92a-daa6-4f74-ab5a-d79efd11cfaf" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43520b02-c0c5-4d8f-b34b-f027dc957d73" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="674e4833-768c-4edf-9ffa-cf58f4ff2a95" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c8b16f3-bffa-4305-b113-1a023e16eb91" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cc82b87-6181-45c2-b9d1-bce642eb7467" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01bce109-6f54-40b0-8f43-9a5c4004c3ac" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49f0785c-d9f9-4c48-a817-053e53263fe5" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45bf722f-2291-4ed1-80b2-303b348a670f" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="519d8127-0ff8-409d-8ba7-d55db975e5a9" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e5f2dcd-f2a1-47ab-98a3-96d013d0c2e2" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66061f92-8423-4bf8-87a5-aba666f68480" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29f73e1d-9496-4404-9f9d-13cc4aea71b3" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33ce2e1a-c427-438d-b394-9b717623d38f" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6abe2b2-960d-4b74-90b8-575f70940ae8" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6eb32029-f501-4cff-8a79-394550d24ce8" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36821947-5349-4b53-882d-fc7000b3b3e6" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e9e130d-a407-4547-83fd-52b1d50b0ba4" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a00db5a5-3332-4340-86d4-b9117d804998" shortcut="M" description="A static method that returns a(n) $typename$" text="public static void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="762f20ce-abef-460c-99f9-ecf7fd8373b0" shortcut="Mb" description="A static method that returns a(n) $typename$" text="public static bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9f554e7-8dc5-4a03-a99e-39f9eda21e95" shortcut="Mc" description="A static method that returns a(n) $typename$" text="public static char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="933e1b33-1123-4ee1-8cad-962af9a21a65" shortcut="Mf" description="A static method that returns a(n) $typename$" text="public static float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af5059dc-6e28-4bef-98c8-2d6dc989cf3b" shortcut="Mby" description="A static method that returns a(n) $typename$" text="public static byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcf043c2-0eed-4918-bc5b-0a4d309e0f29" shortcut="Md" description="A static method that returns a(n) $typename$" text="public static double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d3c8d68-2b98-4e9d-aa36-69dd35c0bf99" shortcut="Mi" description="A static method that returns a(n) $typename$" text="public static int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f66ce63b-4c0a-42b9-9488-cce7f2bc2a61" shortcut="Mm" description="A static method that returns a(n) $typename$" text="public static decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c852dda-7cdc-4bd7-bd40-e68903a29d4e" shortcut="Ms" description="A static method that returns a(n) $typename$" text="public static string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fce56717-95d1-4bdf-8151-cd47ca481d2d" shortcut="Ml" description="A static method that returns a(n) $typename$" text="public static long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a54db76-a677-45ea-9973-8c0c7b923601" shortcut="Mu" description="A static method that returns a(n) $typename$" text="public static uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e2c79b3-9bb2-421d-b047-a065cb6a08aa" shortcut="Mg" description="A static method that returns a(n) $typename$" text="public static System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d478c31-d04b-4d0c-94fb-29a5b443de36" shortcut="Mt" description="A static method that returns a(n) $typename$" text="public static System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10e27bd4-25e8-4885-acc2-1cedb0ee8700" shortcut="Ml.b" description="A static method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public static System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a06724df-42ef-4dba-b8ee-48eb1bb553c0" shortcut="Ml.c" description="A static method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public static System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="100cd982-5d34-439e-a30e-a9f8cc8418e4" shortcut="Ml.f" description="A static method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public static System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74ed1d88-52b0-4f5f-8d61-e1f01f5a5f3c" shortcut="Ml.by" description="A static method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public static System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e42f612-0852-46c4-ad22-2e1e0e639820" shortcut="Ml.d" description="A static method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public static System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37bf6e28-4176-415c-9a6e-7d6d811d0bb3" shortcut="Ml.i" description="A static method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public static System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59277ade-a1a9-45b1-aa07-4490f5a2b28b" shortcut="Ml.m" description="A static method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public static System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5d47521-a944-43f4-9a8d-5b872201b630" shortcut="Ml.s" description="A static method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public static System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f47a2522-d5ca-4e70-a8cc-737a6af6f48b" shortcut="Ml.l" description="A static method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public static System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f4625e8-ce1b-4348-940e-82bd6430cd6a" shortcut="Ml.u" description="A static method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public static System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcfc9ead-45dc-4da3-bd7c-a1e3cc5f139d" shortcut="Ml.g" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public static System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac1bae11-a4c8-493a-a965-a0e4cbe9102d" shortcut="Ml.t" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public static System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="932eb0c9-fee1-49eb-b6e0-e08ebeaf90c0" shortcut="Mh.b" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public static System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68c7dfcc-1308-4718-82ec-3026b08c9062" shortcut="Mh.c" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public static System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9af57109-fff0-4d8d-b1dc-0f5662642c5d" shortcut="Mh.f" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public static System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="157144a4-6880-48ca-a85e-330ac82a1990" shortcut="Mh.by" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public static System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c40b623b-289f-4b6f-bda1-cc3c0f1647e5" shortcut="Mh.d" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public static System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2ce39d5-e259-4fcc-8d7f-6f85360c253c" shortcut="Mh.i" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public static System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74615a9a-0cbd-463a-8bb3-7092da5b3cf9" shortcut="Mh.m" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public static System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5461c582-50bc-4de6-bef7-e07bcd00236c" shortcut="Mh.s" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public static System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3405c4c-88d6-46f4-8200-5c95265f12c4" shortcut="Mh.l" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public static System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd30e067-11b4-4a06-bdb8-64ab663626d3" shortcut="Mh.u" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public static System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="576067b4-c8b2-4c1a-8859-a584e2fbc48c" shortcut="Mh.g" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fdef4fda-9886-44ce-a542-f9326870e76e" shortcut="Mh.t" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="162c4104-b949-4151-a3a3-23078f534658" shortcut="M~b" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public static System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3875e4d3-96f7-43b5-9e83-6b7f3e781197" shortcut="M~c" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public static System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f9fed93-148d-404b-b6fc-cd77af550997" shortcut="M~f" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public static System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36f098f1-d926-46e3-9902-bc767f455bb4" shortcut="M~by" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public static System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c9475cf-1245-4cd4-91f9-bde8f9197090" shortcut="M~d" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public static System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fee9a15f-7214-4098-8940-f149edca29ab" shortcut="M~i" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public static System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd0d3387-e08a-4810-a725-b67e09544c1c" shortcut="M~m" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public static System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f697cbc9-05eb-40a4-a9f6-c53f024d34ec" shortcut="M~s" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public static System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc8a10c7-45c0-4f33-acb0-41a0999ecffd" shortcut="M~l" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public static System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3360203c-806f-4bd9-807f-2fb94d498bdc" shortcut="M~u" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public static System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bcae32df-fa1b-4d36-9a37-30c06aa5f888" shortcut="M~g" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3df51a6a-ef8f-4783-b51d-834e00e2e716" shortcut="M~t" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d28ec95e-faa0-4a51-a014-066bd21f4aec" shortcut="pb" description="An automatic property of type $typename$" text="public bool $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ec3d788-5039-451d-9348-123459110b12" shortcut="pc" description="An automatic property of type $typename$" text="public char $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0dd9b59-7084-4ad7-8227-273ffc4a0c95" shortcut="pf" description="An automatic property of type $typename$" text="public float $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67baa057-a1ba-4318-9d6a-6c27a1d92c9a" shortcut="pby" description="An automatic property of type $typename$" text="public byte $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b153c62-a3e3-43f2-937f-571eda3583e0" shortcut="pd" description="An automatic property of type $typename$" text="public double $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="136f45ae-edb5-4487-894d-59d62d7fb3b2" shortcut="pi" description="An automatic property of type $typename$" text="public int $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be79c91d-2a24-4213-a081-e26aebfc7b4e" shortcut="pm" description="An automatic property of type $typename$" text="public decimal $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45dd10d7-757e-4613-b5bc-c4600ab708c1" shortcut="ps" description="An automatic property of type $typename$" text="public string $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="61c3c745-247d-4d68-81b6-801542494b31" shortcut="pl" description="An automatic property of type $typename$" text="public long $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d56f4f64-a738-44cd-8f92-47c96519032f" shortcut="pu" description="An automatic property of type $typename$" text="public uint $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0574f33f-475c-418c-a134-39a4c1a36b39" shortcut="pg" description="An automatic property of type $typename$" text="public System.Guid $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="748e9ac1-ac71-4867-953b-33ec24cbb9e1" shortcut="pt" description="An automatic property of type $typename$" text="public System.DateTime $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71a5aac1-a8e8-48fb-a36a-67a1a0747239" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3eaa5ca3-d035-461a-a1eb-1bca322d1d2d" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a849650-07f3-48b7-817c-89d5289184ac" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79070b2d-1c9a-49af-a973-cbf1e14f37a8" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64ce94ca-bc83-459c-b508-91aa2e32511c" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22d13088-bb4d-4a95-ac2b-9206a78b413f" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a87a0128-14a5-486b-9197-7d518ff96b22" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f5d9e31-d144-4e4c-abc0-15e4e870f6a9" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2108f9ea-e024-45f8-94b7-2a21f8b34ba3" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81fd3255-bd41-4a0e-9aa1-32c0eb8bdfbe" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ab7fadf-35ca-4da7-841f-cd3f826dff78" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9c5c01e-d219-4f9b-a51b-3cd5066e2f46" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c8108bb-f941-4be9-8178-0e11ada6f81f" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec503b40-107b-4fd2-8ade-aa9a6a0985d9" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d8fcee8-801c-4a9e-ac5f-0a76aef3d079" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98a1a003-8b0c-49fa-b23f-a660c592d5cb" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1aa57c01-5291-4552-ba96-f587fac59c37" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0df75066-639d-406d-a0a7-c442fc322645" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8be7a8a7-c6a8-4825-8b56-241a7ec4acd5" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac27d05c-1ef4-49e0-9464-326a9099c75b" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2f05eb8-cf1f-47ad-a7a8-884f6814593d" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19758223-dd4b-4404-b464-8595a4e20e2e" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e591ebfe-f76e-47a9-a2e7-bac2b10cd8b5" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2850cdc3-64f8-46a4-b237-8a3094c13a42" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4136519-68ed-4fc6-9643-61c6384360a9" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5b15c6f-b937-44bb-b177-00fa2d002227" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d93ae5a-820f-4f6b-893e-39e6622dacf2" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6af60029-dd6c-4294-9dca-55e1948491de" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a0ae4f0-dd09-4f9f-85f9-ca89c23cf5a8" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="778c5aad-1089-457e-9b24-64afdffacd5c" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d3f07a8-509a-4fae-9355-5583fc602eef" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="096d9d21-5d22-441f-ad00-d0d41a1b140f" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29b49a01-e147-4c51-aab2-e6c23c00ea0f" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="184d9d41-e4f9-4643-b163-5f5b4e59761c" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbbb35f0-a447-4995-99c7-e979f73560f0" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92c38a1f-c42f-447f-9146-c5f1d75cef4a" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c28f46fe-ed39-4ec4-b444-659c81e02b16" shortcut="prb" description="An automatic property of type $typename$ with a private setter" text="public bool $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd98133d-d6cd-4369-ac3c-abe2aeac37d4" shortcut="prc" description="An automatic property of type $typename$ with a private setter" text="public char $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de6496e4-a678-4c6d-95ca-47d8a9c00a99" shortcut="prf" description="An automatic property of type $typename$ with a private setter" text="public float $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3255265-9716-41be-900a-d8e3887232eb" shortcut="prby" description="An automatic property of type $typename$ with a private setter" text="public byte $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05f7ab73-7ec2-4df1-9a34-bce565fcd766" shortcut="prd" description="An automatic property of type $typename$ with a private setter" text="public double $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="283d2a86-2b7a-4150-b92c-2d304abe70e0" shortcut="pri" description="An automatic property of type $typename$ with a private setter" text="public int $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="598eeaa8-d754-4075-b6d5-aef3d08dfabc" shortcut="prm" description="An automatic property of type $typename$ with a private setter" text="public decimal $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="083b122f-c883-435b-a5ed-4e36a5e999f4" shortcut="prs" description="An automatic property of type $typename$ with a private setter" text="public string $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="650862d4-9e18-4eb9-a699-befa61e07f2d" shortcut="prl" description="An automatic property of type $typename$ with a private setter" text="public long $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a2a8d90-fc45-4dc4-80b8-18c588155a00" shortcut="pru" description="An automatic property of type $typename$ with a private setter" text="public uint $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc992c6d-d792-42f7-a79f-c83ed8644b81" shortcut="prg" description="An automatic property of type $typename$ with a private setter" text="public System.Guid $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="518f47ff-6007-40d4-873a-8a3e4a260c33" shortcut="prt" description="An automatic property of type $typename$ with a private setter" text="public System.DateTime $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85064249-d251-453f-87ae-ff80f0612873" shortcut="prl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with a private setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="964f9a8b-20ca-46e4-a4bb-17a8d6e837a1" shortcut="prl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with a private setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d31eb7a-dcb5-4bcf-bf9c-ca59dc9563d7" shortcut="prl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with a private setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b59f438-8382-4f6e-b765-7aa56c8a3798" shortcut="prl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with a private setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79432861-9627-4e76-a127-08162f131630" shortcut="prl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with a private setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4a2d1e0-af1a-4855-8e7d-ad9b1ebf8d6a" shortcut="prl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with a private setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29023ce8-c855-4fee-8e0c-8754be1fedb8" shortcut="prl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad01a798-d825-4249-8b90-6a0100a309a7" shortcut="prl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with a private setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e30dd5a-075d-417f-95e7-8ee6875b18d3" shortcut="prl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with a private setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6df8bf80-86ae-4cf1-9e32-daacbaaf6102" shortcut="prl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with a private setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d50540f-4601-46d4-83f7-7eb50d94d46e" shortcut="prl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4702e383-55a0-4ae7-9d66-6654ef667046" shortcut="prl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5869f70e-646f-4f54-a745-30a52d0cad7e" shortcut="prh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="beabec5f-7773-4afe-9357-e9c8b9493e60" shortcut="prh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="215c10e3-d75c-48d1-a2a0-7dc751e22354" shortcut="prh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ca886e6-2361-4ea0-ac96-8b7415930be7" shortcut="prh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7af5676a-81cc-430c-a401-89e6c8d48e43" shortcut="prh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19e745f6-a0f3-4a7c-9b63-9fb894fc6208" shortcut="prh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0eb3e7d1-362b-4130-8f20-769359f18161" shortcut="prh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b122259e-8bb4-45b0-bf78-015b0c7bffaa" shortcut="prh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a8f0ad4-3577-47c4-a3fe-e83b03801ae3" shortcut="prh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6be5f664-0b34-4b4c-a86c-399bfa344cf6" shortcut="prh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44c47ba2-39c9-418f-9999-b0de8d95677c" shortcut="prh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6014f9f1-ea31-4b81-a38d-707341638eb7" shortcut="prh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef4bdd95-6e74-49b5-9761-d6e7145f8708" shortcut="pr~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea01b86f-09e8-407d-9186-ce1e8e723ae9" shortcut="pr~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc6b653f-727d-4e9f-a9c8-cd34b8f27e7d" shortcut="pr~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="180eae47-632f-4c59-88bf-275e4f556fab" shortcut="pr~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bcb20fdf-aec4-483f-9c1e-8b2a161b15fb" shortcut="pr~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="365d9f81-fde1-44c5-9b5b-04477b018e41" shortcut="pr~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ce45cbb-221a-488b-aa50-b7e348b4a4dd" shortcut="pr~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d24254e-552c-4593-9162-49f344ed8831" shortcut="pr~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="693dd7a7-ea5c-4b3c-a07a-b2ae1623f710" shortcut="pr~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6b663ab-63a4-4655-a363-4e899c9f15aa" shortcut="pr~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddbc0ad8-e60f-4fe8-bac2-1c1597cd1b86" shortcut="pr~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b4d6062-6d1b-4f7d-90d9-73a3827ad1d2" shortcut="pr~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f2ea0bd-bcab-4228-b2d9-9d0681b550b4" shortcut="pgb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public bool $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47152336-d5c7-4c2f-8297-7a9941251aeb" shortcut="pgc" description="An automatic property of type $typename$ with an empty getter and no setter" text="public char $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bfd5c453-cea4-4827-a407-b7219610977f" shortcut="pgf" description="An automatic property of type $typename$ with an empty getter and no setter" text="public float $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d824d882-5413-4aaa-a1a4-6fb688819810" shortcut="pgby" description="An automatic property of type $typename$ with an empty getter and no setter" text="public byte $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29403f04-a505-4819-be51-c5007c059125" shortcut="pgd" description="An automatic property of type $typename$ with an empty getter and no setter" text="public double $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fcd909ae-4734-46fa-b8f8-a1a2d94ac156" shortcut="pgi" description="An automatic property of type $typename$ with an empty getter and no setter" text="public int $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7320a7ed-7ef5-44db-b8f9-30f993960bbf" shortcut="pgm" description="An automatic property of type $typename$ with an empty getter and no setter" text="public decimal $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1914ee9a-37ed-4c95-a2ee-a09cdb94e6f5" shortcut="pgs" description="An automatic property of type $typename$ with an empty getter and no setter" text="public string $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="256c3952-efbb-4447-a4a8-59366ed472ec" shortcut="pgl" description="An automatic property of type $typename$ with an empty getter and no setter" text="public long $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a85cd491-2418-4ba9-8831-adb2ba7cfc10" shortcut="pgu" description="An automatic property of type $typename$ with an empty getter and no setter" text="public uint $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6265eb51-d45c-4158-9609-df6b68878393" shortcut="pgg" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Guid $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24a6f307-b737-434f-a76c-f833601a0d6c" shortcut="pgt" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.DateTime $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11b018d0-dfc4-422a-b169-ba78be690737" shortcut="pgl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56265f94-8f86-4b3b-8a2a-4b0094b9f6e6" shortcut="pgl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97796f14-69db-4978-869e-38e2c3da1d92" shortcut="pgl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2820ad0-57d8-4321-977b-e9a3b7175aa1" shortcut="pgl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d3f42cf-a110-4d3e-a321-7c0c439102b1" shortcut="pgl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cfbada90-3030-4e2c-8268-d7adfb3cd647" shortcut="pgl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02db7a12-bbef-4684-92e1-b6eafd724cdf" shortcut="pgl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e85975e-7ea9-4220-b47a-8a42b4110ed9" shortcut="pgl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0647cad8-0d14-4841-a7fb-38a0777043e0" shortcut="pgl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93e28ed4-9c3f-4ceb-8cdb-a7dca467be3d" shortcut="pgl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce12e1c0-0ff4-4504-9314-bd7260323975" shortcut="pgl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95f3368a-9447-42ee-be9f-572d0b9258fe" shortcut="pgl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b06f86a-d884-4654-b6dc-d78a4a45d0fc" shortcut="pgh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="653a8b84-5a2e-4ade-9e29-e0437e52f410" shortcut="pgh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f235b55e-0374-4c9b-95c7-1910364f875d" shortcut="pgh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77a0273a-6831-4c98-9edc-563df62fef48" shortcut="pgh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="701adb87-87e9-4cc8-9394-52a3dc7d7dd0" shortcut="pgh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c5aa6c7-d2a0-4016-913f-6bc2ac6322d7" shortcut="pgh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d580ee6-3dbe-458f-bc5e-4b6359f7906c" shortcut="pgh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45f6e72b-1bf5-4b68-8810-227d1002c885" shortcut="pgh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4faa09d-05b5-444d-815d-76854a6ba923" shortcut="pgh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6e1ad9a-2ef9-4071-8075-9139a501c91b" shortcut="pgh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f6586ec-7c01-4cf2-9c5c-863f4eee35eb" shortcut="pgh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7bc26262-15ab-40fd-877d-388c56178e82" shortcut="pgh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d35bd94a-8193-4401-91f1-f32908db628f" shortcut="pg~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7912b4be-54c7-4f69-86d9-d8aecc65cad0" shortcut="pg~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fdf70b51-14b6-4cfc-a8f9-f02997e1a62c" shortcut="pg~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13f4eeaf-8262-46c9-957a-ba4b73e3023c" shortcut="pg~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b586752-c4b3-40bd-a14a-104acd377477" shortcut="pg~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8489214b-a5e3-4562-bf65-39218d409736" shortcut="pg~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb686911-aa96-4a5f-988d-9ec3ca9285b7" shortcut="pg~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90ff284e-1884-4207-89f1-f70bff3f93a6" shortcut="pg~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52f91457-1712-4d34-8d84-05ce1dbb4f39" shortcut="pg~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="016147d6-5859-4bc3-8bfb-b4ddc5fec11c" shortcut="pg~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa4a9b8b-524b-4eab-a680-13adf0164c7f" shortcut="pg~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="145f93e1-aea2-4feb-a32c-f6d671ab2dc9" shortcut="pg~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3d9e583-2d2a-40d1-a52d-0d60f0feee0d" shortcut="vb" description="A field of type $typename$" text="Private $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08bb7c9e-dae4-46f4-a56f-c555ffd43c1d" shortcut="vc" description="A field of type $typename$" text="Private $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd01fe22-ccce-4ea7-ac96-739a2678e84d" shortcut="vf" description="A field of type $typename$" text="Private $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c7406e2-7740-4568-86e2-4a97749b2554" shortcut="vby" description="A field of type $typename$" text="Private $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37d8fe7f-7f7d-4410-8dd8-4d4fa49930ac" shortcut="vd" description="A field of type $typename$" text="Private $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c7fcf48-f825-4dd9-bf63-eb5ee70c6a2f" shortcut="vi" description="A field of type $typename$" text="Private $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe775cdd-a693-4847-b520-32c5fa01c30e" shortcut="vm" description="A field of type $typename$" text="Private $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21dafbae-eccc-4e3e-96d8-69ad211dc324" shortcut="vs" description="A field of type $typename$" text="Private $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d20cf3f3-1334-4cec-a36a-5b5b8f793508" shortcut="vl" description="A field of type $typename$" text="Private $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52c3f0c0-8861-4703-ae22-a890ce872163" shortcut="vu" description="A field of type $typename$" text="Private $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce52d5fa-e7ec-447f-8eac-59441bcdf218" shortcut="vg" description="A field of type $typename$" text="Private $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fa82511-93b0-4411-96b8-1e777cdb3d36" shortcut="vt" description="A field of type $typename$" text="Private $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a1a0b22-3767-4ab2-a71a-c44c63972e82" shortcut="vl.b" description="A field of type System.Collections.Generic.List(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78e98fc3-284e-466f-9328-8263925a161b" shortcut="vl.c" description="A field of type System.Collections.Generic.List(Of Char)" text="Private $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9630c30-9032-44fc-a02d-1e4c86de573d" shortcut="vl.f" description="A field of type System.Collections.Generic.List(Of Single)" text="Private $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="726afea8-166a-41fc-90a9-b431306cdea7" shortcut="vl.by" description="A field of type System.Collections.Generic.List(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b02cb58b-650d-4a49-a869-1843b90600b5" shortcut="vl.d" description="A field of type System.Collections.Generic.List(Of Double)" text="Private $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65505506-c2f2-4b6d-a92b-645948fa030c" shortcut="vl.i" description="A field of type System.Collections.Generic.List(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a3703d9-714b-4fea-8c1e-9eedc9e0aee3" shortcut="vl.m" description="A field of type System.Collections.Generic.List(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="783a02fe-0158-4dbf-9c2b-116c68c103cb" shortcut="vl.s" description="A field of type System.Collections.Generic.List(Of String)" text="Private $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc53c02c-ae94-406f-aa4d-1431f2d9e856" shortcut="vl.l" description="A field of type System.Collections.Generic.List(Of Long)" text="Private $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f927ea7f-9a8e-4f5e-855f-ca80737eae87" shortcut="vl.u" description="A field of type System.Collections.Generic.List(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7795f268-db95-4def-a3d4-f39f2f70aaa2" shortcut="vl.g" description="A field of type System.Collections.Generic.List(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cce98856-8623-4abc-8042-3321ade488bb" shortcut="vl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc4bf84a-0374-41d0-a950-e78036fd7541" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df484f46-687b-4f16-be68-93ab86db830c" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet(Of Char)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f7935ba-3674-4eec-9d7e-51bfcb1ba274" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet(Of Single)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba1fdcf1-90c6-415d-9e7d-e1205bc3f591" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75e164f1-d5ef-4eea-b71e-4f30c94b9469" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet(Of Double)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7c52f32-a51f-4be2-b304-e91661fecf80" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1ef1f31-7a63-41fb-b5cf-948f3b1f5440" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c33c1a61-6f22-4cde-b30c-659038c2e582" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet(Of String)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0beaf51-a7f7-4ac1-a1fe-97d4accaf0ca" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet(Of Long)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aabbadb0-165e-40ee-8a2e-40d39ef72caa" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4cfa137-3190-4af1-a35f-3a15ceebda64" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2498a32-04ad-48fe-8cae-31c4c689d591" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="325a45fd-2a4d-4c4e-becd-bd888248061d" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f72ee520-e823-4ee4-b4b9-10b1dcde18da" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fa2df84-5948-45eb-874f-6547b9d56499" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11980e34-3b75-497d-9147-0eef225805df" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc5d5ea8-f206-4fd3-af7a-a62e4c523cae" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e14fe599-bac3-4976-bcb9-42c26a9ae192" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c34f1aa3-fd40-4219-b264-590a39a5cc28" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c73015a8-2ea4-44aa-aa23-07e5eb340fa7" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable(Of String)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2cac9da7-11b5-4674-b12a-72532a03c391" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1698330e-0ca8-45d7-8995-04c53968363b" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="390da54e-f99a-4a4b-abb7-efe64e8a9d01" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9fb83345-3403-4e02-9eda-5cb56dc97e2e" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11dbf756-5472-469c-963b-34572ef46a61" shortcut="vrb" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="599c6cf9-267b-46b7-9d39-67a77784f983" shortcut="vrc" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c1d4d5a-f43b-49e7-8995-7fc74aa43241" shortcut="vrf" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab783626-7a4a-4c3c-bc87-c502a08fec3f" shortcut="vrby" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e87254c-5ed6-4bb2-b89f-844b225f8756" shortcut="vrd" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="169aa5ab-1c0e-4665-808f-fe3d2ca8e520" shortcut="vri" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13c1a4dd-147b-493f-943c-1660ef7df2a3" shortcut="vrm" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac329091-b6bb-4e1e-8e47-7f0210386f0d" shortcut="vrs" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4fe5434-aee2-408e-a0b3-68d888d283ec" shortcut="vrl" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="624388cc-ed57-42b2-93f2-d61e71049ac5" shortcut="vru" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d763f0c-3b0f-4bb4-9f52-594c8e0ad982" shortcut="vrg" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4b72804-9e1d-4a0c-bcde-62e6b9e8c2c0" shortcut="vrt" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62391c2a-9c46-4651-bade-6cc790197be5" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1eaa64e5-041e-414b-b732-2a4b55d8db2b" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6f74c7d-7ce6-4563-9b15-29697ddec509" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="236528ad-2aab-4bc5-ace9-e1ade18e5290" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92429e4e-aa09-4af6-b54c-7115c08b0c9e" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac753a3d-2973-4db1-97b6-7b8ff3b5974b" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb307038-3e38-4497-956f-cc3c37341c19" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b87d45cc-5676-48c1-8885-39db2d729e72" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df26fb77-b216-4aed-9e88-362553737fc5" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab493106-ed9e-4db6-bcce-302d311b3893" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ea09e8f-91d7-4707-b1d9-dd2fb33a48bf" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="175e0593-027e-46b9-a956-4c84de2f7b6b" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2954c5d1-dacc-4acf-95ce-6797085a0669" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d129cc3c-acae-4289-8c23-6ec73c38e20a" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6f2d33f-ce97-468f-8fd8-8ca193ff12eb" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f611b50-0954-484c-ab7a-df0dbc6c6445" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd4a914f-9d2e-41c2-ae60-04e1da97a048" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2062c12a-beb5-4391-a935-3a82542318e2" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b768723-6b79-4f7a-bbe9-120f6f419ad6" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df96cb12-cfc7-4b93-82c8-194613444541" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a28761ce-c583-4cd2-8e53-97d85f4aad2c" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="182c961b-5355-44bd-ab01-94b98a54f112" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c330b13-1a31-4268-a040-0277de1305d5" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f33f57a-81de-49e0-b2c9-58c50d00c56a" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd879d89-09b3-48fd-b999-acf35bbb2da0" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af7de406-b72a-4347-9df1-c91aa4ec360f" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d89faf81-3cd0-44cf-8f17-c1a0c7bb71d7" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf275075-e60e-4607-93ae-cc91f1766e8e" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5798dc3-daf4-4e33-b3c2-2ad76a9474b3" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4e195bf-194e-4fd6-8897-06e69ab76aa7" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce8686b5-c384-465d-9d8e-550306f290e1" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee5fb59f-c1d1-4c74-af5d-63f5f74a18b1" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94dd9e41-ee0c-45af-89a6-62658f406cba" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac6ba1ab-cde5-48ff-b124-8d27e95ce84e" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8d3c224-0eec-46d5-8b2e-2bec21f9a375" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4870e4a-be85-4196-9200-2a8da520fcfe" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64b7038c-67cc-490f-a572-1741a71958ba" shortcut="Vb" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5519776b-3d37-42bb-bc7a-5aef0bdef637" shortcut="Vc" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="746bc8f1-e911-462a-ab87-b98fc7938a22" shortcut="Vf" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c40a33c-75c2-440d-a2f4-12abbe0b127b" shortcut="Vby" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddb60cd7-6948-466b-b349-dbbe2703a6a4" shortcut="Vd" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1565986f-9547-4504-a17d-34e046ed74f5" shortcut="Vi" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44b4c0c3-3876-4a94-9db4-cb7955e16401" shortcut="Vm" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2cb4517a-2f16-4520-a15b-134f1f1d1d82" shortcut="Vs" description="A shared field of type $typename$" text="Private Shared $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e92b2a6e-7912-4879-9d4c-fde8ef01dcc5" shortcut="Vl" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d26ca0f0-bb92-4762-8be3-ea42cfc0a724" shortcut="Vu" description="A shared field of type $typename$" text="Private Shared $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ab09740-75b2-40da-9859-ac29b7dc98c3" shortcut="Vg" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a863cacc-c6f1-4f1c-8d54-8a2167a16a8e" shortcut="Vt" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1181d74d-b2df-462c-b231-f2580ebf527f" shortcut="Vl.b" description="A shared field of type System.Collections.Generic.List(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cfdb22d-d8bb-427a-bbfd-a0513f96abcb" shortcut="Vl.c" description="A shared field of type System.Collections.Generic.List(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c614a44e-0ff4-4e26-b162-210ff9f11449" shortcut="Vl.f" description="A shared field of type System.Collections.Generic.List(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0bd03ab8-b691-4623-9fe3-e8a3dd7a989c" shortcut="Vl.by" description="A shared field of type System.Collections.Generic.List(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="adf89795-3186-424c-a7c7-ee52d7052fd4" shortcut="Vl.d" description="A shared field of type System.Collections.Generic.List(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f510a73b-9a6d-4c76-ae08-2fe21b103b7e" shortcut="Vl.i" description="A shared field of type System.Collections.Generic.List(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7796bc82-18bf-4a4c-94b9-d0d528e4c3bf" shortcut="Vl.m" description="A shared field of type System.Collections.Generic.List(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11e32659-0ac8-4d9a-895f-b37f4be43950" shortcut="Vl.s" description="A shared field of type System.Collections.Generic.List(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d2ef84a-0125-4c52-9b9d-4b6506267aa6" shortcut="Vl.l" description="A shared field of type System.Collections.Generic.List(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1966e9d-1495-4afb-8436-c38fba5c7ac9" shortcut="Vl.u" description="A shared field of type System.Collections.Generic.List(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0848b760-0a67-412c-a00b-5e0c48fbd03b" shortcut="Vl.g" description="A shared field of type System.Collections.Generic.List(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3eda5b2-83a9-4459-b775-f408f5fe1727" shortcut="Vl.t" description="A shared field of type System.Collections.Generic.List(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0ab2664-33aa-4ae3-9cf9-1bc8b0080584" shortcut="Vh.b" description="A shared field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0386def8-b4d0-4792-be98-51618433c1c7" shortcut="Vh.c" description="A shared field of type System.Collections.Generic.HashSet(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2312fca-a895-4166-89f0-06a94eda581a" shortcut="Vh.f" description="A shared field of type System.Collections.Generic.HashSet(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cfaa8ab-6aa4-4559-99aa-612737ce2535" shortcut="Vh.by" description="A shared field of type System.Collections.Generic.HashSet(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7248b7f1-1bad-4c36-9e03-59e0e26b454c" shortcut="Vh.d" description="A shared field of type System.Collections.Generic.HashSet(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1df0f38-7e7a-4f0e-876b-9d331c96df4d" shortcut="Vh.i" description="A shared field of type System.Collections.Generic.HashSet(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60b069ef-e260-4c44-b829-bf57dab3671f" shortcut="Vh.m" description="A shared field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a59337d-a56d-400a-8c8a-66929eafc533" shortcut="Vh.s" description="A shared field of type System.Collections.Generic.HashSet(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29eb6a7a-85e5-44ba-9e22-4536f4537ac8" shortcut="Vh.l" description="A shared field of type System.Collections.Generic.HashSet(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="248979b2-d470-44a6-b025-a0c2db978e3b" shortcut="Vh.u" description="A shared field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58b40de7-0fd0-42bf-8aae-011ef4678324" shortcut="Vh.g" description="A shared field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a3e3c81-6c96-41ce-a115-809f6977c527" shortcut="Vh.t" description="A shared field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a913477-e239-4021-90ee-6212ff6b6a95" shortcut="V~b" description="A shared field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a829b1f-a3c2-433e-9530-e70a7b76d42f" shortcut="V~c" description="A shared field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ced73c5-bb57-4ea5-b071-29507bd7afd9" shortcut="V~f" description="A shared field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="600d7a75-cc50-4b0b-8cd0-f3d278a6e81a" shortcut="V~by" description="A shared field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2db92b6-42d3-4c38-80de-711a5615077a" shortcut="V~d" description="A shared field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d88810fa-3a7d-4e4d-989a-5214de8a9fe4" shortcut="V~i" description="A shared field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="592cbf35-07e3-4b8a-8311-d9675cd00417" shortcut="V~m" description="A shared field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0009c1e3-53ff-4ef0-b87a-ce11686db290" shortcut="V~s" description="A shared field of type System.Collections.Generic.IEnumerable(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9b8f45e-2bd1-4607-9033-d41420de9c85" shortcut="V~l" description="A shared field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76e94118-b551-40f8-bcac-f2b023a38818" shortcut="V~u" description="A shared field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0dcece5e-f47a-4a4b-8d46-79815f616f1b" shortcut="V~g" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d06aaaf2-ccf6-4dbd-83ee-335d6f601e3d" shortcut="V~t" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10c23750-912b-4990-a696-48bafe23c445" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7838485d-bd07-40e5-a40d-d49636761f49" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c1cbfaa-a690-4fa0-898c-41ab93355e52" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a73a625a-2cd5-4279-bf77-0fcf2225d0cb" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b7a2cc7-5790-482d-be4b-0b20ca2acb13" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fc88982-66dc-4047-ae2f-540b65ae846e" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95666eee-7a79-4a6c-bef2-35ace2029912" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0dfb473-1cfa-49d7-af5e-a0fa548bbd8c" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f68fb73-c224-49a2-b715-4fb11f88d05b" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d324c3b0-0d3c-449b-8468-5c5a4117ee44" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6746fdff-0718-4dc8-8ee0-bd45ea8edb5e" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e76f4034-002e-4f80-aa14-b2df88e8068f" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="647a6c60-8b10-497a-94e0-213b1685b30d" shortcut="nl.b" description="A field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b107952-a680-47f5-aba0-543dd58133cc" shortcut="nl.c" description="A field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="349f2618-46c5-4f8a-89f0-7ea29336827c" shortcut="nl.f" description="A field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60bdd7b2-890d-443d-8c80-4005b263f560" shortcut="nl.by" description="A field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69bf6701-4f94-4e5e-b9f5-aa6de53d41c5" shortcut="nl.d" description="A field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83fdd98c-b3bb-45b7-9940-c406782ab0ef" shortcut="nl.i" description="A field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce741c67-e0bc-48c5-8e0d-8ade84bf9297" shortcut="nl.m" description="A field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41109037-f7f0-45d1-b371-71b27aa676a6" shortcut="nl.s" description="A field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6aae607-0e01-4682-8148-6b9ebe3167e4" shortcut="nl.l" description="A field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09ab4b2f-9838-4520-acd5-f81606b901d4" shortcut="nl.u" description="A field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b45749f8-a6c5-4c03-a629-b742f08f7ef9" shortcut="nl.g" description="A field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a9ecb66-8cb0-410f-ac78-1c6de07ed104" shortcut="nl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd0dbc0f-3646-4b9d-b81d-3d74817fa7a6" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25100649-6e0c-4cab-b91e-58fe709d53d8" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e77e55e4-cd4d-494a-bd34-d1a773673b2d" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abe33179-6ad4-4064-97fd-b5080c843853" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b8d6bf3-2b80-4d6d-b2f6-5ec18f758ef8" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3393519-4afe-4332-adb5-4cf4b1a8bbeb" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b927570f-183a-405f-b443-b174763ed6c3" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9397a95-ba21-4878-8e8c-bc2e020897da" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1b74540-1d0e-46f5-8f0f-2f7c8f8874e1" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b4c2a21-b958-49bd-871a-0dd084428054" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f04d250-61c8-4525-a804-684e3e39c791" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b2d0577-8b3d-43c4-ae5d-82210570390c" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cbbc6129-bf9e-4eaa-ae54-0a2daabc91f2" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21bd5973-1125-48cb-9ad7-ae3dfcf678a3" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5e17f66-5c3b-4a04-a362-5d8413242fc3" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f23273bd-4038-4cb9-ac36-32042d216a24" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="647e411d-21ad-4245-8af4-cf5c3abb0732" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18119337-9ba9-4f7c-8303-0de44a0a8711" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88fff7df-99dd-465e-9b7f-518856e7e413" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="983330c6-676a-4332-a1ba-acdef9dfcd2c" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bd7cb3a-951b-478d-bf7d-7421f8a3f357" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fd11b5e-7de0-4677-bc8a-f3c07f872c86" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c5d6abf-5237-494e-9584-638bc4c8874a" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0da01923-f639-481d-aa78-d50092208416" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="948d64ed-5b5e-4399-83b9-813e46df60a6" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b47a8157-8655-4ec7-9756-ed5d5240addb" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4be9f7ef-5864-4c26-b97d-98edcc842938" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="545fab89-ce68-4800-8aa9-816a85efa5ce" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e6af388-f3b7-4578-ac2e-6ad71267aa16" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64b5fce3-4763-4199-bb39-92d6adac4d8c" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5edc97a1-6dc3-40ac-a002-7b9fbbe51bea" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3aaad791-1193-4deb-80fb-a8fea4309303" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71d056b9-4df5-44bb-89cd-352f4034a19d" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a85105e-8b93-4643-ac42-89ee3d530071" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="227a95c4-1929-4f1f-a03a-5ff17e117cd1" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3380fb8-b916-4060-837e-5f7837e18f54" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65ab435d-9f5e-4c77-a174-5120d65b1078" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e3d3043-a5b2-41fa-8ac3-e23bdfe1ca39" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0bc5c4d8-ec44-46ce-8d00-40b249484fec" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63aba08a-02b4-4ff1-800d-4fd8ec111bf2" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40d5d62f-bf7f-4b08-9736-6e93c12804ea" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f99aebd-f137-432d-8048-93ae46039019" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2817516f-103c-48cf-934a-84dadfca93fe" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72b4639f-d9d0-438f-b406-df852c9880eb" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="318f6294-b93a-4d96-ade1-6a59356fd26c" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="868e6870-9620-4d72-9df6-c624e3977257" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70483056-8a65-4d06-8f70-07d87d433426" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da4dc253-5eee-40e2-9efd-3ddb598fbefb" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf1e296d-8562-4d48-95b4-291d34ff3c35" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c223a1b4-02f0-4825-8803-fa0dc37333b7" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c543003-f07e-4aee-b77b-dac8dbd50125" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b864b15-691c-4c53-b2f6-7ed165dd97dd" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97c37475-fd9a-40b8-aebe-f7cb60b2660e" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a5cda26-25d8-4073-aa4e-dc231b9f42e7" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47b0ff5f-8d0e-47ad-b943-0e391cc8df79" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7ee8dd3-6ec8-4e33-8d19-18a9c33caea9" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ef5d932-77c1-442c-a80a-ec54047ea884" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9fbdcef-070f-4f40-baff-abb7136b4aa9" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="214ce14e-fde2-4667-b3ba-73ef18e9b8dc" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6809224e-b118-4fc8-859b-b826cf7777fb" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e09c950b-55eb-403a-b934-e11d5101e876" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fe86c9c-6f21-40b4-b925-3e497d2388e0" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73494b76-8b0f-49fb-a22a-63beaa6df338" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4417344-1b71-43ab-9f30-223326ca97ea" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="440e7d8d-bdb9-41f7-b5a6-d7ded0c3c44b" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7af3100-c143-4860-b887-01e17922b500" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11001afc-1f7c-4d4c-a029-0c6c08f2cda3" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47aadacb-3bb1-4588-9754-13b5815cc965" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14489492-deb1-4c43-bb89-2f0bf3a146a8" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1659fa34-fb40-4d8c-b854-ab807f0f8004" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d9b5e69-b22b-4fb0-b1ef-e4d81f2017ed" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bc5799e-4490-4298-b201-bc29a25c59b8" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df0c7d80-10a7-4fa0-a49f-0d5f836c2c6f" shortcut="tb" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8945125-4d6d-4d4b-9d0a-d6087b95cb4a" shortcut="tc" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a7fc6e1-d488-4161-9e18-830318d00c6e" shortcut="tf" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aee0a048-9703-4671-ad02-c4945aecb299" shortcut="tby" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02a1851e-76f2-4622-b731-bead04bbd101" shortcut="td" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba8c9213-680c-43f1-b607-fd3eeae29f9d" shortcut="ti" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0902bc2e-1239-4706-9f13-724982c6ad9d" shortcut="tm" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ad13280-6156-4dfd-a28b-466a5aeb9bcd" shortcut="ts" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2989cc79-3d5e-488d-9f67-fee0bb6a2c33" shortcut="tl" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97c4bc17-f95f-40e4-90cf-b423b63b96ac" shortcut="tu" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c16d3b21-28b1-4a36-8365-4a27e6d89707" shortcut="tg" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="821622e2-9401-49d2-ae89-ad9a60276a60" shortcut="tt" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df2a9a57-370b-4177-ac67-0af283079dab" shortcut="tl.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60ccf6d5-b055-4522-84b7-d900df329771" shortcut="tl.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91a0a4f7-4492-4ba9-b1cd-d295614507df" shortcut="tl.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a5c492d-8b21-49cf-8082-a2117888717f" shortcut="tl.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67411ca3-b416-4c4c-92f9-e448f45d7d57" shortcut="tl.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81eb6163-3443-4876-be30-aec5177bf524" shortcut="tl.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1599af7-8501-4d9b-a264-7717793372f0" shortcut="tl.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b47117a6-4868-4870-a0e8-809819d7710a" shortcut="tl.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3155ce8b-782d-4243-accb-969d3bcde9b2" shortcut="tl.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6a063e3-a33e-4baa-91fe-2fb43474b30d" shortcut="tl.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="384839a3-7e66-4ce1-9d30-3be920194a11" shortcut="tl.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cdf87755-4b1f-4ccd-bc6b-e3291d0daacd" shortcut="tl.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9d378c6-8622-4a3c-9206-da0b44a712e8" shortcut="th.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95b85c03-b764-42ca-b539-a3ec89be9229" shortcut="th.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14c8282f-88c3-4dd3-87f7-b394b30b1da9" shortcut="th.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="567a5280-0b93-4396-828d-ba08d4c72fba" shortcut="th.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c34179d-f284-45b3-97c8-fb2fb267c64d" shortcut="th.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10c418c2-33f6-4652-a522-cf3a391d91dc" shortcut="th.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b2f6c94-1e14-4c20-b4b8-965b7c6a3945" shortcut="th.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c7d5e0f-8204-4094-8496-300ea13f98e4" shortcut="th.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88f230e8-d29c-4ccd-b529-5d90def4277d" shortcut="th.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ecf54474-e22b-4e02-a50f-86f080b445bb" shortcut="th.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6d67904-e528-471b-96c4-97384dbe7f65" shortcut="th.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02701b9d-1a2f-4289-a36d-e3ec32902c38" shortcut="th.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de89c80f-d5d5-4a80-9058-5259d7078a60" shortcut="t~b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d44f333c-4489-4ecc-bb76-c3f33da3bc8a" shortcut="t~c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="308fa2b3-2583-4766-88b9-66dfab9be86e" shortcut="t~f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="145f2bb5-8616-4137-8317-338bdebeea9c" shortcut="t~by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6963bf4b-7910-430d-907b-db1bdd6fafa3" shortcut="t~d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15eb617f-7126-47c6-9d0c-e3728098d3e8" shortcut="t~i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="16a6525a-29cf-4bc2-af31-1c3e742129f9" shortcut="t~m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23ab8e99-f537-4207-ab43-13c1c91b4293" shortcut="t~s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="462cdfef-f832-48bd-b1d7-094a6b6feaad" shortcut="t~l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cac7d146-9148-4b4a-96c5-083dc75bcd65" shortcut="t~u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4574fc2d-4d0f-45ab-bc48-1352e3cb5e11" shortcut="t~g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e06dbe16-1d2d-4647-8bdf-b2bd4944ecba" shortcut="t~t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b2cc91d-2599-47e8-8129-8d8ffc31c989" shortcut="mb" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56a89358-861b-4ef2-aede-1fe4e5d835fc" shortcut="mc" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="910d142e-2361-43f4-88e8-de0faba5f145" shortcut="mf" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1345dc7a-2831-4f0d-92ae-3eaa4da9b13a" shortcut="mby" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fe1e18d-2d65-458d-b388-76f1e187de26" shortcut="md" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62683163-d23d-48f7-8817-d291d1d69546" shortcut="mi" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abe170de-d24b-4f9d-b4f5-3bf7c16202af" shortcut="mm" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10f31d99-ce84-4a4a-9ff3-034bcf07c8a4" shortcut="ms" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f81a8c7-a107-448f-aa8e-c2ec90411082" shortcut="ml" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5c186eb-0558-445d-93e3-9bf33cbb1f4d" shortcut="mu" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="350a23c6-7901-4a46-8d72-8cb14f92e1c8" shortcut="mg" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="253541e5-9550-4536-affd-a760054c2589" shortcut="mt" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90db8725-f437-4fe4-802d-9d4444c7030f" shortcut="ml.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa2e91ad-4e5d-4e80-8357-80487483a9ef" shortcut="ml.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf87abef-588a-4cad-aeac-57fb3e42b71d" shortcut="ml.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcd7fb92-dbb5-4c2b-a007-c78bb14109c3" shortcut="ml.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82b5fb96-f3b1-42c3-be18-7421d9b19acb" shortcut="ml.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7906ff89-90d2-42f1-913b-c82d088aa902" shortcut="ml.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c003c5f-b842-4afd-b457-5ccf78f6e526" shortcut="ml.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="146ca442-61e4-4992-a55c-acdf9c063abf" shortcut="ml.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25ebe76c-2f26-480d-b2c9-c1e901924716" shortcut="ml.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc282493-6a51-4712-9ed7-60dd1375292e" shortcut="ml.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="430f827f-45ae-495c-9ca9-fa066af58f26" shortcut="ml.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f40a6219-a61d-4e42-9366-de6f7d3748cb" shortcut="ml.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8379811-ef50-469b-9a98-7c88995c4dcc" shortcut="mh.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44e27b83-e24b-4c0c-a3c6-663d62aff5d3" shortcut="mh.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2cb9fd6-8031-4e10-8b74-b38d2d8e99ec" shortcut="mh.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0fffbf6b-74e8-49fb-a81d-2fc95c253a05" shortcut="mh.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef3c38d4-8f35-43b3-9bee-55ca42b8b075" shortcut="mh.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10e46a8c-09d7-4010-b489-24687c0eef9e" shortcut="mh.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="232a3589-b13a-440c-81a7-55e5075482e6" shortcut="mh.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df14d37b-7175-44fd-96c3-8c07ddf288bd" shortcut="mh.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62bd6008-6015-423c-bf0c-d203821fce2d" shortcut="mh.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73da7647-28ea-495b-8a36-9322393eafe0" shortcut="mh.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1ce8dce-8d37-4adf-bcff-c0de99d3fa6a" shortcut="mh.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b65a920-6dac-4e05-9d71-af862279e4e0" shortcut="mh.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f35fdcd-a899-4cb7-a12a-fc046f278130" shortcut="m~b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="baac72ae-b5ef-471e-90f7-5ae47cde3e45" shortcut="m~c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0c8a34c-6605-42a8-9631-97369888955d" shortcut="m~f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b5aa60b-d35d-48dd-8247-e2971d1c3351" shortcut="m~by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2c7a198-4b10-4818-9a8e-b787ce0655cd" shortcut="m~d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e123580-b6ad-4d44-9b47-9119f238f900" shortcut="m~i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f213d68-838d-46e2-8eb6-534bef25c184" shortcut="m~m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9507fb1-d2de-4095-b80b-24a5ce52da33" shortcut="m~s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c56fa75-aaf9-4b85-9512-796ded9e08f1" shortcut="m~l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02a71018-1bda-4f81-9708-c910a03b7982" shortcut="m~u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26c865a2-f59f-4a87-aa66-12908de216da" shortcut="m~g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbf98c21-8600-40b0-a4ea-dfd9c1bb665f" shortcut="m~t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc455d80-4638-44c2-9942-b6955dbab835" shortcut="Mb" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bece0c06-6fb0-4027-b213-08780530c934" shortcut="Mc" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f40eee4b-f1fa-4690-87b6-62e5e8775373" shortcut="Mf" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43548298-a2d9-4cf7-bbfc-81def115d4cc" shortcut="Mby" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5aadef9b-32ca-46b3-9571-c65b47f3d033" shortcut="Md" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38f7aa5d-32c3-4ff4-a6c7-4ab53199b190" shortcut="Mi" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ce9883f-7b9e-47a1-a4f6-29e5b66ecab9" shortcut="Mm" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dafd07ce-7c6d-4e04-a5ad-1d5a694d9feb" shortcut="Ms" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1995ee01-b1bc-487c-a18f-669887ffd057" shortcut="Ml" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02bf970f-2d04-46d3-b865-c23b51c17e9e" shortcut="Mu" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3bc739c-a31f-49b0-a030-29c7dcfe3180" shortcut="Mg" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88b9c43c-6de4-4fca-bc2e-26f1829c9fa6" shortcut="Mt" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="469857e1-8a29-4dda-9949-2b4549ad05ba" shortcut="Ml.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99787a20-c3cf-4d11-b04a-a6ae289809eb" shortcut="Ml.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7125eb64-f195-4405-81da-c204d9aa47dd" shortcut="Ml.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a0f183f-51f3-41e9-92e7-79e994a6bf76" shortcut="Ml.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="582e2378-bced-4add-9321-4c47115be737" shortcut="Ml.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57d7f937-a7d2-4b7d-84a6-3229bcb4bb9b" shortcut="Ml.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b95fc391-56c7-4869-be89-eaa7991451a4" shortcut="Ml.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f283a556-b50e-4a30-9d68-d68aba39440c" shortcut="Ml.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abc01f64-0fb9-4ce8-872a-c1ceaa516ff9" shortcut="Ml.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7275af1a-038f-47ea-8abf-65b686432a4d" shortcut="Ml.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="651774bd-def5-4412-ae06-3759246c615a" shortcut="Ml.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e6607cb-3b28-4838-9f0c-afbc41c37fdc" shortcut="Ml.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9939aa6-8032-4baf-b9a1-0f4c11ac9c19" shortcut="Mh.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c27e034d-8948-40ab-a372-59193c2a9a16" shortcut="Mh.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="faa01adb-35a7-4f19-bccb-e9c8228e10fc" shortcut="Mh.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb5c0625-d41b-4837-bfde-a4078c61b52a" shortcut="Mh.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0aceea1-6546-4a1b-aa0f-6978708955f6" shortcut="Mh.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be093646-9f36-4c23-b51c-6858a7cd1d9f" shortcut="Mh.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60d404ac-6fb4-4200-8faa-ad8cc2b47a49" shortcut="Mh.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="723a884c-6de1-436c-9fb4-899e27f4eda6" shortcut="Mh.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b8f9ed9-1fc5-45a1-af2d-313017477d96" shortcut="Mh.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="195fce3e-40c2-4095-9c9c-62463a2be667" shortcut="Mh.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="912f3415-e858-42f3-8e6e-582fe4ccbe1d" shortcut="Mh.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c5281e5-dd88-4cb9-bce5-c9e4112dd0c9" shortcut="Mh.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac0e1f38-fac9-41f0-a646-a2ed23bc7cef" shortcut="M~b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fbeaa1af-167e-468b-9405-3731ea0f818c" shortcut="M~c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f56b548-0271-4985-9c48-796faf0952a1" shortcut="M~f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="367f004c-6a8e-40d1-8905-034b3f2e5237" shortcut="M~by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3b6c10f-6970-4a38-92b3-f76934c6cb80" shortcut="M~d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="413f5997-212c-4265-8104-aedbd3e94b9a" shortcut="M~i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f866699-3d34-4514-8109-2d8c172c00e7" shortcut="M~m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3480f381-8611-4784-ae05-493b802bea0a" shortcut="M~s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7984cb48-ff42-43c6-8fac-908bdc5ff4a2" shortcut="M~l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="daf09404-0647-4ca7-8130-3e66bed844e7" shortcut="M~u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6b111db-ba56-4de8-91ea-2e6e1bd1da19" shortcut="M~g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03899877-4fa8-4fba-abd2-16afc41c7b88" shortcut="M~t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5f4f92a-32cc-4b60-9ee8-cee75f3a3d7d" shortcut="mb" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b67d471d-1e3a-417b-8539-fac624b51889" shortcut="mc" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cbfec58-cffe-4712-a0bf-ccf103b025b1" shortcut="mf" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e89a2bee-2a5f-4bf4-b855-c855c4102c94" shortcut="mby" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="056256f2-70bf-48d9-8dec-e036057b5a34" shortcut="md" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8d7b0f6-78cf-4c4f-aff0-aeda772decf8" shortcut="mi" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6cca567-19ad-4c61-989c-8c074fd06f9b" shortcut="mm" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4f547f0-a416-4b1e-8080-4738784ba399" shortcut="ms" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="019b9914-afd7-4cb3-8064-279336b0d3a3" shortcut="ml" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f49741f-29eb-459c-91b4-504e0d1cdf31" shortcut="mu" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="832c793b-eaf5-4b7d-ac09-31b4c89fb818" shortcut="mg" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d89ad38-6804-4199-b8fb-6a96683cbcb4" shortcut="mt" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c57dc87a-bc75-47a9-800d-53f6c4a7b88b" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92d4162a-eb72-4960-98f1-b0e3e71808fa" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="995cde2c-6b3e-4282-9f77-c5916898b82d" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5bc6983e-e36b-45f2-82e4-481aec77fdda" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb6746d5-3dbd-4339-9864-e81d28302b22" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68cd638a-6b1c-499d-86df-32d02ef038a3" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9247ae5-fff6-4491-959d-749ae6cef795" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ae5397b-0b1c-40da-a65e-5767e3a0dc0c" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc8f6864-f108-4152-a0af-7cd223a9c597" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="946245dd-4785-4764-8494-f1ecdc549a2e" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30663bec-1fc5-4157-8b04-e2b1c6513688" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a67799e1-0917-4bfb-b3bb-ad250ac86cdb" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a1c7ec4-3c66-4049-8699-48c786064cf9" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37248392-2427-4c06-b803-0ac4e1230109" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcb66df4-1432-4cde-9d84-b3739ed353fe" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebeff757-b865-4e8a-9abf-2af7f9f010d5" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3716721b-b147-430b-bc96-842121576ea8" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83ec9f99-0263-4729-a654-18edf92c7e8e" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1504380e-b36f-450d-b249-b7cc545c698e" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03fe5784-4588-4bf8-b746-8e285ec0b9ac" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a52b44d-5353-4f19-ab43-dbb812c4b1f1" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f1e24e8-91da-4b97-b08b-38649893db6b" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="343af5bd-56be-4cee-8588-f5f3bbc04056" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdd8dfc1-782e-41db-8ce0-524bc86ebd2e" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e628432c-a130-4b26-adb6-8dda0b680db4" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75fc10a9-7df5-4290-aa89-25522e1c32f0" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef0ac393-e73e-4414-afba-ad82af89caee" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2eddf8d-bd6d-45bf-89ef-c22c197b4e67" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e26aedfb-28fb-409e-8e7c-fcd647ca030a" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22a0dcfe-060d-410a-834b-744eca2a8d65" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f62a93f3-480b-4bdf-a5f0-7e4f60e77a21" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cc6c2a9-3ce0-4b2e-b15b-ba9b3271c63f" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77fe4fce-a803-4354-b3ae-a2765ff961a1" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39e5403c-a2bc-4f1c-ac7d-64fd67d32501" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5cf5b73-de80-45c0-8de8-a9fb555b6dae" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cccbfd7-3106-4b06-ab77-cfab6893b9d7" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15797047-73c7-42bf-bbdd-6146a5c6649e" shortcut="Mb" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf80fc8c-6f74-443e-88d5-d1a117435267" shortcut="Mc" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45fed29b-54fd-47b0-ba30-637ce8be2c29" shortcut="Mf" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c817899-c5d2-4c91-8110-262877383a50" shortcut="Mby" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="724c48d0-d8ed-48cf-a9dd-945efca9fcb8" shortcut="Md" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1eaeb19e-28e3-4b3a-9d74-02a543511bb1" shortcut="Mi" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f38f4c88-f088-4ac8-ae54-9465dda945d2" shortcut="Mm" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2a4d87f-21e3-49a4-b6ba-8f5348a58f8e" shortcut="Ms" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2246389-684b-4f00-add0-ce9f45f7388c" shortcut="Ml" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ff5f3cf-02de-49b7-aaac-43297f86792c" shortcut="Mu" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ddc5cf2-c564-4b5c-99db-fceee240cd5d" shortcut="Mg" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64c47b06-3226-4685-8607-af5794703fda" shortcut="Mt" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac943d81-b2a4-4475-83a1-a9582e623eea" shortcut="Ml.b" description="A shared method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f37562b-c14d-4c05-8f22-0b872ce4862e" shortcut="Ml.c" description="A shared method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8f00a66-e9b2-4eb9-8da8-206d3506f6be" shortcut="Ml.f" description="A shared method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7306e6d5-1a6a-45e3-a96b-b6f5820b3ea3" shortcut="Ml.by" description="A shared method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b42a526-4c9b-4d05-ad8e-420a4b64e0b8" shortcut="Ml.d" description="A shared method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d069a4d0-8bd9-41e1-8f89-f59b86f11e5a" shortcut="Ml.i" description="A shared method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0133b30e-e43d-4be0-b061-372e4ce78502" shortcut="Ml.m" description="A shared method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b130d7c-e1cd-4e9a-b9f9-59b22b7ab698" shortcut="Ml.s" description="A shared method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e8f6ed4-68be-4f68-9c61-0c6daa01b4bc" shortcut="Ml.l" description="A shared method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb0b266c-94f2-49bd-870b-8b769f42a163" shortcut="Ml.u" description="A shared method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9fbe967-773f-4ce1-9caf-c66f174b1908" shortcut="Ml.g" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39b74cb4-e17b-45e5-bb39-f63f933f7a26" shortcut="Ml.t" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58544b02-b944-4d31-b328-71636baa81d9" shortcut="Mh.b" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b04a175-c03c-4fc5-a5b4-152fc5216560" shortcut="Mh.c" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b676e0f-5e81-4abd-a405-569a7d6639b8" shortcut="Mh.f" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3390597d-111d-4a3b-b9b5-76ad97168cba" shortcut="Mh.by" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55550789-eb41-4b53-abdd-e474cfb08a13" shortcut="Mh.d" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c63f323-718b-401b-9b5f-bbe476f1ad91" shortcut="Mh.i" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="301dcbf2-cae2-44a7-8649-d3e76e596a37" shortcut="Mh.m" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0920441b-8826-44bf-94f9-75fa7287583b" shortcut="Mh.s" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c75b2d48-859c-46d0-92b3-266eb6a6d4c3" shortcut="Mh.l" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="863c5a86-6e81-435b-935c-b78329f4a767" shortcut="Mh.u" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edfb22fb-8b81-4a05-9ee9-09c8827ebfb4" shortcut="Mh.g" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="979b0389-a7a0-4c16-acee-566120e56adc" shortcut="Mh.t" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df543936-e98d-4bc8-94e5-68207cc60826" shortcut="M~b" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01bb5988-132a-45b0-8707-ad8dc978fd95" shortcut="M~c" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15f7789b-57af-45e7-8fa3-23751cda3ec9" shortcut="M~f" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="896bd187-e937-4b54-bdcf-1edac2879378" shortcut="M~by" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e58c5361-6339-447f-97a5-d3a10e7225fb" shortcut="M~d" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1c176f1-af4a-4e55-bbcc-c68c2a892bf6" shortcut="M~i" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42d8a56f-fbf6-4bb5-9ee4-31f369d711f5" shortcut="M~m" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88f1b3dd-428d-48fd-8388-9a9102366d43" shortcut="M~s" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c24f020f-a8f4-4522-bbca-ff069531d8bd" shortcut="M~l" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="948f0548-fb05-497a-9cbb-2510098ea042" shortcut="M~u" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8de62ca4-da2f-4a47-998d-59b03ce52a7f" shortcut="M~g" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="482e368d-c701-4a48-8b35-71eeb686daea" shortcut="M~t" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="215a0716-3831-492f-9cb9-4ac11269692a" shortcut="pb" description="An automatic property of type $typename$" text="Public Property $propname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e6bcdd0-b3f1-4f03-a5d9-0abc621ae034" shortcut="pc" description="An automatic property of type $typename$" text="Public Property $propname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e305e16-eb14-4c9a-9128-7f3c103dae0a" shortcut="pf" description="An automatic property of type $typename$" text="Public Property $propname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29de486c-e0a6-4f0a-9842-94e8692c9e79" shortcut="pby" description="An automatic property of type $typename$" text="Public Property $propname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cab8e5d-148a-4ed2-add8-f2d62af7ce72" shortcut="pd" description="An automatic property of type $typename$" text="Public Property $propname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7feb7797-27ef-4102-b4db-1089356e7dc6" shortcut="pi" description="An automatic property of type $typename$" text="Public Property $propname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2412bd83-b00d-4be8-81ca-6d857a36eac4" shortcut="pm" description="An automatic property of type $typename$" text="Public Property $propname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7c8d24c-9109-4420-b642-9d0b3a8143ca" shortcut="ps" description="An automatic property of type $typename$" text="Public Property $propname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efec3ca6-62e8-4398-855e-da305f27e751" shortcut="pl" description="An automatic property of type $typename$" text="Public Property $propname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d61bfff-7907-4e9e-aad9-449a6c06324b" shortcut="pu" description="An automatic property of type $typename$" text="Public Property $propname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c4c7c7d-55e9-4e2f-8105-5125d8eebb60" shortcut="pg" description="An automatic property of type $typename$" text="Public Property $propname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb1016c2-3d67-4120-9e28-182d9c909f14" shortcut="pt" description="An automatic property of type $typename$" text="Public Property $propname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6bae3166-1175-4ad4-a5a0-e82616195e96" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90498125-d41e-4a6c-bc46-4f8a19dacf45" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List(Of Char)" text="Public Property $propname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74a90156-2736-4e38-a49d-f66085a7716f" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List(Of Single)" text="Public Property $propname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7eb16ac1-0a82-4a54-a880-01bf30dc9ddb" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0eac659-4f2c-464d-831b-092962373496" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List(Of Double)" text="Public Property $propname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12692548-1880-4702-8dfd-fed21d5db45c" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f02c6dce-844d-4475-99a7-670fbb16e198" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ffc5dfe-0c74-46b5-8dd5-c9d1c895c209" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List(Of String)" text="Public Property $propname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8616aaa7-b042-40a3-bef4-e3f8db191f5d" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List(Of Long)" text="Public Property $propname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae5d483f-cc73-4eed-b0b7-1fce05531184" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ac75a17-0cb7-4261-a05c-bdad3f4f4f9c" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b1761bb-8901-4599-828d-73bbb1c74cdd" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee7ee31f-e679-44bc-80e9-a4ecd69b3272" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a0d4342-d1de-46c6-b344-2d5714e86a97" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet(Of Char)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e68e9e14-5a06-4cc8-9849-85220bacbe7f" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet(Of Single)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd2d819a-c9de-4083-9e89-e4cc95c36bef" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2319e07e-6f29-44e8-9af5-474905287fde" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet(Of Double)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e3958c1-3ce5-4dff-8b56-e439fecfa9a4" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65a63cd8-27b1-4f3d-97df-10e418bd1184" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="190191e7-f4cb-42a1-8d34-70fa97b02f6f" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet(Of String)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49de7359-b835-4cab-9fb6-6b8fccc5972a" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet(Of Long)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93b1488a-ab34-4435-834d-4e2cfaf8ba39" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e73096b2-9565-4057-9bf2-c6dbd78d34d6" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a069c89f-596e-4a40-876f-3333a5671416" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0753d713-06e0-41fd-94aa-f59214a36e46" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1997bfc8-1f71-4769-ad33-e087a8234194" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Char)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e87f965c-737c-4003-a72c-e3bd8596d3ec" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Single)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6f9761c-3c61-4e00-a72a-86056e1f823c" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9af9fd5d-6ad9-473f-9a57-99e2859c6960" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Double)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc2fae5a-1e03-4dd8-a632-d69ed04af726" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e93a405-337f-478a-a789-f5c291f08f5a" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b84a9dcf-38e0-4e17-88a0-55f4432b5f19" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable(Of String)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="396bd461-75dc-4d7a-89b7-7a61c58bd145" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Long)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d25be06b-2af0-4975-bfdd-3d12c70011bc" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8134084c-d50e-4e8b-9eae-7f8e40c23494" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19a60ea8-37b9-4da1-9119-4d3d4451f683" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
</TemplatesExport>