<?xml version="1.0"?>
<TemplatesExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" family="Live Templates">
  <Template uid="6a50880c-8cb5-4e93-bade-d0f182e4bf01" shortcut="c" description="" text="public class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3084baf0-c1fc-4433-a098-ee1845e8d0c8" shortcut="a" description="" text="public abstract class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ca026ba-f884-4209-9f8d-f59625a1f58b" shortcut="C" description="" text="public static class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9fcd7422-d89b-4247-975e-4ec72d35cfbb" shortcut="i" description="" text="public interface $INTERFACENAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;IMyInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30d47cff-4804-404d-8833-f5935b3fcada" shortcut="s" description="" text="public struct $STRUCTNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;MyStruct&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65396c82-c738-4deb-943f-d3cd71460544" shortcut="e" description="" text="public enum $ENUMNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;MyEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="caa3a5a7-02bd-4ac1-b728-286415e27bbf" shortcut="c" description="" text="Public Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef55d998-1a02-49a5-b9a6-b6a0f98a5f8e" shortcut="a" description="" text="Public MustInherit Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6962cc66-5dbf-46b8-baab-d7dc09bac43b" shortcut="C" description="" text="Public Module $MODULENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="MODULENAME" expression="constant(&quot;SomeModule&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17c27e34-eba4-4e0b-aa0c-3c54c2c94ac6" shortcut="i" description="" text="Public Interface $INTERFACENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;ISomeInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d036a6e0-87ad-40a9-9b24-a58478c4d4e2" shortcut="s" description="" text="Public Structure $STRUCTNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;SomeStructure&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55170433-e9e8-49da-ac0b-cf81d542989a" shortcut="e" description="" text="Public Enum $ENUMNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;SomeEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fcc5bb84-3659-444a-9ba6-fe2548c6e750" shortcut="vb" description="A field of type $typename$" text="private bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32f35a38-e8a4-4f10-949d-3fab0e2966f2" shortcut="vc" description="A field of type $typename$" text="private char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d16a7f8b-e0f7-459a-963a-4cd69ef6d328" shortcut="vf" description="A field of type $typename$" text="private float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b2eec4c-14f9-4449-9c01-1d9b7a9a19a3" shortcut="vby" description="A field of type $typename$" text="private byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e23494b-e109-4499-be24-40ebefc523cc" shortcut="vd" description="A field of type $typename$" text="private double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c787f207-e590-4122-b2e1-4f52df697af6" shortcut="vi" description="A field of type $typename$" text="private int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="569d3050-786d-47d0-992a-dc2b80c58f15" shortcut="vm" description="A field of type $typename$" text="private decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c54069d1-dba3-4b80-88bc-c19d46fe8640" shortcut="vs" description="A field of type $typename$" text="private string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77afdfc7-87e0-47b8-b3c9-133b40dd3c4d" shortcut="vl" description="A field of type $typename$" text="private long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89539659-ecca-42b1-b4f0-8809d47eaf50" shortcut="vu" description="A field of type $typename$" text="private uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f2a751d-425c-4ae8-b266-e50057d9f880" shortcut="vg" description="A field of type $typename$" text="private System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43bbb513-ded0-4002-8f5a-cfb4081daace" shortcut="vt" description="A field of type $typename$" text="private System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f74e2a6-0bfc-477a-b251-f590a2b04f1f" shortcut="vsb" description="A field of type $typename$" text="private System.Text.StringBuilder $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fac3a225-52e5-4449-b0bc-f05ce6c1b0ae" shortcut="vl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt;" text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5e3f1ca-6921-4ab8-ae5a-b58d278e2f2c" shortcut="vl.c" description="A field of type System.Collections.Generic.List&lt;char&gt;" text="private System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00c877fe-b706-4047-8dda-8f618ab99c16" shortcut="vl.f" description="A field of type System.Collections.Generic.List&lt;float&gt;" text="private System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e113412-5d6f-4f6f-9b29-31f0b05243d3" shortcut="vl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt;" text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb08ed54-bdca-4d4a-8944-daec8ff67cff" shortcut="vl.d" description="A field of type System.Collections.Generic.List&lt;double&gt;" text="private System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c21bc668-ff22-4ade-93fa-cb904060d97e" shortcut="vl.i" description="A field of type System.Collections.Generic.List&lt;int&gt;" text="private System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d15a21c-7f3f-4325-a18d-09d621e3e50b" shortcut="vl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt;" text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11e570e4-f0d6-441b-875d-ab1d649f9a0b" shortcut="vl.s" description="A field of type System.Collections.Generic.List&lt;string&gt;" text="private System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4586b5fd-5e26-4905-a422-8d39506a6ee5" shortcut="vl.l" description="A field of type System.Collections.Generic.List&lt;long&gt;" text="private System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f09dc776-53fd-4881-9a93-96ff6ec0db5e" shortcut="vl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt;" text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="739f90e9-5719-4c9b-ab55-3c9c15fe458f" shortcut="vl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c9e34e0-0225-4146-b3c6-54fb2b11b5b2" shortcut="vl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2145aec-07e0-453a-a518-af3085e63561" shortcut="vl.sb" description="A field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90b70684-8302-4215-9994-08f4009c5f3e" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c49f874-7c38-44fb-8dc6-99b47e1e0dff" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="020d0dfa-077a-4c3c-a96c-0e47b0621ea0" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09f7217d-59c0-4323-beac-3aec7898f7b7" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e3b655f-b96a-4863-bb30-5647ba68767f" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39d3a4af-7e40-4eed-8d3d-93f48f292c22" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09ffc80c-4761-4dc3-833f-ec3ac9ed37ef" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb6ecb49-d0b8-487f-a090-e4645771095b" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e28999b-63ef-4c4f-b0c4-483dc12e8b6e" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a49f3dbe-5208-4134-b6cd-730fa5445907" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49fa8a47-ab2c-4d97-8bf1-bd4394987544" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e53c3ece-0f23-423e-ba8d-d247b3810464" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52250f03-9e91-4247-ac2a-fe3601163734" shortcut="vh.sb" description="A field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2602f10-5289-42fa-81c4-6de29f6b6ae7" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b932385-2c71-44bf-9694-dbc68b745721" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19ef0e92-ac13-4959-8694-2309d0842462" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc7529f4-d0b3-4b0a-8836-001a24705c66" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe2897ac-ab97-4d92-ae47-3477abdb8530" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b7f4fb7-3f9a-4741-bfb3-1fc06e3004ab" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3cdf7a5-47c6-4f15-a0be-609479517b2e" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c2e850c-8616-4e1f-b010-12b6c2d07ccc" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79af334e-c6a9-4898-ac4e-257cc2eabfb2" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63961b2a-4c3d-4141-8af2-ede1327fdc01" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff38f40d-e11a-4a6a-a6b0-269c6b007036" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46f215f2-7db2-4759-b85d-abc85ca365b5" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8bcc5799-3456-4254-9078-d41f9cd3bc38" shortcut="v~sb" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20d291ae-fe78-45cf-a37b-1270148cd08b" shortcut="vrb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="841e2f25-0727-42ab-a0de-cdcec2a6c275" shortcut="vrc" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="007b6e5d-bd7b-4b01-9a6c-99b332701dc7" shortcut="vrf" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aff3736a-1dd0-457e-bb32-90608e23ed41" shortcut="vrby" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb2b3af5-882b-4776-8d8f-fd94c0776f37" shortcut="vrd" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65bab5bc-c1dc-4b2f-b6a2-f44bec974403" shortcut="vri" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf4f7382-a3eb-487d-bd33-8e163252e6c3" shortcut="vrm" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df7941a8-7201-4d74-a16d-9d315c754af6" shortcut="vrs" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="add6b311-076d-4493-b122-4182f83b1ae4" shortcut="vrl" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f56a8154-064e-412b-bf29-f8eb77cd689e" shortcut="vru" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75b85deb-ab22-47b5-aeed-53c4f812733f" shortcut="vrg" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9797ef0-16af-4747-881e-324662295b2a" shortcut="vrt" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80eef224-2bbc-41a1-a171-02eecf6f9a85" shortcut="vrsb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd67120d-a655-4f35-bb34-3bf701e355d0" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a73ff3ad-6f18-418b-a882-9d3cb39ebdef" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e18419c0-dabe-4678-b282-3a6ae78954b5" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="555bf2a4-313f-44b7-bdac-1c35c437548d" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bfc63ed2-6329-4c30-b9fa-d2d9190deb24" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17533c3a-79f8-4e58-9eb6-285d83bed9d5" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01fd76d4-3877-4716-9fc7-c5a0b07aa3ea" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2446d6d-4121-42d3-9ff6-b6bfea2e5f1f" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7c50a29-8cd5-45ab-9aad-c15eccd217b9" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ed27f68-860b-4115-8b9b-d2dea0d1d4ad" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec98e2e1-b6f4-4777-8894-e46aecdc2e15" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37769e86-4546-4f42-b844-8f5d78ac548c" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3c0e532-cd9e-42e8-ac58-41201c6f770a" shortcut="vrl.sb" description="A readonly field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55f0633f-f0a7-404f-9e46-050195ede973" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="feab67dc-48eb-4ad5-96da-14c38186a730" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35ecf641-cad9-4a56-b0d6-237b97d94b01" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2875b98-0a13-4e0e-a2f2-66295d5a82f9" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31d5175d-3f8e-4d12-8ff9-fcc7885a1e63" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1fcbb3bb-beb3-40c1-b365-bb8f6d3852e5" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34e95b8b-f0cb-44f3-8f4b-aa56f45b0292" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="54c40418-9ab7-4a91-acd6-b69dc35658f0" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76593c03-bd9b-49bf-af9e-0809d1eab0c6" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aedda472-3a48-4d8e-9772-817c1eed039c" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="04906895-b15d-4e99-85cc-fe3357e1d7b1" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11d7fa49-4b93-4f12-ae02-e81e18544ecc" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6004236a-8e27-471a-9dec-6e0648235588" shortcut="vrh.sb" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="563e1088-128c-4619-b8d9-e907d7e6b477" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d47faa6-87af-418f-81a7-cd01d6132099" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af43aa62-15a7-4839-bf06-bdd9f86f317d" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2ac2e2a-2b67-4d98-9fca-121f29c2d97f" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="246c7acc-3261-4415-a431-16d7e0333004" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10e7cf82-097b-42d9-8161-d74f84fe006b" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e90292f-c148-42ec-a3f7-faa3fff0f0a5" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dca80e24-6f1a-4e8a-95cb-f0add5fed101" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e23d2ca-20a8-41ee-80c4-49c48001f546" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2710df3b-d214-48b0-9385-85c551f5a1c9" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="080d3ca6-ee83-4916-9280-12672a4f5592" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="740a1cc3-8a29-4ff8-aff7-eee418d3fd24" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bed51612-9f56-43fb-875c-e7bb80717e55" shortcut="vr~sb" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7dce1fd9-3464-4024-aa1c-be528f2cd99f" shortcut="Vb" description="A static field of type $typename$" text="private static bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ba901bd-6362-4664-ba7e-1caf38c4a074" shortcut="Vc" description="A static field of type $typename$" text="private static char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4571410-5ddb-4f9b-8308-dccd456c9d82" shortcut="Vf" description="A static field of type $typename$" text="private static float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe54e418-5944-451a-8547-334e2f7bfd9b" shortcut="Vby" description="A static field of type $typename$" text="private static byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81fcc012-8610-44d5-9c51-6a4d50844f7d" shortcut="Vd" description="A static field of type $typename$" text="private static double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80e8b4d3-ce44-48d0-8f2d-ecb7887d1dad" shortcut="Vi" description="A static field of type $typename$" text="private static int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78f35453-3b5d-4cfb-92bf-893d97298070" shortcut="Vm" description="A static field of type $typename$" text="private static decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d71f2c0-c247-48d0-ae39-5c4fcafeb981" shortcut="Vs" description="A static field of type $typename$" text="private static string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f1a1808-ed75-4ef8-a858-5bdf3de5f87e" shortcut="Vl" description="A static field of type $typename$" text="private static long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="600e5d09-c8c1-4ad4-8d6f-021d4a2b195b" shortcut="Vu" description="A static field of type $typename$" text="private static uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a55f7fa-fd35-4e16-a53e-03aef5da0167" shortcut="Vg" description="A static field of type $typename$" text="private static System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6cc24dba-75e8-4c60-a07c-bdf1b110417f" shortcut="Vt" description="A static field of type $typename$" text="private static System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e9ede4c-1f42-4126-94d0-548a5197b482" shortcut="Vsb" description="A static field of type $typename$" text="private static System.Text.StringBuilder $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f31a64a4-313b-442b-9c6c-f165dc9af8d7" shortcut="Vl.b" description="A static field of type System.Collections.Generic.List&lt;bool&gt;" text="private static System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77ebf777-9c72-47a1-bf93-38e8f16419a6" shortcut="Vl.c" description="A static field of type System.Collections.Generic.List&lt;char&gt;" text="private static System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b33cfa6-30e7-4b13-8db0-5815fe33f8b6" shortcut="Vl.f" description="A static field of type System.Collections.Generic.List&lt;float&gt;" text="private static System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0a21f5d-278b-412b-9557-97da8d8f3d62" shortcut="Vl.by" description="A static field of type System.Collections.Generic.List&lt;byte&gt;" text="private static System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ae754db-a7ec-476b-813e-850545738d71" shortcut="Vl.d" description="A static field of type System.Collections.Generic.List&lt;double&gt;" text="private static System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e0ee39a-5a7d-4bc4-8e61-f332c38c1435" shortcut="Vl.i" description="A static field of type System.Collections.Generic.List&lt;int&gt;" text="private static System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="879a04a6-2d81-4d19-b95d-483869a87fce" shortcut="Vl.m" description="A static field of type System.Collections.Generic.List&lt;decimal&gt;" text="private static System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82c3e36f-940f-40b9-93eb-9a4eb7761ab8" shortcut="Vl.s" description="A static field of type System.Collections.Generic.List&lt;string&gt;" text="private static System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b58135f1-afcb-4e78-8276-109f5340b2fc" shortcut="Vl.l" description="A static field of type System.Collections.Generic.List&lt;long&gt;" text="private static System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6668229e-b518-4c32-8cf1-5a8a1ed0fec7" shortcut="Vl.u" description="A static field of type System.Collections.Generic.List&lt;uint&gt;" text="private static System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24f8f875-9402-4785-ba9d-dcfdb701f43e" shortcut="Vl.g" description="A static field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private static System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9b7eb48-f09f-4357-8a2b-d3d5c2f769d8" shortcut="Vl.t" description="A static field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private static System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a2dd16e-239a-4896-aa82-69812ea184c9" shortcut="Vl.sb" description="A static field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43de098a-4358-429b-8c48-70776caf0095" shortcut="Vh.b" description="A static field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private static System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="349b024a-b663-4177-92cc-d9b0b710ace0" shortcut="Vh.c" description="A static field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private static System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ded5860-4480-484b-95dd-b8aa3d603b33" shortcut="Vh.f" description="A static field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private static System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7dcdeefd-cc0e-4ca2-ae57-274319455a7e" shortcut="Vh.by" description="A static field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private static System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a904a30-54dc-484c-ab8c-08c136c6b169" shortcut="Vh.d" description="A static field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private static System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2669c223-046f-4134-86ff-16ce7794200a" shortcut="Vh.i" description="A static field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private static System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60c828b3-adc1-4e7a-9fad-33342da5517d" shortcut="Vh.m" description="A static field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private static System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f0479f2-e792-43a3-9c9f-3eaf0fa89ad9" shortcut="Vh.s" description="A static field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private static System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dac42248-af91-4ecb-a5cd-92f959125088" shortcut="Vh.l" description="A static field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private static System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7371903-6a38-4988-8a4b-a2df439f16d8" shortcut="Vh.u" description="A static field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private static System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="afc8f870-0e90-405f-b50b-9b0b9ac326fc" shortcut="Vh.g" description="A static field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47b9b860-228a-4569-bde9-1a5a3500ba0a" shortcut="Vh.t" description="A static field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d3ca70d-56a3-4124-881c-0aa878eb6082" shortcut="Vh.sb" description="A static field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2fc187a3-3003-4aef-9e77-2b61c17d29f9" shortcut="V~b" description="A static field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private static System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ced29e6b-4188-471e-8cee-ecc0da15dec7" shortcut="V~c" description="A static field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private static System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d2dff4a-92c9-4828-8f32-23359ec17efa" shortcut="V~f" description="A static field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private static System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="467a564a-cafd-4b98-a418-a5059a2bc185" shortcut="V~by" description="A static field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private static System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="facca453-f1f4-47d3-b86d-0769e670ed08" shortcut="V~d" description="A static field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private static System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="171703e5-ae5e-4739-8bf6-6f63857ec9e0" shortcut="V~i" description="A static field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private static System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e9337c9-bedb-4d30-af57-e6c741dca434" shortcut="V~m" description="A static field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private static System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8f4db86-5295-436c-9efa-64c99714f55d" shortcut="V~s" description="A static field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private static System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8af5db7d-840b-4165-9be9-917f8c2a2549" shortcut="V~l" description="A static field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private static System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d700ef27-5b85-449a-b39e-5d3a4385dec2" shortcut="V~u" description="A static field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private static System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f1f05b7-b407-41ec-84b4-3aa653cf8109" shortcut="V~g" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="721c27c5-306b-4dd6-b471-01ef565cf1aa" shortcut="V~t" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3e28f88-325b-403e-a9ce-94dcf1589a54" shortcut="V~sb" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d804f9c2-37d7-4780-af95-c4814e3898f3" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="private bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55dcacb0-6ef5-48cc-a4ec-c45ed07c3c47" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="private char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b734e235-821a-4774-b26e-28623168a060" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="private float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ad044de-cfee-4976-8863-62de87ea1380" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="private byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22727592-92bd-4050-a5e6-f21c7bccbc8a" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="private double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="779b7c74-333d-4ad9-a306-2923a7b4f60c" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="private int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97205e2a-917f-4769-8215-368a089b99b1" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="private decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b2fcb03-5b38-48d8-8dc1-b603dec4bc65" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="private string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11b7e124-abd7-4679-9780-60d3d0b8af20" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="private long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7facd4f7-49f5-430a-92f7-a704415e045e" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="private uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a36eb8a-88a3-4715-82ad-a2c8a7818ee2" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="private System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="653c77b1-46dc-4358-b44f-9c0042d8d275" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="private System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c0f82d2-bfa4-42d8-a307-9bf2fade4685" shortcut="nsb" description="A field of type $typename$ initialized to the default value." text="private System.Text.StringBuilder $fieldname$ = new System.Text.StringBuilder;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32994028-a348-4fc5-bdee-eee54dfea319" shortcut="nl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0d14697-2c3e-421d-bc58-0ca89862296f" shortcut="nl.c" description="A field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f914c6d-6ffa-4eda-ad24-bb11003e3bd6" shortcut="nl.f" description="A field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2aba2db-5d18-4cb9-ace5-9b9be7e0c02b" shortcut="nl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2bc8b8f7-6478-4dad-bd2b-b7fb4ab9dfc1" shortcut="nl.d" description="A field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e1b0f71-9c94-4542-829c-83724ac1bb03" shortcut="nl.i" description="A field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e8b9d03-064f-43b4-a41d-d7ab54918665" shortcut="nl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85cc7159-ac4a-41c3-8dc7-c7e1b83d134a" shortcut="nl.s" description="A field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a331e8f-9dd7-4fa0-aa0e-f49c7fb8ffd0" shortcut="nl.l" description="A field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd5fcb63-161f-4253-8474-ecaf799ff604" shortcut="nl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df40d32a-892f-40c1-b934-21ac0b3c1f84" shortcut="nl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47ccf6a8-c46f-43ae-ac28-b20a3fe8c122" shortcut="nl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6383ff71-ef65-4568-8301-4d53b0f9fb96" shortcut="nl.sb" description="A field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0170cf9-5f56-4790-88f2-be9fa4fbf16b" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2fa7c519-bcf8-4c26-b9c8-244b4569e2c9" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b22b4c14-54c7-4999-afb5-e7a928aefa1f" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f4c2366-497c-49d7-96d9-23d1d0ff89ce" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9724b6c9-9d36-42ed-97c2-faeb5005759a" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1aec13da-7315-4071-92ab-cb018d85c626" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd966705-d801-43a2-b445-59ce221bd25b" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc898315-af38-411f-9bdf-b40ce08f5329" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="829de011-63d7-4973-bc7f-ef37e451e7ad" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="16b8d8ce-993f-40da-abae-e421eae83a0e" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5e158f7-b77a-490e-b778-96c3e97309fb" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a02a1eef-ac02-4239-abd0-25b5b0c9c44c" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5590404-627f-495f-bd0a-fc24eba8fe87" shortcut="nh.sb" description="A field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="805db7a2-a684-4742-8c48-41d8ac11ddac" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69f91c18-bc88-4f95-acb1-6b99ab660e1c" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d75dbaf-3782-4808-8753-692e9f76d08a" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea6c323e-917e-4123-ba6a-efb9a73abbba" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="068df03f-32df-418a-ac88-5a9a61bd1f25" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5b517e5-6aa4-4fb6-a83e-e8397e9bcd9d" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6f03f00-5ce0-42be-9bba-251786dce5cb" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7dd42a3e-9131-415e-80b1-180c3d78152e" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fb69907-9509-4ebb-b254-62bb068d0d53" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0acd4db2-fc44-44d0-a5ff-6d9e485e5f89" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f398585-5a2f-4bc1-8e95-a5f062e6efb3" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4b850ec-59e4-49e6-b46d-b48d350bc0b1" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b4fb4d8-3363-4ef5-b582-d91d9bfeba98" shortcut="n~sb" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ee6a3f1-cc31-4330-b04b-654aa0d4d200" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="private readonly bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="938f3d29-c613-47fd-84c4-5d3d5f353e58" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="private readonly char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e887964-1210-4e74-91c5-257946aa3965" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="private readonly float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5df6a6d-805d-4e12-9cf7-2850edd04706" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="private readonly byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93900ce5-835e-4ca9-beee-56f84b0243de" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="private readonly double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7854a4bd-79dc-43e6-b92d-09d1475f90bb" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="private readonly int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a64430f9-0030-49bb-a12f-2620e372f1de" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="private readonly decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6ca685f-00cb-4748-88c4-34e4e09adc8b" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="private readonly string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="064b1aca-9c67-4110-b4d6-d9ce74e11b5d" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="private readonly long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba561aea-eda1-4c9a-80aa-e129134307df" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="private readonly uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ae1c03e-a6c8-423e-9d9e-4630356bed66" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85c3d4ac-6bf0-4d0e-8b73-562614c8952c" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="144e06e5-5f4f-48cf-a1ea-c8c4c179bc18" shortcut="osb" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Text.StringBuilder $fieldname$ = new System.Text.StringBuilder;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8800a393-ddf7-4854-9382-7ace482a3df3" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46c592e9-9a7e-430e-a51f-30e94bf939ce" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6545b612-f53d-4e3b-83ac-7a637be3a54d" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e675cf2d-b804-4b09-86f9-fb5526b39b4e" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23f67c85-8228-4ba2-9004-b294548ab552" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42d28b91-f75d-4d6b-ad5d-623850a71c4a" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed162271-a46d-49aa-922b-43475a0acac5" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0863457a-1450-40b2-b9b2-6ba624927dc7" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c97b4199-d2e5-416d-ba4c-b44d1a00d083" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28a90bc8-229b-4aa0-a88a-1a46386b81dd" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72956ada-2f63-414f-84a5-915338b31bde" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce3b3bde-c1af-426e-b1fc-f31af93bff57" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9630ec8-97a1-452e-91c8-ce2afe61f745" shortcut="ol.sb" description="A readonly field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7de83f8d-fb63-42bd-b840-2118d4d9c9d8" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14e7903e-c6a4-4841-a0f8-cdbc0f4a1d35" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5067a59-8b1e-4705-80f1-d36c3d401306" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7c9c2ce-3ce9-4c89-a20d-3118d634f86f" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2fef872d-1536-4611-88ae-e49894448222" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b30d13d4-efe4-4789-8d16-3dc5f0cc1f95" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0256ef97-e520-4c57-b01e-7f276b8af21e" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff0f2752-e1d9-4303-96a8-4cddb26fa5ef" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60f84b17-88ed-4c70-b5f5-fa3dd5a11a0d" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7ffcb45-690c-4e70-95c3-e98d8cd82e2a" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1aa7d2aa-8839-4c53-ba58-e88adb3ff09c" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1be3487b-9f57-453e-bf3c-ec12a563939a" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bf5a760-6b98-488a-8afe-adb4fa08203f" shortcut="oh.sb" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="526b2532-cd9f-4060-abfc-785488e8b32e" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b679e799-64db-4ac9-ad52-d753df1dc9c0" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cfab7ded-5911-4139-843b-8ad9944a6de8" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7aacbea-d28b-4420-91dc-3fce1d65c476" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0364c19f-fae7-429b-b26b-ec00641981f2" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ca2c3af-66f3-4fd5-a336-019e24f061ff" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c43217a-cc9a-4e56-a841-af5a0c1dbea1" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e54eacda-7421-4390-b1ee-5b2de0a0c1a6" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2bd9e20a-26ed-4785-bab4-813455b59905" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="227a5cfa-3466-44f3-951e-37d89976a55f" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3bcf8748-f726-4325-a241-7f80aaac95e2" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="200798b8-9c7f-40e9-9a46-efc3223feca4" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21bea7b8-85f3-4648-b1dd-73d7b34af427" shortcut="o~sb" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5cce9bd-b356-40de-ae1b-a234ef1633c4" shortcut="tb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f534e2a-1533-48b2-a947-562401540f92" shortcut="tc" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5eb3d80-9293-4831-a356-2dc63c20750b" shortcut="tf" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="729c1705-a9c6-4653-b08c-3d27f44aa239" shortcut="tby" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c0c751e-44f2-4e3c-b82c-1084b3b8284f" shortcut="td" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="615e229e-b3ed-4f18-8319-26be1d03c88a" shortcut="ti" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ec93c24-67b9-45ff-a269-a41b150a6847" shortcut="tm" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6853f0c0-f34b-4271-9987-6e3c8ebeab09" shortcut="ts" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bce80120-1c65-4004-a1e1-ab5942c5e912" shortcut="tl" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ae05973-da91-42a5-a54d-889fde9601e1" shortcut="tu" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06bb52d5-bdcd-4dd6-8bf9-aeec8fee7531" shortcut="tg" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f96b809-f059-4bb3-a33e-90528f4c48cd" shortcut="tt" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c459250-e4bc-43f9-a5bd-eef26edc2e5d" shortcut="tsb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07758ecf-5c7e-4542-97c8-d3ea8b2c0cdd" shortcut="tl.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56268498-39dc-42d0-ac28-79fad66fda41" shortcut="tl.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="add27386-8b38-4f76-b260-35cc7d3f902f" shortcut="tl.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9cc53d45-9632-4e68-bd92-f0871e86481e" shortcut="tl.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8b7d022-bca4-4b2b-85dd-fcebf84c212e" shortcut="tl.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44258e3e-7d81-40fb-9e10-fed49ae22371" shortcut="tl.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f4656cf-462b-4766-9136-e6ef8ec47059" shortcut="tl.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44e81c91-6820-4280-99c5-577eba167284" shortcut="tl.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25b62a7d-d5e7-4b2f-884b-da03884d5cb3" shortcut="tl.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5262feee-d751-4d48-b669-ce61813d5262" shortcut="tl.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7ca2fb7-2981-4067-b669-b9ef87c8609b" shortcut="tl.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77a31d50-2268-433b-b10d-e9fe5e33bca0" shortcut="tl.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eeb10baf-d037-4935-bd29-2ee4e25f32ca" shortcut="tl.sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="259f47c7-8edf-4a76-89b6-82fe7f2c42f5" shortcut="th.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ac7fcb0-bb46-4997-b7d3-829175dd16fb" shortcut="th.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2000a012-80e4-4515-951f-0df11345427a" shortcut="th.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa110f4a-04bb-4755-a04b-1f950369337a" shortcut="th.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="103e51c9-7f6c-4cfa-9b70-23fcf6da9ba7" shortcut="th.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c08cd358-545a-4ed5-8c09-ade29591160b" shortcut="th.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea211797-563b-4922-a0dd-617979f20e08" shortcut="th.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46ec46d1-25d7-433d-8be8-a59039f1c647" shortcut="th.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="506ae183-86e9-4611-be90-03caf3b0f836" shortcut="th.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d64dd71a-5e6b-43f4-b6de-884c1ece9d7e" shortcut="th.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28a4e0ca-ee31-4600-8558-a030080ec46a" shortcut="th.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="accecfcd-5871-4e27-83d4-ab036670b42a" shortcut="th.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="993493be-edc0-4b4f-855a-5a8bb7bd9d7b" shortcut="th.sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23809438-67d6-4e9b-8b78-95454f6126c8" shortcut="t~b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd447031-6359-4340-a91a-e299ae94e427" shortcut="t~c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4f46678-6846-4e52-9ca9-1ac0cd7b9df9" shortcut="t~f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0f2bb90-9277-4abc-b84d-123194e96f49" shortcut="t~by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d300b532-7ceb-47f4-89ac-f37dc522ab5c" shortcut="t~d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa02dbe7-c4dd-4df1-b8f4-ac787c29372c" shortcut="t~i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c04ddc36-8e93-4961-b3a1-2f15988405a3" shortcut="t~m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5bb7024a-35c6-4ad5-8c94-19af05fe8ebf" shortcut="t~s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7db097f-687b-4dd7-be3b-3aa92e131783" shortcut="t~l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0aa1132f-9fcb-4f2a-b1a9-06e2fa2688aa" shortcut="t~u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8f5a7ee-73af-4ada-8c7a-9eb0233f030f" shortcut="t~g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bbdec0f1-2ef1-4257-878e-f6bee54cd018" shortcut="t~t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d6c3741-9150-4a63-84d1-4b4cc297e141" shortcut="t~sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10d34174-c445-41db-93ca-2b0e6b57ea7e" shortcut="m" description="A method that returns a(n) $typename$" text="public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d7980d0-22f6-421e-ab37-f7a615065495" shortcut="mb" description="A method that returns a(n) $typename$" text="public bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4be881aa-a4a1-4dcb-8f37-10430f0d9ffc" shortcut="mc" description="A method that returns a(n) $typename$" text="public char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65b86e77-cee4-4a72-8000-da681d1d7bac" shortcut="mf" description="A method that returns a(n) $typename$" text="public float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e33dacd-7e44-465e-84ec-cdf53d1047df" shortcut="mby" description="A method that returns a(n) $typename$" text="public byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4a26492-2b9a-4b03-ab29-6b9b70dbd478" shortcut="md" description="A method that returns a(n) $typename$" text="public double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="708e016b-efe4-4e65-aed1-bfef676cfc8c" shortcut="mi" description="A method that returns a(n) $typename$" text="public int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93d848cd-532f-4c21-be1b-b66341ad9bed" shortcut="mm" description="A method that returns a(n) $typename$" text="public decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68f2026c-a541-4f41-bb1f-17f55d2f134e" shortcut="ms" description="A method that returns a(n) $typename$" text="public string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1a43e89-1c0c-4bad-a056-2a9941c8d334" shortcut="ml" description="A method that returns a(n) $typename$" text="public long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8aaa38f3-f0bf-41e6-8466-6a191ad2b775" shortcut="mu" description="A method that returns a(n) $typename$" text="public uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0a36de1-e549-40a5-adcd-44643fc845e1" shortcut="mg" description="A method that returns a(n) $typename$" text="public System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4510c073-9203-4fe4-b5d1-c57fc828d4e0" shortcut="mt" description="A method that returns a(n) $typename$" text="public System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79176fb4-070d-4b6a-be69-fa1719c11b8a" shortcut="msb" description="A method that returns a(n) $typename$" text="public System.Text.StringBuilder $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37cec52a-5543-4e16-a130-2a96465fde88" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5e95e60-1783-4742-9085-305c77edcbee" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff9bc3b6-fbe5-458b-82d3-34acd6576c9f" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b58970d-784d-4b9d-b144-2bb35edb7c33" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2af23e62-fb90-4ebe-a33a-432a84a1cafc" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="258a7149-a098-42e1-b5f8-67ae098f8e46" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efe902f7-a512-412c-b658-c5eb593faefb" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db4ebc37-f432-4b16-802f-fb3173541460" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2309956b-65a9-4d5b-84d3-f6e24f99d388" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82546e77-1bff-48b1-a5f7-547d1139ae76" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3297e4d3-c860-458f-a8f2-022821fc4149" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68ae4c7f-4d7d-4f85-bd59-4b2a395c30f1" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f36f522-5bfe-4837-8e3c-3c6ecde13e19" shortcut="ml.sb" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edfbac73-8cba-44ff-9d35-1e18e4c4d534" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3431079-b699-4d84-8449-5066e0490a98" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14f1c9de-cfd7-4b21-bb77-4c02a69e7819" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bb1b010-fb4b-4519-a6a3-1dacb6466e3b" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70b54ca3-ce7f-4f9d-8509-4fdd37963118" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8154045c-39d5-48ee-8a8f-447f181bc78f" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="058f6d7c-252b-4a5b-832d-8efbcf3b0c26" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9bb4aa73-f97e-47ae-adbe-99fd1c9b6a28" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91b5439e-0781-4aa6-9c2c-75dfa384c443" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08cc101b-1a86-43c2-99f9-26540eef40da" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="238e6c2e-535d-4253-af4b-073bcc5aeb2f" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f7716de-f4df-4868-894f-e2b322910a6f" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f102105b-7227-4026-abd0-fac818b3b2a4" shortcut="mh.sb" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18dbcf92-e2a9-4e18-97e0-ff9bdd1eecf5" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9fd32826-6698-48a6-a4e8-0f12134e3463" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd4c5978-81e3-4472-9eab-689a5c855562" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="624ac7d6-a856-4018-b571-1cf2f7add781" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22e9e360-3184-4418-ae08-0afb3b514099" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68c2bbe5-c70d-4a04-b5e6-69d2387ad831" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1e4536a-2e7e-4f7f-898f-b728cf609577" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84755ce6-2197-408e-8a37-d4096747ddf4" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19d20b4c-1a1e-431e-aea3-af270b1d436f" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d893fcd1-db9e-4892-af32-d6ba46a1f874" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34fa7ef5-9f06-4e20-aed9-8779b2c77635" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79d05479-9cc0-4c28-9cc2-d049fb748a75" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="61848667-a99e-420b-8be2-bcd3a0b31df0" shortcut="m~sb" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c65c9a0-7045-4b12-bc60-2a96d3c13c96" shortcut="M" description="A static method that returns a(n) $typename$" text="public static void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c5bebf9-794c-40ef-a03a-b9e8cc4e5d2e" shortcut="Mb" description="A static method that returns a(n) $typename$" text="public static bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57a74f93-7598-4ff7-a6b6-fe57fc5c85af" shortcut="Mc" description="A static method that returns a(n) $typename$" text="public static char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9baaf447-ea88-4fd2-bcb8-905c6feee790" shortcut="Mf" description="A static method that returns a(n) $typename$" text="public static float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31acf1aa-4728-479e-ba24-53e457b2bebf" shortcut="Mby" description="A static method that returns a(n) $typename$" text="public static byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cda86458-5b71-498f-9fb7-a4e9c0c41c88" shortcut="Md" description="A static method that returns a(n) $typename$" text="public static double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0aa60ad1-809e-424d-8c8d-b219abc4bcc8" shortcut="Mi" description="A static method that returns a(n) $typename$" text="public static int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a361786-ad7e-407c-b3c9-2245e21e6455" shortcut="Mm" description="A static method that returns a(n) $typename$" text="public static decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf6aac2d-986d-4974-8795-2e970677ca8c" shortcut="Ms" description="A static method that returns a(n) $typename$" text="public static string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c27b806-c842-446c-9ac4-92b5c2fdd0ff" shortcut="Ml" description="A static method that returns a(n) $typename$" text="public static long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b85692cf-96c5-4b57-bd35-877ea02f04f0" shortcut="Mu" description="A static method that returns a(n) $typename$" text="public static uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e4c56da-e2ff-4fd5-9641-f2402f6b8057" shortcut="Mg" description="A static method that returns a(n) $typename$" text="public static System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7cb179f4-5c92-45b6-9b49-4c926eab11d3" shortcut="Mt" description="A static method that returns a(n) $typename$" text="public static System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ea89ce4-09e5-49ac-a1e2-5123f5745cbc" shortcut="Msb" description="A static method that returns a(n) $typename$" text="public static System.Text.StringBuilder $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2adf28f0-b7fe-4f9b-b8b2-31fd3237ceca" shortcut="Ml.b" description="A static method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public static System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a039c4a5-8cbe-4f00-9766-f1cdebe2ab6b" shortcut="Ml.c" description="A static method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public static System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8020c105-3c9e-4a94-853a-b9ad40c11eb7" shortcut="Ml.f" description="A static method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public static System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="230b7678-6ab6-4c38-a286-948cc4552d0d" shortcut="Ml.by" description="A static method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public static System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ffafdba7-1112-4a29-8dfd-b7ca52022dcf" shortcut="Ml.d" description="A static method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public static System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1844737f-cb87-4744-839b-bc2f66e69ecf" shortcut="Ml.i" description="A static method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public static System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="872fec25-a241-426b-a4ea-0f38522b34d2" shortcut="Ml.m" description="A static method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public static System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1bf2fc4-ae60-453e-abc1-75e320c1beff" shortcut="Ml.s" description="A static method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public static System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efe2f44e-21fa-418f-94d8-87169a667333" shortcut="Ml.l" description="A static method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public static System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d431e8ee-fe0b-443e-b224-5e0e069e7c11" shortcut="Ml.u" description="A static method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public static System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7333560-3bcb-425c-b071-0f73c146dc1b" shortcut="Ml.g" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public static System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6247db5-728d-476d-a4f5-9a56576cb740" shortcut="Ml.t" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public static System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="823516a5-bab4-4e18-809b-1d2b4cd9ccb0" shortcut="Ml.sb" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f763d16-c163-4905-a74e-516a330e9b41" shortcut="Mh.b" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public static System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="381223c0-8912-4f5f-9637-40c9ddd363be" shortcut="Mh.c" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public static System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f02fe12-489d-4806-b353-7eaab833970a" shortcut="Mh.f" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public static System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f19a84bc-0dc8-490b-9751-43fa69abbd19" shortcut="Mh.by" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public static System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30c30f48-97f9-4ec3-9826-75d58c7c9f1c" shortcut="Mh.d" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public static System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="192b1c87-695a-4a81-a80a-2cca19fb5a11" shortcut="Mh.i" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public static System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cdfe13a7-945f-433f-a10d-f1f968bd482e" shortcut="Mh.m" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public static System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4990e53e-9b1e-40ce-9488-9d773119d312" shortcut="Mh.s" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public static System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f1f0d18-c460-4d06-8cc4-ada894b5e4a3" shortcut="Mh.l" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public static System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd5e8e8b-e35a-4f71-b364-2ed7cce06ac9" shortcut="Mh.u" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public static System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab22607f-6220-4df2-9ded-4efd7cd1ec3c" shortcut="Mh.g" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3acf9c7b-cc22-4ffc-b047-588fff5d4c43" shortcut="Mh.t" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e72e5ced-4d94-4287-a6c9-ec4d23b71620" shortcut="Mh.sb" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73b6009b-9d97-416f-86f3-7874e6579091" shortcut="M~b" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public static System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="992e0e18-cc34-4265-b3e1-8bdcb15f5b45" shortcut="M~c" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public static System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6797d692-8465-424e-93df-4bf346f858ff" shortcut="M~f" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public static System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef163650-fa12-48b4-8d7f-85bdc8e6d797" shortcut="M~by" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public static System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4dac9ff6-a6db-4db1-99a5-501b064989eb" shortcut="M~d" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public static System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b0b21cc-2e0d-404f-b024-b902e51a1eac" shortcut="M~i" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public static System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6bb053f0-e7ae-4358-9484-9ef989f0821c" shortcut="M~m" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public static System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b85f9a35-62df-47fb-a71a-6268aad1918a" shortcut="M~s" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public static System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26e96001-f569-4621-a20c-45b7415ef7f9" shortcut="M~l" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public static System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c5448fd-1fee-49c1-bfac-6ea9b745c1e7" shortcut="M~u" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public static System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c35747b5-7eb6-4938-b831-d68090596e35" shortcut="M~g" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="16f3fcbe-7b34-4810-a282-44b4332de7e6" shortcut="M~t" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69a9889a-1ba3-49bf-81d4-8c19cea8fa53" shortcut="M~sb" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f4de6f3-c975-4cca-93ec-8d38e66b99ea" shortcut="pb" description="An automatic property of type $typename$" text="public bool $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f0811fe-ca3d-4979-a1df-7825fb959e3a" shortcut="pc" description="An automatic property of type $typename$" text="public char $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76283ddc-21c0-478b-9bda-8be83ab6e267" shortcut="pf" description="An automatic property of type $typename$" text="public float $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a60697e-f28e-4995-a1e4-148b80cb3c4f" shortcut="pby" description="An automatic property of type $typename$" text="public byte $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9383f139-c976-4558-9915-3f802998bd70" shortcut="pd" description="An automatic property of type $typename$" text="public double $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c4ba5ef-e9a2-4809-9253-6c6e3cddc663" shortcut="pi" description="An automatic property of type $typename$" text="public int $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a12319bf-fc58-472c-977e-b2a39bac462b" shortcut="pm" description="An automatic property of type $typename$" text="public decimal $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21addbeb-ab1b-4723-8e85-fa090992f473" shortcut="ps" description="An automatic property of type $typename$" text="public string $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1dc3ed4-5463-4d71-b5f9-07b686b91fff" shortcut="pl" description="An automatic property of type $typename$" text="public long $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3c272ce-b997-4a61-a198-d0fa0eb85b98" shortcut="pu" description="An automatic property of type $typename$" text="public uint $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e6604b7-3869-4c09-9f5b-21b218a20a8f" shortcut="pg" description="An automatic property of type $typename$" text="public System.Guid $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5482f0d-9142-41a5-8903-f5b26d928938" shortcut="pt" description="An automatic property of type $typename$" text="public System.DateTime $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d444c2a-3cc9-4ad3-8db3-4e994882eaf1" shortcut="psb" description="An automatic property of type $typename$" text="public System.Text.StringBuilder $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0399e8eb-363b-4574-9991-14c25e655501" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="289817a9-f957-40ab-8c69-2ac0bf0f1118" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d9fdc66-a0bb-4713-9150-2bf448254793" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2122fb0-57cc-4ef5-a778-87e1d14dee80" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e045efd-0971-4333-b7b3-3ae078f5277a" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a67a9d4-bee3-4299-b23d-7355eabff476" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6cb22c6f-ce53-4002-aa53-080e7a1d79fb" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02277ab6-4ba0-460a-947c-5cc3aef12187" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19cad50e-a08c-4081-ad4f-74f1b576f917" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9465cea2-272e-475a-9af3-39733a85e0b8" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34919547-3da1-41cb-96cc-eedde7c0a27d" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7619587d-98ba-464b-ae28-bc1cda26f7d0" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d8ab940-d815-41d6-bd5f-ffd0602f9d79" shortcut="pl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60f4f045-b063-4a58-8199-48ca9e0d6b08" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9eebe523-9fd5-42a8-9fe3-f85e97090fbf" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da0970f0-859e-4f72-a15d-9c8e0554bad7" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a105b696-32d5-4a1b-8ae3-527d953d633c" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="369ecd1e-f523-4c7c-97df-6d842603d6a4" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d1d328d-f16d-47f1-ac72-b51385ba0c05" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8ad0fa6-1934-4159-9cce-1f6be31dcb2d" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c035990c-17a8-410c-8df1-5baa88215bc6" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01df049e-771d-4cd4-b9e1-a548543b285b" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47d3b3ba-d74d-4e4d-a371-5d132f625bab" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b17f5d2-6a82-4efe-8142-8eedd371a74c" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1174a5f4-4f64-4f97-9e58-e42aef39a45a" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="adc434c0-1d94-477d-9c75-974b454c3e03" shortcut="ph.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83b36d38-bfd0-4548-90dd-f58484b6d20b" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3da6a3e-531c-4d2e-b902-4e6813f85561" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51e3902a-7218-4c8f-bda1-5802087ae8a7" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4f8a1e5-8637-4e10-9778-fd7bcb94f9ea" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc4dd5b2-bec0-47a2-a7ff-9cc06121145d" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef45d187-6709-4dbf-8de4-234846e7bce5" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b459312-d559-45b0-8438-1deac441bbbf" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3f6e2a9-eb5d-4dc0-bce7-5f7966abf772" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="812b581f-1c4c-44ea-a368-b246d776fa73" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2bdf81cc-c09d-4e5e-8619-c5e6d399dde6" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29a4fc07-09de-4f77-a91d-9ec52280ba68" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb2e0473-a07c-4bc3-aa61-d9dcd8976629" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b26c572b-fdcf-4443-a88a-8f7a05dcafe7" shortcut="p~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b61668bd-a3f2-44cc-a155-c03d9312f542" shortcut="prb" description="An automatic property of type $typename$ with a private setter" text="public bool $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb7f84a9-e94a-4c0d-be15-072e587f7996" shortcut="prc" description="An automatic property of type $typename$ with a private setter" text="public char $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="461d3a46-beec-4249-99bb-199c667e8c09" shortcut="prf" description="An automatic property of type $typename$ with a private setter" text="public float $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fdef0870-8b82-4fe2-a60a-5a2452d326a2" shortcut="prby" description="An automatic property of type $typename$ with a private setter" text="public byte $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a78844d7-847f-4ebf-bc4e-288f582255af" shortcut="prd" description="An automatic property of type $typename$ with a private setter" text="public double $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d59e61cb-165e-45f1-b2fb-2a0f872472a6" shortcut="pri" description="An automatic property of type $typename$ with a private setter" text="public int $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b12c915a-ba97-4548-a1d7-d9211663e4e1" shortcut="prm" description="An automatic property of type $typename$ with a private setter" text="public decimal $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af2f4ad3-cf31-4219-b3c2-fe5d05acbfbf" shortcut="prs" description="An automatic property of type $typename$ with a private setter" text="public string $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="256dbbf8-b204-4245-a17a-8ac70b441d11" shortcut="prl" description="An automatic property of type $typename$ with a private setter" text="public long $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29d1d948-8c1b-4ead-a1cf-1e097ec2ccd5" shortcut="pru" description="An automatic property of type $typename$ with a private setter" text="public uint $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="068cf7bc-75b0-42ed-946b-bea5a33ecdf7" shortcut="prg" description="An automatic property of type $typename$ with a private setter" text="public System.Guid $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55b11e24-ccd4-4f1a-98a2-625d4d0c38bc" shortcut="prt" description="An automatic property of type $typename$ with a private setter" text="public System.DateTime $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01e0f8c8-3b3d-43e7-8c64-1592927e86d2" shortcut="prsb" description="An automatic property of type $typename$ with a private setter" text="public System.Text.StringBuilder $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eff7a718-9dcc-4ba0-bd08-c6b3fac427ce" shortcut="prl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with a private setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81e4d0d4-7a30-4c8f-a585-52157b0c5b38" shortcut="prl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with a private setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbc7f578-2740-433c-8a2d-df5b0c994442" shortcut="prl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with a private setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a00e16b-29d3-42d2-b7f7-132cee235dc2" shortcut="prl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with a private setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39615c40-d71d-4961-936f-93457b5e9040" shortcut="prl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with a private setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="135d96ba-ea6f-4963-9d0f-abb4ebbd959d" shortcut="prl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with a private setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b345aa0e-9f59-4141-93bf-42776ac3d1e2" shortcut="prl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6816dfeb-1c83-45a7-bdac-239611cb74c3" shortcut="prl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with a private setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9726bb72-cfa5-4245-b637-b57a742ee3b3" shortcut="prl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with a private setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0429f5cb-974d-4397-8253-001ed6cc00ee" shortcut="prl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with a private setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58cb567f-e04e-4ddb-8138-ab593ffe3102" shortcut="prl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01604895-c6c9-4bf0-b733-4ca4654817fe" shortcut="prl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0bad4179-44b3-4872-ba71-960cf85e0485" shortcut="prl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2a94b6a-9e01-44a0-82f0-6a5e742c9e8e" shortcut="prh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5eb5b0e0-b8e5-4cda-906f-e979d012ee0f" shortcut="prh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4eb8cd26-6f93-4f49-910c-c5b735b3d36d" shortcut="prh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43366012-4474-47ab-93b3-f37422c04122" shortcut="prh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c48ce8da-e9cb-4131-a579-ba9cab92abb2" shortcut="prh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9dc8f1c-b6dc-4019-aa89-6795a1d10fa1" shortcut="prh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e4247ff-0a68-48cf-8dc5-8da676923764" shortcut="prh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d117d812-fcc5-42fe-b997-fe1c44f5dc6e" shortcut="prh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10dccb54-827c-4aa4-87a6-be8935867068" shortcut="prh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ac3b699-d7b6-43b1-a83d-3a0a30f170b7" shortcut="prh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e389b7a4-96d7-4022-bd43-35f1cc1998ce" shortcut="prh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65ee6d92-f963-4732-8305-67857b80f6be" shortcut="prh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a32d0e0-0d16-4420-88be-990abc495e94" shortcut="prh.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d86dfee3-196b-4c05-99b9-76135099c3f0" shortcut="pr~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c68a56e-7b0f-4ad6-bbd3-cbb90906430c" shortcut="pr~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55de5762-c892-4988-96e4-f4dd9a97a9ce" shortcut="pr~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="afb95ed6-9cf4-4af8-bdae-441d192f7609" shortcut="pr~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9d2c4a5-7c51-41d2-9258-1680822c6b6e" shortcut="pr~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4e9d839-9654-412a-a242-0817cbd8ee89" shortcut="pr~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d778d595-82d1-41ee-8ab7-88f04a156553" shortcut="pr~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="681dd869-2793-4691-b6b2-70ddf7446a1d" shortcut="pr~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89e718a7-a411-4b8c-9ada-776bced4937a" shortcut="pr~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="492b2d37-5bdf-4f7b-8f3a-16c660780c69" shortcut="pr~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5058482-6b5b-4d6a-81b5-55dd5785aa4b" shortcut="pr~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fce0d8b-6ca8-40ca-9ae3-8e07654469ff" shortcut="pr~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fc27995-cb70-495f-8372-8a9c895740ce" shortcut="pr~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b2ce927-4eee-4191-9991-a0321bce8068" shortcut="pgb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public bool $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="558818bc-861d-4f3c-93a1-2912e37dbf22" shortcut="pgc" description="An automatic property of type $typename$ with an empty getter and no setter" text="public char $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8facd82b-6b25-4012-ae74-010175991a6c" shortcut="pgf" description="An automatic property of type $typename$ with an empty getter and no setter" text="public float $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59cc1be3-38d8-47fc-b2d4-694dcc18a72d" shortcut="pgby" description="An automatic property of type $typename$ with an empty getter and no setter" text="public byte $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed69855f-951b-4e7a-8439-e80bf79fd043" shortcut="pgd" description="An automatic property of type $typename$ with an empty getter and no setter" text="public double $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6c8b128-a59d-4a7c-9a56-9c98486e9b54" shortcut="pgi" description="An automatic property of type $typename$ with an empty getter and no setter" text="public int $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc29731b-c49b-4505-8723-b56757a2b072" shortcut="pgm" description="An automatic property of type $typename$ with an empty getter and no setter" text="public decimal $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ef09f1a-ed2d-46ec-ba41-7c647e5808f7" shortcut="pgs" description="An automatic property of type $typename$ with an empty getter and no setter" text="public string $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9019fbd-29c9-459a-b43e-dd1e45aff121" shortcut="pgl" description="An automatic property of type $typename$ with an empty getter and no setter" text="public long $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edde98fd-7261-4ae4-b2f4-28224c6f1abd" shortcut="pgu" description="An automatic property of type $typename$ with an empty getter and no setter" text="public uint $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e0630ee-9e22-4eba-9c8a-f3063980f20d" shortcut="pgg" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Guid $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0d4ac72-63e0-4e3c-a90a-136ac2ce404b" shortcut="pgt" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.DateTime $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c5cdc7c-2588-47fa-99b0-235cebb9aded" shortcut="pgsb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Text.StringBuilder $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38ab92f7-3400-4daa-a177-55f48c479382" shortcut="pgl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d55f922d-8cc7-4323-8e62-70c6490ce2e3" shortcut="pgl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="057c17af-cd46-4310-8dc3-a271f5a86359" shortcut="pgl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13da4d25-94d7-49ad-9c9c-d2fa318ab282" shortcut="pgl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="290569e1-8e32-4a70-9b3d-a7f57740b817" shortcut="pgl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09eb6d34-5f6c-4833-9049-7eaa66ebcd0d" shortcut="pgl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="840a8686-347f-47d8-96b4-9b9c446897c1" shortcut="pgl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72aa1ba9-0f7e-4eb5-9ad4-7c53be9d2f13" shortcut="pgl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6196e57-7e89-4d7e-b29c-5432a0fed39d" shortcut="pgl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6147b438-80b5-46e6-a12f-1669c62c045b" shortcut="pgl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5061d26c-d646-4fef-b86d-c01c9cf12b98" shortcut="pgl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8127c3c9-106f-4263-971e-45ec9b1ff335" shortcut="pgl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e7bf87a-e5b9-4519-bdd5-15e719c64515" shortcut="pgl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a81dc2ce-6eea-40f9-892b-7ca4dc4954f2" shortcut="pgh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0eb43ddf-7b1f-422d-bd06-ecba7d9a3b38" shortcut="pgh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a36d044-3646-4857-b4b4-5b83951aecd2" shortcut="pgh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3844247-686b-4b9f-89ff-62639525160d" shortcut="pgh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="875465a0-8598-4d15-9ed9-bd8486f5daff" shortcut="pgh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d236013-915f-424d-8377-7bf1aa1d9176" shortcut="pgh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f337355e-aa64-430f-8467-058b5125fa39" shortcut="pgh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6cf391fe-9c55-4fde-8a13-0a162c7d48d5" shortcut="pgh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13e39ecd-fd99-4bbc-a58d-35813d7608a9" shortcut="pgh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9bb01a24-193e-4e1f-a9b8-a659551cfa91" shortcut="pgh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9023d33-78e4-438a-a352-04a6c13443c9" shortcut="pgh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ec0bfb1-1b0c-4ba7-a6fb-a25837e42666" shortcut="pgh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0af768aa-52d8-4f02-9908-1f7ba9a80e82" shortcut="pgh.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08dce20a-6c86-4e36-9f7f-aaf250ace75d" shortcut="pg~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e54f9014-bab3-4a31-ae16-97841bd6a94c" shortcut="pg~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d94d2f6e-19a1-4603-8204-1c06c6646190" shortcut="pg~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05fcd3fa-8768-485c-8a08-d00577e624e7" shortcut="pg~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b22da802-579a-4e60-8fda-3985229b35a2" shortcut="pg~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a896493d-12fe-40cb-b3b7-7817b970b17f" shortcut="pg~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74c70dde-0396-4020-8162-fba525d60270" shortcut="pg~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ace3c505-9493-466e-ad3b-585b9deee840" shortcut="pg~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2aaaf12f-f8da-49b6-9361-b0c835aaa08a" shortcut="pg~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97a3ba48-6c9e-4016-97df-dca3ead22c36" shortcut="pg~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6d4ac11-2cd4-4d20-9565-93dc3a13bd49" shortcut="pg~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1186c976-7e83-43ad-b458-62035e08ac1c" shortcut="pg~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5fdcdbf5-3351-4a81-be6e-3363b1c83ee0" shortcut="pg~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="290c1e54-fda4-4092-9e3b-c9d75c713d41" shortcut="vb" description="A field of type $typename$" text="Private $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f0e1ba7-293b-46c8-97d1-81c08ddba761" shortcut="vc" description="A field of type $typename$" text="Private $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7688ee67-8a2d-4895-9b64-055bd47a7050" shortcut="vf" description="A field of type $typename$" text="Private $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdb27c59-f183-43f6-b70d-8a9b05273380" shortcut="vby" description="A field of type $typename$" text="Private $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2628d9e-87e7-4536-9b0c-b0e115e4ee6f" shortcut="vd" description="A field of type $typename$" text="Private $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa929c5b-81df-4107-882f-e8a17ea63bed" shortcut="vi" description="A field of type $typename$" text="Private $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e607ef48-ab69-450e-b542-7cc900b1a056" shortcut="vm" description="A field of type $typename$" text="Private $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="953452f2-183b-4c1a-8e68-ac3ee4a85764" shortcut="vs" description="A field of type $typename$" text="Private $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c333652b-eefa-4a9b-9904-2651b4df1898" shortcut="vl" description="A field of type $typename$" text="Private $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e284e6a6-4c82-4c42-99e8-9a756d526f8f" shortcut="vu" description="A field of type $typename$" text="Private $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01f08655-6d81-4df0-ba31-6bb36dadb46d" shortcut="vg" description="A field of type $typename$" text="Private $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db90e99c-f842-4511-b798-e9d8e0114d43" shortcut="vt" description="A field of type $typename$" text="Private $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ecd03130-1622-4829-9fc5-ea534ab99749" shortcut="vl.b" description="A field of type System.Collections.Generic.List(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c14042db-735a-46c3-8579-4cee3b97f1c6" shortcut="vl.c" description="A field of type System.Collections.Generic.List(Of Char)" text="Private $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0cfc8d06-b200-4318-b9b1-f1b034026d07" shortcut="vl.f" description="A field of type System.Collections.Generic.List(Of Single)" text="Private $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a9b13a8-3ca0-4aab-b90b-9d3b06682b56" shortcut="vl.by" description="A field of type System.Collections.Generic.List(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="574ba8b3-852c-493c-a265-bb39a00d6560" shortcut="vl.d" description="A field of type System.Collections.Generic.List(Of Double)" text="Private $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d0d43d5-a4a5-441f-becb-47ba87069403" shortcut="vl.i" description="A field of type System.Collections.Generic.List(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94e83eee-4add-4163-8f02-04f6c0eccae3" shortcut="vl.m" description="A field of type System.Collections.Generic.List(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c902f5e-3479-48a5-9c89-05ca6134c0ad" shortcut="vl.s" description="A field of type System.Collections.Generic.List(Of String)" text="Private $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c0ea5ec-5180-4c45-a258-871e99ed7148" shortcut="vl.l" description="A field of type System.Collections.Generic.List(Of Long)" text="Private $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78372d40-4d75-4264-be91-a9b8f530773c" shortcut="vl.u" description="A field of type System.Collections.Generic.List(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e10f556-0a16-4378-9b0c-f2e05b0cb037" shortcut="vl.g" description="A field of type System.Collections.Generic.List(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b241750-cdd2-434a-8260-4bab5c136da9" shortcut="vl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e65bf9b2-4e3b-46d6-adb3-4ebd7f8be5ca" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="349ccf92-fc09-44b4-9a82-d54bc6ad16e2" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet(Of Char)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9fe4739d-64e1-4812-84ef-92d5262f51d0" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet(Of Single)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9efac72-b533-487b-a327-fe8127300303" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f1b134f-f0a6-4da2-bd6f-312de6854be6" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet(Of Double)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf3e33df-24cb-4984-95ed-6f9e6a35b513" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15c6a2b4-7e6e-412e-b35b-531231827df2" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c62c83a-c329-4bc2-a2b5-f479d5b7cceb" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet(Of String)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6de109cd-57c2-4863-8c13-7defa78b0800" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet(Of Long)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99469bac-3d70-4e44-b9f4-cd950eb67b28" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fdbc02d-f876-4663-91fa-da766c63f178" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="680ce691-0583-4091-9904-4d50257b3ea7" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f133d6a-e543-42b0-83de-343cdebe0b71" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2f879d6-8bf0-47fa-876e-7adb0b6b2cd3" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36862f0f-2a9c-4bd1-8213-b81c11ec82b5" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe1f9fae-a6e6-40a4-bce0-63edb811356c" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3e59c04-8618-40f7-9bd2-9099bd999fcf" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5dfb1278-1b4a-46a5-9679-668b5a4f6d79" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07c9f724-1630-4d35-8592-caff2088942c" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06f6ea54-87f8-44da-bc5e-3aaca8b43d28" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable(Of String)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85964e1b-89e4-489b-af49-3801b0628aa9" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd0b9d2e-3bef-44bf-9182-c5a52c6fc6c6" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ee86560-4e40-4aec-a207-12a591e28b6b" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12d41f2f-204b-46a3-bbe2-5a54312c9ec1" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd2c2857-6460-4f5b-a17c-85f3311abba4" shortcut="vrb" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce9017ef-21b0-4c8c-9bca-186a9c8fc0f0" shortcut="vrc" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3dd4a011-a84c-4753-9acc-63d6a981a6a4" shortcut="vrf" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13c38914-0fca-4f7e-beda-60027004558c" shortcut="vrby" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3096443d-5f2b-49c9-8739-2686871dd062" shortcut="vrd" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9446ad67-7a96-4d5f-8e16-eb9c976f99ae" shortcut="vri" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44b5909d-8b02-4b21-b78e-e62ac6027452" shortcut="vrm" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5c7daa8-e8e1-4ea5-9b01-4ad70168f7da" shortcut="vrs" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="606ebd1e-8c9f-4bc6-9fa8-f374591a23a6" shortcut="vrl" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81d45362-4a39-457d-98ce-db107a52b5d8" shortcut="vru" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea65f73d-2b93-4cc4-97b1-762e8cc802f4" shortcut="vrg" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0912fe7-3994-48af-8057-0efc7903a7b0" shortcut="vrt" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ce0458f-28b4-4d4c-acd1-7455a9db3ccf" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae096129-b4aa-4a9d-814e-d6ebc2f31aa4" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a579104-5684-40d0-878f-9ea2c2f27fde" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9629cd18-fd6f-4f7c-92f7-9a2c8e018139" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f936b3af-d94c-4dda-9993-8ea46bba2275" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7a76838-fb92-4dd5-922e-acc9fe62cbca" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd2353e7-9ede-492e-b944-49b67f86b5b9" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d984ddd3-d516-42d6-873a-149cdca72c40" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f86abe7-1829-4023-92ec-245b8fbd07ac" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f2060e89-825f-4ab0-928e-f531b0433144" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2296384a-c6a4-47ee-b01d-a0bbc9842973" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97373307-ddb3-455a-962d-031db3f284ba" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1dab87d3-305c-41bc-964e-1a08ef2efb61" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07ac2895-a65b-47b2-a1b7-da9e011cc7ed" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90cf1528-ed10-4a2a-aceb-f4240e22eb4b" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f193ab8b-4542-40f3-9fbe-70f6aed4e035" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69ea575f-a9fd-4ce3-89b4-2f02ba75cebe" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bab46923-8411-4ac6-b1f6-209d6d626baa" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13faee93-0cbc-405f-8eca-76e75c0f9092" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbfefe82-7aff-490f-ac89-c67c26a0d994" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="deb76722-5af6-4fc5-b36e-cb0f0349972f" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84fd8269-c065-4db5-9cfb-db96f9e392b7" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c982bb8-d154-41a2-94cb-9baf0b6ccb20" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70577a83-2565-4b73-8ba7-421d9456e74a" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="191b8090-6393-4ebe-b09b-fb6ec8dd459e" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bc7677f-8242-4511-9ee2-c14225507bf4" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19e87c24-2ae7-4c33-a633-56923b8c6114" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cca7f9b-c625-459c-bace-d3999aac0295" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a30fe75b-908a-4216-b805-d4a18a5d7b10" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4a09f79-4f1f-483a-b2e1-b4dc822f6fc2" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41c6acfe-c449-49ef-b4c3-0f87d91a9ad5" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6833702-7bd2-43d1-bf10-58b8917dad0e" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7c6bab0-2624-4542-8026-b8d6adeb90e8" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56446a86-613a-47b8-b481-ab30267efc0e" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d34e3bd7-7ea1-411a-8edd-48e130292bda" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d048c22-a3c0-4aff-aca3-f79b082b2e50" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1bea270-884a-42ae-9955-a09b9300b473" shortcut="Vb" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6dd3ad95-6c8a-49cc-be1c-e8b29e9eb05e" shortcut="Vc" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02bae697-f714-4027-9bc0-b1a82037d209" shortcut="Vf" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="717b744e-fe41-45e1-8c60-98870f06116c" shortcut="Vby" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4bfb340-93e9-4206-be40-9cc735314326" shortcut="Vd" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1edd500f-3708-403b-adbe-7c511f63cf7e" shortcut="Vi" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23fc5806-7d39-4d08-b5e0-0759f76aa0cc" shortcut="Vm" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e32a507-6a45-4591-aa65-2615e153f2ad" shortcut="Vs" description="A shared field of type $typename$" text="Private Shared $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02c15264-1928-4665-8136-7ef3b3108fa5" shortcut="Vl" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8dce822b-1c46-4192-baad-29fbf245a69a" shortcut="Vu" description="A shared field of type $typename$" text="Private Shared $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b07c2e68-292a-42eb-882d-12e363166c88" shortcut="Vg" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a74f80e-b616-461b-9877-7cb263401a83" shortcut="Vt" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="731d60ad-7b28-4002-af7b-c17973770a87" shortcut="Vl.b" description="A shared field of type System.Collections.Generic.List(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11afa8e4-e2b1-4e12-81d9-113823af9454" shortcut="Vl.c" description="A shared field of type System.Collections.Generic.List(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53a96b15-2d48-458a-9a68-e8088d0cd190" shortcut="Vl.f" description="A shared field of type System.Collections.Generic.List(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6627b7e7-f4fa-4506-a514-3063d513d95d" shortcut="Vl.by" description="A shared field of type System.Collections.Generic.List(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7844e401-5fb6-449a-a377-f5d3ab00af42" shortcut="Vl.d" description="A shared field of type System.Collections.Generic.List(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="925afaac-c16d-433a-82e5-f4c936c24058" shortcut="Vl.i" description="A shared field of type System.Collections.Generic.List(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4641c2d0-39d5-4f54-bc2a-31edd30bbd6e" shortcut="Vl.m" description="A shared field of type System.Collections.Generic.List(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2809eadc-0853-46e3-9f75-69f9c8bcc4ca" shortcut="Vl.s" description="A shared field of type System.Collections.Generic.List(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc342d43-b7b9-4dc7-bbb5-da4f1d0f0486" shortcut="Vl.l" description="A shared field of type System.Collections.Generic.List(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4a7eb02-9db4-484d-b325-f4c470c566cb" shortcut="Vl.u" description="A shared field of type System.Collections.Generic.List(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="357433fd-7a21-4c61-a5a1-4afef7918cdc" shortcut="Vl.g" description="A shared field of type System.Collections.Generic.List(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35725ad5-70e4-4249-b419-c19e1e79a9d8" shortcut="Vl.t" description="A shared field of type System.Collections.Generic.List(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48ec5ab1-731d-45d3-98a0-6248b498eff5" shortcut="Vh.b" description="A shared field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa01fd3f-4257-4d14-9f50-a4d82183005d" shortcut="Vh.c" description="A shared field of type System.Collections.Generic.HashSet(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="835dde8d-372b-4958-bcbb-42b75c3d9cb5" shortcut="Vh.f" description="A shared field of type System.Collections.Generic.HashSet(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ec74ea4-f68b-441a-9cb7-290a7d4b737d" shortcut="Vh.by" description="A shared field of type System.Collections.Generic.HashSet(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73081da9-416a-49f2-b5ef-7d936a6a6ac7" shortcut="Vh.d" description="A shared field of type System.Collections.Generic.HashSet(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="584ac432-f279-4f6b-872a-bf9ad4df7cf2" shortcut="Vh.i" description="A shared field of type System.Collections.Generic.HashSet(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcac0558-8674-4ca6-a909-ad4851a4500b" shortcut="Vh.m" description="A shared field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ca9afe0-b11b-4461-a9f6-0497fe6699d6" shortcut="Vh.s" description="A shared field of type System.Collections.Generic.HashSet(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6fb7f256-e34d-4a0f-8db8-166f3259edf6" shortcut="Vh.l" description="A shared field of type System.Collections.Generic.HashSet(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3cb5d12f-fe2b-49b5-ab23-56f22d50fb94" shortcut="Vh.u" description="A shared field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a89e9a7b-9780-4928-885e-9dd8bd27dfba" shortcut="Vh.g" description="A shared field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b6d477e-34f8-45b3-9815-b3bcc9f4d9c7" shortcut="Vh.t" description="A shared field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f594b92-77d8-463e-87ff-f0bc9f2a9482" shortcut="V~b" description="A shared field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc610621-7895-4cc3-b2bf-ccb9c39c8482" shortcut="V~c" description="A shared field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f425d4b5-a242-4a8c-818a-80c02d136794" shortcut="V~f" description="A shared field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a1c37c7c-cfc9-4472-9e6d-9b05c5119830" shortcut="V~by" description="A shared field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6eeaeba1-8774-40f9-bc44-a2240d4510d5" shortcut="V~d" description="A shared field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="399e4b5f-030d-45e6-acdc-ff4a7aaa1506" shortcut="V~i" description="A shared field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="751fb7ee-ab7e-48b6-a02a-549ad278c103" shortcut="V~m" description="A shared field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00a0b322-de2d-4267-a072-70cd13027359" shortcut="V~s" description="A shared field of type System.Collections.Generic.IEnumerable(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="882d11d1-7d4d-4356-adee-08d4576ce227" shortcut="V~l" description="A shared field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eda88fb6-d0ec-406e-ac16-4aba89e99473" shortcut="V~u" description="A shared field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c998d90-2645-47f7-90ec-7d62c1f03dd2" shortcut="V~g" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6e14617-56d1-4840-81b7-a3296516407b" shortcut="V~t" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c58230dc-8586-44b7-899f-322773220f88" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d8fc5bb-77da-4285-b6f6-dcf1351b603f" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7358d0e8-af33-4332-ba75-adf288f98315" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9dbba8ac-b9d0-41aa-b989-bb40918dfc5d" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44cfb883-6783-44e9-aec3-133e42aec4a7" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bec1940b-0157-4b30-bfc6-4c688200df80" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d5cea9e-a068-4196-849f-f7e250680384" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c51b152-1585-440f-8824-0395287463c1" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a0281dc-0072-451e-bd40-3a396639a64d" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c09524fd-42dd-4083-82ef-57b2c8a13996" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f617dac0-3639-41aa-8bc1-0bd21c41de7f" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33312cf8-4b14-4981-88f3-eb3ea6c57784" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65113cbd-abc8-4d4e-9518-a7ff9c6b00f4" shortcut="nl.b" description="A field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1d20031-ebe2-4936-b028-35ddf076fd35" shortcut="nl.c" description="A field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c385be6c-8bab-4908-ae49-0834585604d8" shortcut="nl.f" description="A field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="768cd2c2-5724-4cc3-a6e0-8955bacbae2b" shortcut="nl.by" description="A field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5dbf3799-1343-4f9a-a6ed-b51de63df59b" shortcut="nl.d" description="A field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f687c999-6edd-4899-8595-b1d159bb5c97" shortcut="nl.i" description="A field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b7a20b1-8f12-4f03-bde7-fec106f91acf" shortcut="nl.m" description="A field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2bf73bea-4502-45c8-acef-7433748ea920" shortcut="nl.s" description="A field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ea79e68-035d-4017-af8a-16b47a7e5dc4" shortcut="nl.l" description="A field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23e91b24-bd2f-4f6c-99f4-92aeb20f89ef" shortcut="nl.u" description="A field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1cf845fb-4fd8-4690-8c94-c001e89f9d51" shortcut="nl.g" description="A field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c4cfcd0-b752-43a1-ae31-005f3211ac67" shortcut="nl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d954720a-bd2f-4b85-9df8-e2c002e52da2" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="637375e0-6e96-4201-8e01-17b037469ec6" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed09efb0-394e-4801-94ec-2b012465d239" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d524172-36de-4bd4-b037-df2d98f877f6" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a83a6b50-1e46-4833-8410-c9695351d798" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec41695c-1ea7-4df9-b818-5858534182bf" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c31db1fa-66ce-489b-846c-08a6c3ee9ac2" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da1ea7e8-1003-4234-ae6b-7e8ddcc06342" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4effc233-b258-4df5-9b9b-be1c6abb5601" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c1b5a73-281e-4f4f-9917-baae25c535c0" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64982f57-b2fc-466f-9d23-47d629c5da99" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06c7d1b0-5481-4c8d-8e4d-fc5d5740a78c" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cac62ee2-2669-4d6c-9a11-fe2a1abe51bf" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cdf6fe9-7285-4c6b-8027-50da3feabe05" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="486037e4-5fa9-45f4-87bd-ecf3c48ab57b" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e9a670a-acf0-41ff-a674-a4ce54686cab" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="540f6596-459a-404b-94c0-adb602a1df4b" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a71c48a2-3905-49eb-893b-3258a3a31ca7" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="586ef0a0-ce7b-4100-9f87-c15e09ac1d7b" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8b2d671-b247-4bac-99d9-1634fc8a3e6d" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d725ffba-e9f2-4893-879e-b6d518965ec3" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c552aacd-4df6-4787-bc5b-85d37a54d80c" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a27181a-5b80-4e0a-8296-3c64de312557" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e4d0b9e-4268-40c2-9e06-4aa72e5149d1" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c323198-6117-48ca-826c-d6f74a8b70ac" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f698421-0efa-47f4-932f-9cdb5cd3a208" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8f5212d-c98d-422b-8a4e-fed97118ef9a" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99c9d33f-b61c-460e-9758-4842ec51c404" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f78905b5-2fd9-4d55-9b3f-a7223828f483" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef8c7a4e-b518-4ff4-8109-2988752715cb" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4a2eccb-2690-423a-8e79-ca064d76542a" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d160e991-6fee-440b-b9f8-36e9d19e5067" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="333ce8a7-3825-4cb2-8b99-39db1e637880" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03ca3d2d-123a-4d36-9cb6-cdc25d604fd7" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="528ccc30-3f67-4ad5-bb36-616f16e394d4" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95b1fedf-4d6b-4a90-ab4f-9c42927ca85a" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ef897b1-d1e6-4af4-a95d-3926066f006b" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d630beaa-bd42-42a2-bfc3-e11126cb4d46" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ea54783-8f3e-49c3-8ec2-2090f1a2ed9e" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb695cbb-22b0-420b-a88b-24bd5b1a50de" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62d53747-b60f-44c8-8b99-7cb1d9e33817" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d981d69-16aa-42b4-9b9b-e1e576d90e53" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9428571-9c5a-4a3b-a432-1c013b4ba363" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d170320-779b-4731-973d-43cddd5d4d0e" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c10e23a-6c2b-4ac1-9b07-4c0f582f54b7" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a336d616-3b6d-44ac-bf9e-87ace5b08b39" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba8e01c3-1007-4185-bbb2-db1b6394e40b" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82a8f88d-f779-46cc-ae74-d6e3f4944f74" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7dea968-c6a5-45fa-9b9c-142ee3146f4e" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62f1bff0-fb3d-405d-a4f0-19f9dd165990" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="015aad21-264a-4049-9cb1-abeac1bd34d1" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f800ee49-7459-453c-98eb-27be5d9236e5" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08610025-750f-441a-be29-cc5fb76eea70" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4b22aca-7c17-40ca-a968-572899766556" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42d29356-05a7-406a-9be1-75a6dfb5c04b" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a91860db-aeeb-430f-91d0-f179ff2b44eb" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed72f45c-c609-4ad6-9385-6ad292a1fda3" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9dde3ec2-b4f7-433b-b309-f3cc4bbb6bef" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19c8fc16-c84c-4791-8f89-0ba5348d9226" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c85009d6-f6c6-42ac-bf02-510e6c82b32f" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="361a21ec-4531-4fab-bd61-a8231069748b" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a5bfd8c-88a1-46ac-8c35-66db8f5fdb64" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="821064e0-444e-431d-9484-6664b526690f" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a9a811a-1300-4866-8064-d580e5424490" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29af9987-2698-497b-83bd-47a787e7b499" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="989ac8e6-1317-4017-9611-b1b1e7a41815" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59b48aaf-5f50-48a9-af97-9d74d3360398" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1fedd44f-427b-4b64-bb06-989605b47b8a" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1491a6fb-d0d0-4eaa-bb9a-e0c3fc801cde" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e63fd5a7-71ec-4d1e-98a5-0664cd15f00f" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76401cd7-0dc0-4bd8-92d1-dec0d2d742e5" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34ffee6c-f5a6-4b5b-8468-cfd9e2cf4821" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="707911b0-97ec-4523-a3d9-bd927f1f62ec" shortcut="tb" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5338a36-1cce-4eff-9683-15f2bf8e88b8" shortcut="tc" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1998bf2-f1fd-4b7d-8c6a-5d474b2d0e02" shortcut="tf" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74627791-5b30-4879-be38-8db625568f73" shortcut="tby" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42ffb4b9-b60b-4de0-ad7f-150d393be53a" shortcut="td" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe6f0985-361b-4638-ae56-0a268f4052a0" shortcut="ti" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f23e83e2-e163-4a32-a0af-b4b4ab958365" shortcut="tm" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c889b2bb-0fc9-4a78-bdce-ff48b2194487" shortcut="ts" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67c6c988-a18a-4700-84dd-8dc8a5b2e1e4" shortcut="tl" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3b77a3f-a56c-4af7-856a-fc6c126c9a47" shortcut="tu" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b49db606-ea92-4a10-a1a1-9f5a8f15b00e" shortcut="tg" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b241329b-a77b-43ba-a82e-d080ca304588" shortcut="tt" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8432f847-f2fb-44a5-bf9f-5e77483e0bab" shortcut="tl.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0799470b-3d9a-44a5-88bf-9aa15f517c68" shortcut="tl.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a1d6d38-bb63-4cc4-8041-fccaa939b2b1" shortcut="tl.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6556984c-fe47-4c84-be23-e1b19f7720df" shortcut="tl.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a07f84e6-0c11-4547-84f3-c0529c9681a5" shortcut="tl.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e57338fa-b2e3-41ef-99ff-1e3bd718bafb" shortcut="tl.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2482182f-a055-4091-81cf-a3f60f7f9c28" shortcut="tl.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="198992f2-9bf2-4d05-a80d-bfb8158d27fe" shortcut="tl.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddedd9a4-fa7e-4ff8-961a-18c60a444fca" shortcut="tl.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43cf4442-f4c9-4dce-a2cf-233b15cd80b3" shortcut="tl.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="187a5a36-c54c-4d32-b302-04f765a897d0" shortcut="tl.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="302428f7-1b9e-4e6b-8edc-a62d85fdffdf" shortcut="tl.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97049042-adb1-45fb-9561-78612310f32b" shortcut="th.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c217afc-de3c-4939-a79b-e90e8074e009" shortcut="th.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbe72520-8982-4df8-b8b1-4b8de615df81" shortcut="th.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebc9cb8d-d1a7-43f9-96c4-9a8cf5d79d31" shortcut="th.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d40d2668-35e5-4929-a7e2-c30aad82905b" shortcut="th.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd4033d5-f4d2-4b40-a123-8763ee6792cb" shortcut="th.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a87ba54-3c43-4244-bf01-85fe54c92acb" shortcut="th.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9d3457d-be02-4754-945e-8aa846519f19" shortcut="th.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1fa2fe8f-0b71-4542-bcdc-66869d9b2ca5" shortcut="th.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2b9f32a-61a5-4c9a-ad28-34aeb95ccde2" shortcut="th.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca13582a-2558-4020-977b-37b31f5bed96" shortcut="th.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="647f3831-15f3-4cb4-aac8-7a420ec43185" shortcut="th.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cc687c5-2c87-4da3-ad88-9a1a8a01b8cf" shortcut="t~b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ddeccd4-1141-43c7-9d83-0ab5f545150d" shortcut="t~c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cdf01b11-1a5c-45e2-853e-a64fe2ec3e6e" shortcut="t~f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75371dff-5644-4022-955e-7e4dc0a645c8" shortcut="t~by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f2c386b-e0ee-4810-93f7-db7d28c47b44" shortcut="t~d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcca1ffe-a390-4d81-a023-b1878498f96a" shortcut="t~i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c4817fb-e05f-4f5f-8801-4ba2bdf9ccdc" shortcut="t~m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ae0f2a4-d016-46cb-bf82-92cb4cc4b339" shortcut="t~s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dfbd7c05-dd91-4e56-b5db-423e0243cc57" shortcut="t~l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79a6b76a-2b2f-4e80-8000-2a57d0182b6f" shortcut="t~u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2187392-1493-498d-8fc9-2eb2692f4638" shortcut="t~g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f705dd7-ba8b-40d8-9a81-3807f3d3ddd1" shortcut="t~t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f7dfaeb-90c6-4cd2-9d88-20b6741333c3" shortcut="mb" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a6c84eb-962e-495a-a840-10855ef29ace" shortcut="mc" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38301ef3-3e9a-456a-b7ad-8536d2a2039f" shortcut="mf" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00ab8565-fda3-49c1-b380-4de361621c17" shortcut="mby" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a9bd1392-5276-4523-a7c7-81d5c796b643" shortcut="md" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38b539d5-5a21-484c-827e-436da83aa4ac" shortcut="mi" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="790b77a5-8682-4b9b-889b-2acacb75d681" shortcut="mm" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d4866af-1a3a-41f8-9562-89da262a8766" shortcut="ms" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27514ef1-b099-4eb8-8fa7-a7f56c48abe2" shortcut="ml" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08d7f5d0-2d83-477d-b684-556a0fc0096f" shortcut="mu" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8236906d-43d5-46cd-8d4d-e50c5a904ba2" shortcut="mg" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d236d0b6-2153-49b6-b2fa-1afa8f3eda53" shortcut="mt" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd0142df-1398-426a-858e-ba3e2ea03d87" shortcut="ml.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d7a7c01-d248-454c-8e19-346f08f754b8" shortcut="ml.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f697bb5c-51af-4d18-85df-32243736dcfc" shortcut="ml.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="747dbbdc-6f2a-41f7-91b3-774748dd62be" shortcut="ml.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d2764d9-dc61-443f-bbb6-9bb144b8e96b" shortcut="ml.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d1e65d4-82ab-4d5e-8c99-708337d85ee7" shortcut="ml.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b30933ea-8323-4ea2-960c-6af00509cf42" shortcut="ml.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca8c3ad5-f8e6-4f87-990d-ed7db27560ef" shortcut="ml.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7ed003d-a6ea-4337-bff5-0f344ea698bc" shortcut="ml.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8aa45c4b-d8ae-4c22-af5a-8f35805a2922" shortcut="ml.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0fc6897-adf8-48ca-b273-7b401e7113dd" shortcut="ml.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1054b4bd-d385-45ff-8315-9ea473b5efcf" shortcut="ml.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a1beb07-727a-4936-9bbb-7e7f8cf464af" shortcut="mh.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5293d3f9-392f-47bf-bfc0-8a9994e9a821" shortcut="mh.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e458b57-0066-4217-bd72-7ddd85d69d37" shortcut="mh.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83e794c4-4741-49c4-a00c-3725b3ba8340" shortcut="mh.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86bcf094-1296-43fb-90b1-837546f62043" shortcut="mh.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e25e0ba6-7bd0-4939-ae50-501824a3b541" shortcut="mh.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae750293-88e0-410c-a52c-a466f6ab433c" shortcut="mh.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8663849d-ed02-4841-9ea8-b05023dde604" shortcut="mh.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2e081a7-10be-4adb-8b34-31217b32983b" shortcut="mh.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f26e95f-a81b-4bb3-92ef-45d6ec9c8254" shortcut="mh.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ea08efb-c41d-465c-ba6b-96d3f4f2df02" shortcut="mh.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d6fa8d9-7611-4449-aca0-0e0f43fd79f0" shortcut="mh.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="157ffd5c-78d9-4ec3-898a-42920b9a5228" shortcut="m~b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5e65777-2102-46f5-87a4-6b53d5c69d09" shortcut="m~c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b883f97-b3f2-4dfc-9aac-68030ae74fdb" shortcut="m~f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8dd52c85-64c7-4745-8c7b-4091b1bb3fb5" shortcut="m~by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53201f19-ddf7-4907-8739-af78c28c5187" shortcut="m~d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d99aa965-7d31-4f48-bf9b-f81f67fda369" shortcut="m~i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ff9a15b-0d2e-44fd-995e-df3e5eb3e193" shortcut="m~m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1d7b6cd-e3c3-428e-a13c-0ed989134e62" shortcut="m~s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a8c562f-8ce6-417e-a17e-3855067f7028" shortcut="m~l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25d6830c-ae94-4e0f-9a86-21afb6296a2a" shortcut="m~u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b47b6cd3-5ef8-492e-bdc1-4a4235a63cda" shortcut="m~g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a4b857e-6d3e-47f4-b402-21e3bb26eb99" shortcut="m~t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52550d96-944d-4c7d-b4d7-655e564cc62a" shortcut="Mb" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="030c7162-02ea-453b-8584-a819ab7ea98c" shortcut="Mc" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d243587-e978-4c4b-9a63-6d5847f2e0b2" shortcut="Mf" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="796f8574-7e8f-4d9b-8b59-0e292698c992" shortcut="Mby" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11070407-afbe-470b-8e42-a96a2d92c8ed" shortcut="Md" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="861b1e8d-993c-4496-aed5-7882acc7898c" shortcut="Mi" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8ecbb0d-c774-44f6-a492-469cb6c0a531" shortcut="Mm" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a42942f-9073-420b-ba43-316bb06b174c" shortcut="Ms" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9fa6036-3624-472c-af60-4fbdd40a48f7" shortcut="Ml" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c7a1106-ae2b-46fd-987a-354ec8d9dcd8" shortcut="Mu" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20e19a60-451f-4d21-9da9-4b97a5a1ab94" shortcut="Mg" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca4408f5-c7b9-494a-a236-61886fdb8276" shortcut="Mt" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81fedc12-df43-4497-9465-a3369fd7b8ce" shortcut="Ml.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec774833-f93f-4049-b928-01e6115e1c60" shortcut="Ml.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7d52fd8-d475-40aa-b089-d2abb0dd069a" shortcut="Ml.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32c41e8c-9b6d-4806-826d-7682334ac19b" shortcut="Ml.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85990ca9-6668-4d0e-ac4c-32299fa5e8ee" shortcut="Ml.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c882323-6614-4076-ab6b-7028fa0e70f6" shortcut="Ml.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7109e219-02ad-4cff-a5aa-7f6ec371e8e3" shortcut="Ml.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab141d9b-29c0-4b7a-97e2-f81fb932f66f" shortcut="Ml.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="685d26b2-334d-438c-b56b-cb016b85f174" shortcut="Ml.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd86a1fe-fb01-41de-803b-1a7732eaece9" shortcut="Ml.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5deade07-6e61-4e9d-9751-380b6c751bf5" shortcut="Ml.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7468dd60-2dd1-479c-90ce-f2b5907dd238" shortcut="Ml.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71500f0b-8d03-4499-8e9b-f5e4197a75ce" shortcut="Mh.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cca5835d-7a4c-4541-ba28-f05ee0056f17" shortcut="Mh.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cf5b488-88b8-4541-a51a-5b63ae7ecdbe" shortcut="Mh.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f08d945-7764-4555-87ed-c4d9c4a84b23" shortcut="Mh.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78914ad4-d982-4917-9f29-65cd7d9ae7b8" shortcut="Mh.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f94f698b-80c1-418f-bf8c-9c13570e9311" shortcut="Mh.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62897c9d-fd64-49cb-af85-d24857199fd9" shortcut="Mh.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74817ff6-4cd8-453a-93d7-421a533ae446" shortcut="Mh.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7596b8f-2aad-4ca1-a838-1c85fa2f225c" shortcut="Mh.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e85fc812-9fdf-42d2-ae21-69f9bd5a9e43" shortcut="Mh.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae88f1c2-9f5e-467e-ae1e-6adecd34b509" shortcut="Mh.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e2299be-1fb9-4285-9fc6-a2c19bdb6199" shortcut="Mh.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc87d4e3-b7d7-4b9b-885c-b2b809d82067" shortcut="M~b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d86eca69-1de4-4663-b1a3-936afb8da8f5" shortcut="M~c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e4f091a-ed88-4dd1-a389-c81a1f8a422b" shortcut="M~f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76813c18-eb55-42ae-8a5a-e4b24da3dbfb" shortcut="M~by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d51d2c20-7bd9-4e57-a3a0-0ab7d748e749" shortcut="M~d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86d8bc49-40d5-453a-b92f-ca3c66d21717" shortcut="M~i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8bc98961-8274-4532-9b28-9bb46c8cad43" shortcut="M~m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6026f6f7-a293-4392-9ef3-45bc2584a0aa" shortcut="M~s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="becae86a-4c31-4511-8a4f-aaebefc52fa0" shortcut="M~l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddf4b8ff-2bee-45f1-aaab-149fd2e67580" shortcut="M~u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03cc6abe-3701-4ce8-a85c-0034286c9533" shortcut="M~g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b2c5965-c501-4906-ac3e-efe4a8754bd6" shortcut="M~t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4949e69-495e-46e9-8bea-c177e750c134" shortcut="mb" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f99d0a96-f0a6-4c0d-889f-419253144a27" shortcut="mc" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd9573e6-8243-48fa-a72c-cd6d70984716" shortcut="mf" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2aba7f7b-b3d2-4800-a7cb-5f1cfd8e0b47" shortcut="mby" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a26e1ec3-0d11-4438-b774-76f33bc3b77a" shortcut="md" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d192f7ff-653e-456a-a08e-cda9b129c1f5" shortcut="mi" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e096f858-6cb4-42bd-afb4-bd11672d5330" shortcut="mm" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a1345f72-6f03-4bcd-9f0c-175b8cb81da1" shortcut="ms" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e163d11-fa8a-4ea7-968f-627a6aa36e0e" shortcut="ml" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="722a80dd-eecf-4cf6-a519-128f79219acd" shortcut="mu" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e464c67-9fdb-4d7e-b182-aa88630c109e" shortcut="mg" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ac17e61-e770-42a3-b89b-b43c35f8b545" shortcut="mt" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="380dc7ea-55ca-491b-9245-22c93a310cca" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67a65c50-51f9-4c21-a7a6-3e1661c22fc8" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5958836-7fc8-4849-8d6f-4ed6d05804cc" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdd6274e-9d70-422d-a8a0-a7a013bb46e9" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f9d6433-3c7d-4d8e-80bd-3cd71a159c9f" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d900413e-c976-47e8-b8d1-f31c6322261b" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="273964a9-ac33-435d-89de-5500e08aee5b" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad8753ec-5d36-4af1-85cd-1398b1313727" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d36f4bc-fc69-4127-94ca-649009cab4a7" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="321585c5-2aec-4143-8138-70835498aaf6" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="723898a6-616e-4756-bf74-66b328bd948c" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3227d213-a850-4a48-90ad-21dd881e5716" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53784092-83a6-4919-8fc0-813d35cd8c2c" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24855fca-cc7b-4c29-852a-41064e27922a" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e461f8f-321a-4e82-a3d0-83c8030cf02a" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="656a13b2-1d38-4a2f-99d3-478a3254534f" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d95b016a-f576-4db3-afdf-f550f7bffe74" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93f546e3-4ab3-4f8c-931e-01c541669b4a" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99407444-4199-4b54-8990-e9225b4a6f22" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce10715b-a6bf-4882-b364-368f013745bc" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8b5f753-4811-4ee0-b96c-a87d351303b8" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fcc3b9d-421e-4c9b-a335-440566e3d81d" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96533c41-36cc-44f3-957b-e72c1bc383ff" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f6a8e8d-460d-4268-a8b6-aff504ea9448" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae203dc6-4a5f-4149-bd42-9408955f1f70" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd14f4c9-32df-4297-b5ce-2571b722447f" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72c00202-7a08-457f-ad3a-1a25857aaa69" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86fb2e1a-a0e1-41f1-a610-bed0e1be9e4c" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="516b1379-1387-445b-aa65-47d762fa872e" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="780b12bc-af88-44ef-bcb1-b490f520c897" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72f8b181-525e-4892-95ea-7a9cb13e1bf4" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21445ae7-7edd-416a-82f2-17da8fcc9f11" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3bbb707-b883-4f51-a27f-0265219a2afd" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7aaa2905-eb8a-492e-9b0a-978f311db991" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebaf2360-222d-442a-b9cc-7e892406334f" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10e0df30-3b9b-4541-863d-f1bf1e969bdd" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d944af1c-8ea7-4681-bbf9-bc90ba05f650" shortcut="Mb" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a746c0ba-fd78-46c2-b7b1-3630a5a876e7" shortcut="Mc" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b34b924c-5159-42e1-bc0f-bfe50ad78d7a" shortcut="Mf" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d14febc-b731-4f48-85b2-4ae800869f0f" shortcut="Mby" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1dd2b19d-1ea7-4871-b615-782022eb0f1e" shortcut="Md" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12793c65-895b-491a-bd44-e2d1f9168f65" shortcut="Mi" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ee7a6f0-cc3d-45ce-8810-edd915657134" shortcut="Mm" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c5cab07-1152-4d1c-a257-9a0c9a6229cf" shortcut="Ms" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7283fa86-abf3-4311-aca4-f21c8b8bfd19" shortcut="Ml" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="713561a7-dc1c-4eaa-a4b0-f3a8d6c1d0b7" shortcut="Mu" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd752fdf-1909-40a1-971b-0a09773f816c" shortcut="Mg" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31ec5fd7-e24c-4462-ab32-8466b4345a72" shortcut="Mt" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6acb93b1-8802-4f47-8e08-3bc7a24b0154" shortcut="Ml.b" description="A shared method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14f8073d-a885-4577-80a7-ee0767027189" shortcut="Ml.c" description="A shared method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db9b8cdc-32bb-4261-8a09-60fd823b7075" shortcut="Ml.f" description="A shared method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f12521d-6ec2-4660-852c-f855935f78e7" shortcut="Ml.by" description="A shared method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f207c2a1-ca0e-4ffb-96cb-5d68f73c69d6" shortcut="Ml.d" description="A shared method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="174fc4e9-6ee6-406a-a6d0-78dd52fbc8b8" shortcut="Ml.i" description="A shared method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f623264b-494e-46df-a999-c802cec30e39" shortcut="Ml.m" description="A shared method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b5ca7c5-b90d-4283-ba0a-0ff94beceb4b" shortcut="Ml.s" description="A shared method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f28d75e-9640-44cc-83d1-57a957c5b270" shortcut="Ml.l" description="A shared method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62aac384-392b-4b68-a9f5-e2e7b18508cf" shortcut="Ml.u" description="A shared method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="779b94b8-9031-4560-a824-b45f46c106f0" shortcut="Ml.g" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="936d1b91-3b28-4b06-b38a-f027f52ef13e" shortcut="Ml.t" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbb4ddc8-cc95-45d3-83ac-3b81d78f782e" shortcut="Mh.b" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9043ba44-33aa-4d57-b965-3ef059950709" shortcut="Mh.c" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d831744-af12-4c11-a71f-cb8900d1a839" shortcut="Mh.f" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03da2e1e-21a3-4695-b295-08643ad1aa22" shortcut="Mh.by" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a00a2c0-32dc-445b-9332-1967ed6dabd8" shortcut="Mh.d" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da235a9e-6e7b-42a7-a886-dc9066557e63" shortcut="Mh.i" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="134daf12-a145-42b5-92d2-bfed3208134a" shortcut="Mh.m" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43a698c2-a7c1-44cf-9021-ba4ba0553c0a" shortcut="Mh.s" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="043283b0-4dcf-4325-b8f7-486c5756244e" shortcut="Mh.l" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="835829da-bdc3-4457-8203-69718c9d8cf8" shortcut="Mh.u" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f59f78ea-abb5-49ed-b2bb-4c6eb8713455" shortcut="Mh.g" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="694c02f6-ed8d-48fc-bff2-10e3b6789f7f" shortcut="Mh.t" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b31ea0be-b486-44b6-840f-00d7d67b404e" shortcut="M~b" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c2705b2-d615-4632-98e3-bea0b1b97082" shortcut="M~c" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8672a2c-8fbb-43e1-9531-d2e760123e36" shortcut="M~f" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9fc6d99f-9863-4be6-924a-9dad149e1a7c" shortcut="M~by" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ff9c32e-3de9-4a95-9834-6ee8c039662c" shortcut="M~d" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ab1d959-d416-443b-950f-9481a6109611" shortcut="M~i" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be854e20-d5b3-43ea-b40b-9f4d88347b70" shortcut="M~m" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6bb0c421-d29b-44ce-a1d1-9d36ba977683" shortcut="M~s" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e231f36-d288-4e66-bb2d-c64eb3884e2d" shortcut="M~l" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8035b821-f9a8-44fe-8d49-e47160f7b17a" shortcut="M~u" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97234339-96b8-41ee-aa74-f9916d1b9151" shortcut="M~g" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eac34f6d-bd1c-45cd-bc3b-7a3c8c00e2dd" shortcut="M~t" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6294c4fd-0d24-420e-8799-ff389c360ead" shortcut="pb" description="An automatic property of type $typename$" text="Public Property $propname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="166191e5-0c74-49c0-9177-10823e214049" shortcut="pc" description="An automatic property of type $typename$" text="Public Property $propname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51625f5a-964e-481e-9d2c-f2f279597295" shortcut="pf" description="An automatic property of type $typename$" text="Public Property $propname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f103203-2cb0-4612-bc1c-76d70e38cf8d" shortcut="pby" description="An automatic property of type $typename$" text="Public Property $propname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5788702-485e-43c9-bd4d-85183811f9dd" shortcut="pd" description="An automatic property of type $typename$" text="Public Property $propname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca1a343d-286d-4bb4-bc38-de5ebe8d865c" shortcut="pi" description="An automatic property of type $typename$" text="Public Property $propname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c064dff-5775-465a-8667-90de6c28f081" shortcut="pm" description="An automatic property of type $typename$" text="Public Property $propname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c25e955a-92b1-44cf-bf31-d5ef155a67b4" shortcut="ps" description="An automatic property of type $typename$" text="Public Property $propname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b0aaa3f-a13c-44ea-9754-06b7ecfb7cc9" shortcut="pl" description="An automatic property of type $typename$" text="Public Property $propname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="222a22d8-1f08-4fd9-9e32-fa46787fd1cd" shortcut="pu" description="An automatic property of type $typename$" text="Public Property $propname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="693727b5-0365-4ffb-b632-f742e52a9c32" shortcut="pg" description="An automatic property of type $typename$" text="Public Property $propname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="deabd912-95e7-4980-a537-ee9bfda720ce" shortcut="pt" description="An automatic property of type $typename$" text="Public Property $propname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1522c2b-998d-447c-a273-25c8d9b19b6c" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff362da8-24ff-406b-9d2a-b02d8a4dab13" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List(Of Char)" text="Public Property $propname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad32ad78-a3ee-4d3d-ad63-8e6bee5fa58a" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List(Of Single)" text="Public Property $propname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="278243d7-3ed6-4438-bd71-9ba43a656942" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6637117-e8b4-4f3f-a4a9-725a715ea20a" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List(Of Double)" text="Public Property $propname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5804adae-6246-4c72-9ec5-fb2e10383326" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee0c6939-f597-4d2d-b364-e77df7172175" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86b0a90a-ba13-4ed5-b762-dd3f97162e17" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List(Of String)" text="Public Property $propname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f7819c9-9235-410a-9ed2-f26f3a34a269" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List(Of Long)" text="Public Property $propname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf7657c9-f013-4c38-9e2f-f3dd63155599" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5ea2758-430b-49a6-8674-301a6d086cda" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79fbbdfc-2ac6-4a6b-a2a1-592342d7f958" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e45d844-6215-4982-be3f-09b527d1603b" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a1bb380-4a15-49d4-b493-6c89f206324a" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet(Of Char)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07968fcb-8488-47c5-b6ec-77381a64624f" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet(Of Single)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7bb5d378-98b6-43ae-ba22-5a071c80f3ac" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65804100-7156-4891-b76d-b0fab930674f" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet(Of Double)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ec57fb8-d293-4b76-972f-c7a9521bc65e" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="187f3d99-c565-4952-b500-774d3205fa59" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf6e042a-43ca-45c6-b671-5eccbfd95a37" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet(Of String)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c570074-4a3f-4f62-99bc-8d47776f8853" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet(Of Long)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e8e95b9-8424-4578-967b-308d88b4ed52" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="530564ff-06a6-473b-954e-0c8c39f748a7" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ede6981-b40d-4b5b-825a-f454f51c712d" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b80abbf9-fc20-40e6-925c-4b6c594a45ec" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28748cd8-425d-4323-86b6-302569035967" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Char)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="068300fb-9894-4dd6-9acc-4c69e32cedec" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Single)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6fd2b57f-efc8-41a2-a21f-73f8375f2c86" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fef92c31-fdb1-42ea-a8b4-0dd525ab6aea" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Double)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7aa92a0c-d589-4cb2-a4f8-260037339752" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="926befcc-4fbd-48ec-9fb8-4f86d8387d0f" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fc1cd06-eadf-4246-a67a-664fd1f060ad" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable(Of String)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3cc18534-36f2-46f7-bb8d-b6f027e7e3cf" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Long)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2090fd81-bcd3-49a0-9356-a931fb9cf17a" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8577f774-cb34-4cfb-bf92-9ea62dbbc938" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8713120-caa7-4420-924d-566586c5b04a" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
</TemplatesExport>