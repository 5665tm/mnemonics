<?xml version="1.0"?>
<TemplatesExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" family="Live Templates">
  <Template uid="54845b0f-946d-44f0-9d07-8395756d5ec1" shortcut="c" description="" text="public class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8799b81d-b32c-4c59-84c2-c53f62864701" shortcut="a" description="" text="public abstract class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4821eca-3611-4b3b-a070-d293b6366259" shortcut="C" description="" text="public static class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0481588c-9ecf-477c-bdc5-0af1113e21d3" shortcut="i" description="" text="public interface $INTERFACENAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;IMyInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bbab86e-6226-4769-8597-8c895c7a1115" shortcut="s" description="" text="public struct $STRUCTNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;MyStruct&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00fa1415-e48d-4b3e-b31a-19d8af2d5683" shortcut="e" description="" text="public enum $ENUMNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;MyEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b163b7c-76b2-46a3-bba5-4346052a07b1" shortcut="c" description="" text="Public Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ac88871-b2ac-4377-9ffc-c57b14e17018" shortcut="a" description="" text="Public MustInherit Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2af9e71d-9403-4546-97b7-7d54fcec3b37" shortcut="C" description="" text="Public Module $MODULENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="MODULENAME" expression="constant(&quot;SomeModule&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23022644-1f6e-403a-8666-850d929c2ca9" shortcut="i" description="" text="Public Interface $INTERFACENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;ISomeInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b096566-3faf-49c8-a072-4e8d79f8dae0" shortcut="s" description="" text="Public Structure $STRUCTNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;SomeStructure&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b01ee657-3985-4e72-840c-416448ca28a2" shortcut="e" description="" text="Public Enum $ENUMNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;SomeEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e15adc99-fe3c-44c4-9af0-5226d71d86d1" shortcut="vb" description="A field of type $typename$" text="private bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5f7ae75-e3ae-4f8c-bf4f-41934bcb4beb" shortcut="vc" description="A field of type $typename$" text="private char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb742e6c-b451-466f-a7be-8ea8585acd7d" shortcut="vf" description="A field of type $typename$" text="private float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06ed574d-3e87-4fff-8435-99ffa9b842d5" shortcut="vby" description="A field of type $typename$" text="private byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8ac528d-27b1-48e8-bc13-5be8bef740f8" shortcut="vd" description="A field of type $typename$" text="private double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8f79f4d-8528-4c0e-aa8a-985e90587979" shortcut="vi" description="A field of type $typename$" text="private int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a3c514f-1c6c-4d58-919a-cd32dc7675aa" shortcut="vm" description="A field of type $typename$" text="private decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7eaacf54-30e7-4705-b17c-2a295d52909e" shortcut="vs" description="A field of type $typename$" text="private string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0223892f-963b-41d9-9123-623c40c45b6f" shortcut="vl" description="A field of type $typename$" text="private long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87a049ff-43ca-4883-ab56-545cc470c22d" shortcut="vu" description="A field of type $typename$" text="private uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="122caae2-b429-4cdf-b59e-a48351bb99f9" shortcut="vg" description="A field of type $typename$" text="private System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae33fd4c-702c-4c34-bc90-35667fac254b" shortcut="vt" description="A field of type $typename$" text="private System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a6460a9-27f4-4904-abdb-6b5035f09c42" shortcut="vsb" description="A field of type $typename$" text="private System.Text.StringBuilder $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd0e3ca7-6abe-4cd5-bab1-9dd86075e834" shortcut="vl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt;" text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43a28666-b6eb-4f98-9017-aedcc342db4a" shortcut="vl.c" description="A field of type System.Collections.Generic.List&lt;char&gt;" text="private System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40a48936-a840-4eea-81fd-34ae9b04e0f9" shortcut="vl.f" description="A field of type System.Collections.Generic.List&lt;float&gt;" text="private System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e56fa9b-f94a-412a-98e8-3afa294e48f4" shortcut="vl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt;" text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a08f4147-c3f5-4d79-b26b-d1531f1f0570" shortcut="vl.d" description="A field of type System.Collections.Generic.List&lt;double&gt;" text="private System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c662bf94-7da8-4838-9339-2d274416a92f" shortcut="vl.i" description="A field of type System.Collections.Generic.List&lt;int&gt;" text="private System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6695b775-4268-4559-9963-24271f1ef6f9" shortcut="vl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt;" text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d438f394-1b05-4be4-a6cb-b90d8706941a" shortcut="vl.s" description="A field of type System.Collections.Generic.List&lt;string&gt;" text="private System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3bd296db-edee-4cf8-a382-38e655a2761d" shortcut="vl.l" description="A field of type System.Collections.Generic.List&lt;long&gt;" text="private System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13de09b5-67a8-4ac8-ba68-a8adc780bab0" shortcut="vl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt;" text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e12b61c1-f443-4495-b9c7-49cd01a38c07" shortcut="vl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="816915f0-3332-48d8-84d9-81b3a04501e9" shortcut="vl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26af8fd2-ed2a-4b32-976c-3d2312b946be" shortcut="vl.sb" description="A field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05ec251a-5dfe-4e41-9d3d-496cfd7d1cdc" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e34f847b-4e93-452c-aaea-e09e02fed061" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fa588ca-1cd4-4e32-8c99-8cce03a69905" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3e63310-f831-447a-9a4a-d86f687f7b3b" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6f3a830-462d-4792-afc8-03658a76d7c2" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c54b7d97-bb5c-4fe2-8a21-4ff33af92e32" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a05f63e-15b2-47c4-8bce-f487358cb03a" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="091664bb-746c-4ee8-b0f5-ee8a4c2c6c5f" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2da4b45c-82ce-4148-96ac-ebdd868cf03d" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c017bee3-0d6f-4c61-a184-a9fbe930275b" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6a800e0-4d0f-4f32-ba30-9e7fe8518355" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8e1922a-ccf5-44f1-82e9-07aa1eeb6a9d" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="758ce387-1c48-4f27-9d51-0f70e22eec09" shortcut="vh.sb" description="A field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="621499dc-4f40-4756-8763-103fbab33ac8" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10cef0da-54bd-46d5-b6f1-a9e957a58fb1" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="270d8ee8-0fae-40c0-aede-5ad27e1619a1" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aaaa4e5c-bcc0-4dd3-a2ce-da06f81dc3a1" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="610c31e4-395c-48d6-b70f-be223a5dde50" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d21a102-f704-467b-9442-e94d5bc1bfab" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="262eb05d-84d6-4572-83ee-207058084ec9" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc5afd85-7c61-4160-81e7-05cddddeb8c6" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e52f369-0661-4ce7-9af6-7774c8cf21cb" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="307014ed-d9fa-4eaf-bc08-8ac38f823734" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad8323b3-c8a6-4ba6-917c-01051771a7cd" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d51a746-8aa3-4f27-9401-ae641102d108" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b22bd7ad-8164-49cc-9f4e-05dfe11b2aa2" shortcut="v~sb" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19f99af9-a2c1-4bd6-975e-d07f707e5bad" shortcut="vrb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cfd31bc8-ad87-471a-8d8a-f6ed6a688b7b" shortcut="vrc" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98afe39b-7d01-4575-b343-3594e091c1f7" shortcut="vrf" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e87e774a-785e-4d37-a2e6-30e088af9f45" shortcut="vrby" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69b170d5-f842-4d14-9c67-45167be6f23d" shortcut="vrd" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22a4b42e-e8e5-49b1-95ed-492b14ff2aba" shortcut="vri" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b2063f1-34b4-41d7-b23c-266fa6802302" shortcut="vrm" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa194fe5-3fdb-490d-b47a-2d6b6de71034" shortcut="vrs" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4de49f34-694e-47a2-8a8b-02213fa8da3a" shortcut="vrl" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bffc5725-758b-4f97-9218-fc3d73e197f0" shortcut="vru" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d1df3d0-75a9-40f2-9752-f78501c411a7" shortcut="vrg" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3aca72e-6fea-49a8-bcb3-f282af9eba23" shortcut="vrt" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b89c9f5-924c-476c-b2bb-2afb1fbaf250" shortcut="vrsb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3ee9db1-7043-4b40-8b6e-1614ccfa4cb9" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbd43765-d144-40df-84f1-08e2d8f7ec60" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d8df7d9-9dac-4db9-ac4d-d73566a5dd46" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="afbeab9e-fbe9-4131-9e10-af08585a640f" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39992eda-73fe-4176-83fb-7418cf66caf6" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40547066-85dd-48a7-8902-5a6144614074" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32f0f78b-03a4-416a-9e64-39c4fd9e418d" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de44f006-6027-41e7-a961-f71ac4bc003d" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4dbe1ba6-da1e-4479-b554-a11db2d6568a" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b5267b8-2639-4a5b-a279-17847402da1e" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5935d467-dc61-420d-9c2e-a6d758f66aff" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1dd1ac9f-97fb-4e11-96a5-57ca073913d4" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="04ac3d96-ed7f-4ed7-b1f5-59f02d3bacd8" shortcut="vrl.sb" description="A readonly field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00b087c5-d6f8-4808-b8ac-aa301b8aa3bb" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3efbdc39-fa98-43f9-8904-88dfdc2d11a4" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9301b729-c277-43b7-85c3-2a85f9e6bb40" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9d42903-9346-4102-a473-a7d6fe5ccdb0" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10c36c0b-7f8e-4540-9cec-4dbb3e87eb5a" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="246f1051-5d1a-41f3-a63d-a8479e7418e5" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bff3dfb9-13bf-4b28-9d0e-ab99013d2872" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84024c9f-2a09-4c1e-9e42-46c94aa87e5a" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7b66014-3017-4075-802f-651fcaf46203" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e2cf515-6be9-445f-834c-33cb12de8766" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af773941-51c6-458d-bd54-4a663877a131" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b9700b8-49b2-46b0-a704-0a1c1d5097af" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a85f954-1247-4a82-8b55-d628388f6127" shortcut="vrh.sb" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e0d1972-6a76-4d8c-88e4-5d9a399985be" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b7076f9-b8be-436b-9945-8fd590c12a1e" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8af341ba-b237-4d1e-8a9c-bfa5a62680be" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4006181e-8561-4aa0-a77d-657672d54d03" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0562da3-d890-4ec0-908c-adae0eb093cd" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd7910c3-9454-470c-a760-d15e47392f52" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65728f56-1d22-4590-959e-17654099d08a" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5f30a81-1edd-4995-aecf-622b1f1d02ae" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96dfac61-4c28-4d51-8018-7f9e1a3d9ff9" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62be1e38-c092-406f-910d-28c216bb1aeb" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a9c063ce-ab69-4752-acd8-b0d1da0d48be" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5b8f214-8b1f-445c-8dc8-5daf51e4e9a5" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3abb208-9ad2-4e8f-87f4-7785c4371fc4" shortcut="vr~sb" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68ae6139-6e28-4986-8eeb-3ffe6c230a6f" shortcut="Vb" description="A static field of type $typename$" text="private static bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47441206-ac58-4a01-9505-bacc95068835" shortcut="Vc" description="A static field of type $typename$" text="private static char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="297ad7ad-3034-41bd-abbf-2739f1e0dbc7" shortcut="Vf" description="A static field of type $typename$" text="private static float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63b7dc00-dbd9-4bb4-8f0d-a2fb542eaaa3" shortcut="Vby" description="A static field of type $typename$" text="private static byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8a51267-47be-4ca4-afef-19fca7c56234" shortcut="Vd" description="A static field of type $typename$" text="private static double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c7ff26d-5738-428a-9088-39161ef51289" shortcut="Vi" description="A static field of type $typename$" text="private static int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="060ab342-ffc5-4153-a0f8-a3e8b26bf0cc" shortcut="Vm" description="A static field of type $typename$" text="private static decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81e7f1c2-5e29-4edd-8af7-dfba2686cdfc" shortcut="Vs" description="A static field of type $typename$" text="private static string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9886f03b-37fe-41ba-85bf-27edd405528c" shortcut="Vl" description="A static field of type $typename$" text="private static long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="799718bd-aec4-4a36-988b-d78bedce04aa" shortcut="Vu" description="A static field of type $typename$" text="private static uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="456d58a6-3fa3-48b4-bea9-4f18c0bea849" shortcut="Vg" description="A static field of type $typename$" text="private static System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b045d596-1be3-4e80-bfd8-cad2fc6fde39" shortcut="Vt" description="A static field of type $typename$" text="private static System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10bea462-f831-453d-8ec4-b772fc35ba16" shortcut="Vsb" description="A static field of type $typename$" text="private static System.Text.StringBuilder $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7fb3631a-9ebc-4ef5-9f65-55e63a71cd82" shortcut="Vl.b" description="A static field of type System.Collections.Generic.List&lt;bool&gt;" text="private static System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1094b431-8e7a-4d02-8f6a-854d8d143140" shortcut="Vl.c" description="A static field of type System.Collections.Generic.List&lt;char&gt;" text="private static System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="205fd081-89d5-4cfd-b2ac-6e2b264fb9d2" shortcut="Vl.f" description="A static field of type System.Collections.Generic.List&lt;float&gt;" text="private static System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff49c353-8687-4363-b6c9-1f42f21b9446" shortcut="Vl.by" description="A static field of type System.Collections.Generic.List&lt;byte&gt;" text="private static System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38a0e248-6b89-487c-808d-6775891e8926" shortcut="Vl.d" description="A static field of type System.Collections.Generic.List&lt;double&gt;" text="private static System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="880f4553-a2d0-4df2-b597-546fa3b4a47f" shortcut="Vl.i" description="A static field of type System.Collections.Generic.List&lt;int&gt;" text="private static System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c9ac8e1-063b-4217-b421-c2cc368dc381" shortcut="Vl.m" description="A static field of type System.Collections.Generic.List&lt;decimal&gt;" text="private static System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f72a1666-280a-404f-a39c-02301fbd2d28" shortcut="Vl.s" description="A static field of type System.Collections.Generic.List&lt;string&gt;" text="private static System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="778f7826-c1ea-4711-b85c-e92cec715c03" shortcut="Vl.l" description="A static field of type System.Collections.Generic.List&lt;long&gt;" text="private static System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="502a770a-7283-4d37-9cec-8dadef173c36" shortcut="Vl.u" description="A static field of type System.Collections.Generic.List&lt;uint&gt;" text="private static System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3443db89-2c2d-46ad-a1d5-7c26fd21fc20" shortcut="Vl.g" description="A static field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private static System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="61cdfac5-01fd-42dc-9ec2-8d0622f6a141" shortcut="Vl.t" description="A static field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private static System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e30709d-8529-4e1e-8d21-9ef69d27f91d" shortcut="Vl.sb" description="A static field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="377ad0f7-65a1-4702-a713-7402f50e1da1" shortcut="Vh.b" description="A static field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private static System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a65389a-d531-4735-be9a-230ffa1cfddc" shortcut="Vh.c" description="A static field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private static System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba01f9e4-0540-4283-bdd9-a4ab6a0f125d" shortcut="Vh.f" description="A static field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private static System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4786075-d885-4bd2-9c56-2ab2eda5053e" shortcut="Vh.by" description="A static field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private static System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="563f0fed-a90c-4d84-857d-41e958ffc147" shortcut="Vh.d" description="A static field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private static System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ecaf58b0-01b4-4e21-82a0-8d228f076f0e" shortcut="Vh.i" description="A static field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private static System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="575ab52d-49e0-477f-87e4-bab8ce5fb01b" shortcut="Vh.m" description="A static field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private static System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44b4a052-db56-4367-8aba-b7073d5b5db5" shortcut="Vh.s" description="A static field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private static System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9cfdb42-08b3-454d-837c-3385baae84e3" shortcut="Vh.l" description="A static field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private static System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a71c5713-51ad-4e1f-97e0-c0cd3fac2ce3" shortcut="Vh.u" description="A static field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private static System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="053b1be9-96db-4104-81e7-434557a83afa" shortcut="Vh.g" description="A static field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="090368fe-30f3-4596-9f03-8a7cb58a41aa" shortcut="Vh.t" description="A static field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95867d8b-5b3b-4a1a-9d4e-f8cf64f84c84" shortcut="Vh.sb" description="A static field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ae99af7-2994-478b-a403-279783f880f2" shortcut="V~b" description="A static field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private static System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="695d0cc7-be55-4231-81aa-6895b621f484" shortcut="V~c" description="A static field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private static System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b837fd5f-c266-41f1-9c7c-9d7febd1fa69" shortcut="V~f" description="A static field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private static System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf53206c-ce22-44ff-a541-07f0d4f96a1b" shortcut="V~by" description="A static field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private static System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0bdca2af-6c35-4e02-b254-123fc67d75f0" shortcut="V~d" description="A static field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private static System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f8b7484-e992-4b29-858f-9de00eb7b91e" shortcut="V~i" description="A static field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private static System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9209cea4-eae1-4bc5-bb37-3f2581c69864" shortcut="V~m" description="A static field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private static System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de98cacb-b41a-452d-a808-5755b1a44dbe" shortcut="V~s" description="A static field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private static System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57d2989a-cc71-4225-a5e8-9deb9b74f17f" shortcut="V~l" description="A static field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private static System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bae47b32-0e65-4f40-abe8-1acea66ef5ab" shortcut="V~u" description="A static field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private static System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="082385df-260f-4362-8ec1-eebd1575a14c" shortcut="V~g" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa6ccd54-ccfd-4f66-b65c-f5a8d819f70e" shortcut="V~t" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d91f2d7-274a-4c22-b239-6c9c565555d1" shortcut="V~sb" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec0a90cd-f31b-4f0e-bcd1-de610bd07ae8" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="private bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43327926-4f1c-4e73-b515-e4097c836c12" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="private char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30967cae-70c2-49b0-94ee-e481dad7bfe2" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="private float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="102f5b94-4e35-4dc6-b688-f0f71663ef2b" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="private byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebce8761-f635-4c94-8e3c-4b9f9deccaa8" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="private double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c50edba-180e-4da7-aa81-338fc95ef144" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="private int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3e1175f-4773-4a63-bbd5-99194156e59a" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="private decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44fc3e7d-e347-49b1-b648-127f628f2ed2" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="private string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ed5eabc-19e3-4b08-a055-eeeced335395" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="private long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0441349-300f-45ac-b746-f0860408ec7f" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="private uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18192e43-f2da-4468-8f16-169f56cf12ff" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="private System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2223e568-f64f-4d2d-82e7-bcb82f9172c4" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="private System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ace20c6c-5161-449f-b430-260063b66fc4" shortcut="nsb" description="A field of type $typename$ initialized to the default value." text="private System.Text.StringBuilder $fieldname$ = new System.Text.StringBuilder;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="420f2403-9d70-4796-8082-6255cf0e6e48" shortcut="nl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4af71672-f8be-477a-b83e-42a2349542e5" shortcut="nl.c" description="A field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb2955ae-a67e-4327-b0d5-07fd386c2e6e" shortcut="nl.f" description="A field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42c5e491-2823-49b7-b572-ba6f35aa5346" shortcut="nl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ecc8a08e-1cd2-4cd6-9069-905a810d1b28" shortcut="nl.d" description="A field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2492b55-cd88-4d39-9a0d-48b0117bcc3f" shortcut="nl.i" description="A field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb78f055-60e7-4f75-b1b2-31353fe9d17c" shortcut="nl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24b6a96b-bd18-4901-802a-168409818d12" shortcut="nl.s" description="A field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c55716fd-7bf2-4699-9902-fcf2aba71d02" shortcut="nl.l" description="A field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71717f07-6e9a-41b2-ad79-7d5bdba09ab6" shortcut="nl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3ddb21d-9680-404f-9492-f6ce0e94d278" shortcut="nl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5235862a-1a27-40ce-bfa4-feca74a72a82" shortcut="nl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c10b982-620d-4abf-ad96-77ba82da676e" shortcut="nl.sb" description="A field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25da6678-8ed1-4e35-8180-c26178ba363d" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c89a439-e387-403f-8ee9-0705999321c3" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1741bf4-616b-42f4-b27d-58050e14dad9" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1525cade-692b-4f3c-8b27-a25cc81ce01a" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3292776-3df4-476b-8b4e-6a5dadc6a548" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce36a2cc-c9e2-4665-9fbd-580b2fdd421f" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="123dd02e-0145-432b-bcd6-83b34df9f014" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f1a9479-b662-445c-943e-1a6c94582d7f" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6bd819c-b2ff-4707-a172-fd6a9cb4aa25" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b031085-d7b6-46c3-94ef-f03bb87ad40b" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2266c858-424e-4478-aa1e-4cb5720523fe" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1ac5256-3e4f-4d27-b0a8-0e3d1f2547af" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5708db1-1c90-49bb-89d1-42f6c252d076" shortcut="nh.sb" description="A field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4168f30-2278-4b47-ad10-e4423e556e4d" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f21fcf6-378d-4641-a494-462575a94c0b" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="255c9c9d-62b9-4730-9fe9-37a8bde89c8a" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63d11586-ee96-4351-9552-075207d67c28" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0dd2084a-501e-43da-9a91-b1497ba83b11" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edec41fe-92b6-4c37-884d-41326fd72219" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f848edfd-6a93-423d-9418-bf4686262bad" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b45d1c1-39ad-4edf-b7e1-8cafbf9bfc39" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ccbd1b92-42f4-439c-adaf-341033d94c70" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0847642-3a9b-4bb8-9903-c4ff6397aab7" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84ffb0ce-032b-41e6-bd3a-60f61bff4ae5" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f35b17a-2006-405c-95a4-414fc17a97d7" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="303a5582-ff55-4e8f-aa27-e62e2c845699" shortcut="n~sb" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20be7693-61ea-4eba-ba26-f017733a27a9" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="private readonly bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1235106-ef0e-4b32-a6a9-fe49b4f50e5a" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="private readonly char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05e0a2db-8285-450b-a255-0ebeb54f031c" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="private readonly float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4f7b4fe-3345-4be8-a2bb-659a12d1aaf7" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="private readonly byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65b24002-cc7e-47ac-ab13-79881109087a" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="private readonly double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c10bcd3-05e4-4c7f-9346-582465907d79" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="private readonly int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78a9769f-fa95-471a-9f1d-c3cc941cbb3f" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="private readonly decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="241be1a4-0ace-43f7-9a0d-457ecafa16ea" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="private readonly string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a7c4f8c-aae6-409c-a643-f2f2b28dc8a8" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="private readonly long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a60f45e-53f7-47a2-aeac-66b268edc56f" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="private readonly uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b22d1cf3-ad82-4b1e-946c-dc19b0261216" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bad343a1-b6fb-4b34-b1a7-68de5a3a7fe3" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e394d1a-5366-460a-9174-9c2c3abcb85a" shortcut="osb" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Text.StringBuilder $fieldname$ = new System.Text.StringBuilder;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a010fdb5-a2a6-4b8b-bcec-1489fd24c9d7" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e66a2a6-8c6a-4cfe-ad73-4f699328570f" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10884278-bfb6-466e-b178-acb79e7a81ba" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c14af75d-0b42-4cfb-beda-c345b37e007f" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d35554c3-1252-4418-b194-55aeb04ec8dd" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35e44bcd-7263-4fba-8619-9c617f11b70c" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="129d08cf-2654-4ca5-98d2-b3ede99eae50" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12016ad3-f463-42ab-8e40-cfde136af805" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c889c29-66a3-475a-ac64-4614fa6eebad" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a7f249a-94eb-47e6-aa82-1d0494700ccf" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="586aed3b-e492-4ae5-bd46-d0c23f30b95c" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e567e39-1973-4a64-99a4-f80e95ead66f" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b644917-a345-45bd-b475-fa296b0d8e5f" shortcut="ol.sb" description="A readonly field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47f969ac-569f-4a7b-b435-e4ea8eb7cc0f" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62831888-0241-4958-843f-d929d8848f82" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0405e8ce-b2c0-4aab-95d5-95c8675127a6" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c65d7c0b-aeee-45dc-94cf-b2bdaf5400f3" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1826bbb7-aca5-4081-a8b7-cb91919d8250" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93252a55-0598-43ad-9b9a-115be57e99ad" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b840d54-a851-43ed-92ea-384ed04211c4" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df7634d4-4ceb-443e-a509-64b341096f11" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cc37531-0135-4142-83e4-36296f05c2ae" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b33c4fb1-d94c-4092-82fd-bddac1b8b8a5" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="253c87c8-0ced-4b1e-891a-36ff6be2d69e" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b3d1505-8ece-452a-a183-994abb30f6a6" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a19c2ecc-a6c7-40b7-ab77-768620bab837" shortcut="oh.sb" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12af4090-2f10-4b7f-baba-c6b9a1452cb3" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0fdb2a01-5864-4cc8-beda-ec0c445df302" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57383067-7f11-4adc-8ded-370900dc8841" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d278f167-1468-4af8-baa3-141b00da737b" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e01dd74c-27db-4599-8048-8edafdd93928" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db186aa5-802f-4b95-83db-049df3ca857f" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d10775f-2709-4591-b786-65bc0af6ecdc" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ada5d62-f6e4-49bb-b29c-e1ffe866fafa" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f22d5fd2-750f-4af8-ad63-ced6ba468572" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40c09ff1-0526-4f0a-8fd4-9ed206bc0f0d" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="175f30a4-8f61-4e7a-9202-be1a79cc350d" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a1a90f5-ecc4-41d1-a23b-3f32becf6a2c" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d6ab93f-e02f-4ac2-9e1a-c58144821350" shortcut="o~sb" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5b364c5-06d5-4942-ad08-8717648cf37b" shortcut="tb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90d4fd51-bfb2-4c3f-a357-5dc4e15d413f" shortcut="tc" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="011b4177-4581-452f-8f14-a7ca819515e6" shortcut="tf" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e604074d-efa1-4019-be99-32ab10953b4c" shortcut="tby" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6c1069c-9a8b-44ec-ab05-2109a51fbd8a" shortcut="td" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60e6066d-b52d-4957-ad5f-ed429e863895" shortcut="ti" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c4c8194-f600-4991-a29c-7ff6d99bf60d" shortcut="tm" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c30e8ba8-d27b-4125-8fce-1c3995a6fdfa" shortcut="ts" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa78d437-453d-4c14-ac7a-d0b2477a6057" shortcut="tl" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2d25472-29a5-4d1b-9a71-eb2234f002bd" shortcut="tu" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82ef830d-4663-41e4-85d9-7d6c821d4c65" shortcut="tg" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ace9551c-b97f-412e-9089-b87335a7529f" shortcut="tt" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51206e06-2ad3-4ea6-88a8-1889e242a3a8" shortcut="tsb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e11e8c8-1a16-4a04-be1d-6eec0737ca6e" shortcut="tl.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9b04e9b-1a4f-4e32-841d-eb9d150d21bb" shortcut="tl.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9093b53-b0f4-4b05-8551-6ed9ecb1c6c6" shortcut="tl.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a47d3de-ae26-4ac9-a8f7-f22819036d4d" shortcut="tl.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5118cac-020c-44d7-9d6b-5407398d2c61" shortcut="tl.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15ab3e9c-d701-48fd-8359-b9e15278a64d" shortcut="tl.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df669f33-fc52-43b1-87a8-827faaf50ad7" shortcut="tl.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93716b8b-a3de-4211-8c72-559396f71575" shortcut="tl.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10be7888-1832-478b-baa7-c44f381385a3" shortcut="tl.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0098736-59cf-49ed-a9b7-6974d7ae1cbf" shortcut="tl.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e084046-a48e-4030-8c4e-31f588b53ab1" shortcut="tl.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd9f5d4e-85fc-43f0-bf79-d31ed396aea5" shortcut="tl.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33ee55f1-8cd8-45ec-b504-7019f2e5d1f3" shortcut="tl.sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1eebefd9-2ad3-4fda-b64d-1c8924d1173a" shortcut="th.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7c7efc0-c4fd-44b0-9bb2-5d3311f3a67f" shortcut="th.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13932418-5288-4310-a286-4b35e5e70df2" shortcut="th.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5201f2b-ff46-4819-93a5-187d6d9e7099" shortcut="th.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92cc0c01-84c1-41cd-a549-91eb5d211df8" shortcut="th.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5c176a4-f747-422a-9faa-3afb48ace9a0" shortcut="th.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d7f276e-8727-41f8-b30a-73eedeac8ef9" shortcut="th.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e84b873-d7a1-47ac-a0fb-28fa33db39a9" shortcut="th.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67b3c03b-35a7-4821-982d-e170b8b6041f" shortcut="th.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2be74c86-dd78-43fb-813b-b8579e6e1c86" shortcut="th.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="063c26dd-a577-47b3-99a3-e3f568c84bc4" shortcut="th.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5d6ceb1-7c80-400b-913d-92e64dc23f7e" shortcut="th.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="212376f7-ca4c-4bfb-8c84-178b8ca19d27" shortcut="th.sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7c39993-3268-47e3-bd30-08d87aa5937a" shortcut="t~b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e903280-c702-43d9-b120-b83a707cb3cb" shortcut="t~c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c46c10a-5a01-4723-b25f-a9d1176ad571" shortcut="t~f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9195f7ec-35cf-4127-b183-5bbd76f2b3a2" shortcut="t~by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d4853e5-2d5c-49aa-9324-2255306179c7" shortcut="t~d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="272f244d-4854-4d71-a709-32ef4c01ca46" shortcut="t~i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="308c768b-5ed1-4f2f-9414-18f4d2e9398c" shortcut="t~m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0910f9b4-512d-4e6a-8cf9-1d448dcb5d05" shortcut="t~s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66889ab4-4f2e-49e6-984d-0297abf92129" shortcut="t~l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06512958-5d0b-44d3-91c3-1b312a2adb06" shortcut="t~u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ec9a045-6221-4aa7-8325-3047574fd4f3" shortcut="t~g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eec00d8e-3a87-46fe-b9ed-19f4358bb4d2" shortcut="t~t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f126c04c-ff9f-435a-b611-ef7eecca1584" shortcut="t~sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="503ba7ae-9c08-4947-a43c-b6bb03a9552e" shortcut="m" description="A method that returns a(n) $typename$" text="public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e7b8d86-e38c-4ab1-b222-d3ef80bc955b" shortcut="mb" description="A method that returns a(n) $typename$" text="public bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35e80e83-a4b3-4601-afa3-b86609911139" shortcut="mc" description="A method that returns a(n) $typename$" text="public char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b46d2b2-69ff-413c-ab0c-ec68c6e91ec0" shortcut="mf" description="A method that returns a(n) $typename$" text="public float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f27febda-346d-449d-89bb-929a34ea89ba" shortcut="mby" description="A method that returns a(n) $typename$" text="public byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="993992a9-b410-45b3-901d-19057db5de00" shortcut="md" description="A method that returns a(n) $typename$" text="public double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="253c8ec5-e4ab-4290-af7b-29dd132ad59b" shortcut="mi" description="A method that returns a(n) $typename$" text="public int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a11873a8-2275-4091-bcb6-841f183e3c04" shortcut="mm" description="A method that returns a(n) $typename$" text="public decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e951b36a-414d-49e6-8066-2c7300e4a3e6" shortcut="ms" description="A method that returns a(n) $typename$" text="public string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="958a6931-9be6-4bda-a836-8114341af0eb" shortcut="ml" description="A method that returns a(n) $typename$" text="public long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3bc1c4a1-236f-40b2-ab6f-211597b02733" shortcut="mu" description="A method that returns a(n) $typename$" text="public uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0281ed7b-fd94-4d5a-a715-9e79c4550e82" shortcut="mg" description="A method that returns a(n) $typename$" text="public System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="82de4b65-41b3-4409-bfbd-0eaa5562bbac" shortcut="mt" description="A method that returns a(n) $typename$" text="public System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d889dc37-d440-4ead-b9ec-aa0791ac374e" shortcut="msb" description="A method that returns a(n) $typename$" text="public System.Text.StringBuilder $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ab30257-1427-4b4f-aeda-1186fd08b6b6" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8265efd-463e-4a2a-8bf6-190686f2594a" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea2b84ff-49ec-45a7-aa33-4a030023a69f" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99cfac64-eb50-49ac-a112-4dd5379051da" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91891cd8-517f-455d-bd13-54ee2eeb5975" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e77b6922-81e3-428f-8cd2-cb6b40e27046" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3591cfe7-0591-4bd8-bbf3-d9cc24322f0d" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="238eeac8-5ca0-4f8a-a423-1fa290502a03" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b83335b2-f9e1-47d7-890c-2e1f50d16348" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1cb8caee-ac03-4298-9b43-20b4712b34f0" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5264b1d5-8ee4-4824-b887-1e034c318817" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="500118ee-29b7-4a71-a96f-643e04964067" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1eea0e5c-5be6-4841-b87c-06baa77d98cc" shortcut="ml.sb" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1315727c-4670-4913-b480-19c41ffad844" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92b6d9bd-2e5b-41ab-9d6b-034574063b1c" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb2ab0e8-f1de-45b7-9747-c14fcaf8cd5f" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="112830af-d49d-4be3-8274-f15adf9decdb" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59f6f25b-523d-457e-821f-12dface134af" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7834efde-5f93-48d5-a060-5a715511bb6c" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5a21435-2272-4f2e-bcd7-c1c166de9926" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a542b048-c99f-459f-b08e-a856a58c4bfb" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13c81b33-332e-491c-a4b7-a3f55456b1ea" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cb0397a-924a-43a9-95be-573ea244a1b5" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3e1b399-ca9f-4be6-8f1b-8de9de4c980a" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12446a7b-c651-4a66-a821-5bddab596063" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8068c006-ea60-48f2-a36f-f6dcf98ababf" shortcut="mh.sb" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="460a50e2-c1a5-4c2f-a073-ba3758649bc2" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fe846df-a812-4885-9b22-2a2e2d67fb7d" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a81887ac-5df6-4036-ad9d-d7a01438bfc2" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="238fa265-f192-4fc1-b6fd-4351d3776033" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32f2f606-83a8-47a2-ab91-3b040e7564d8" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7707d716-04ab-4b97-91b0-7822eedd4af2" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70eca419-2694-42d6-a0db-07791c251c1e" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31e7a748-d3db-45c2-be79-a434cfdee681" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5a8832a-edc3-459b-b97f-1f73bff14612" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5f7b3e9-7db0-4644-b439-b3416ba3b1e1" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06ba2589-1ee8-4126-a0b1-139532fa82d9" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81610157-cc09-4ddc-ac76-9c78ba2b98a1" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0389b9e-eebc-4c7d-8674-c2c24288fab5" shortcut="m~sb" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="179a5f0d-ef72-4509-8288-c44a03c1f30b" shortcut="M" description="A static method that returns a(n) $typename$" text="public static void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bcf640cd-d55d-44ef-8f67-fdfb80e96942" shortcut="Mb" description="A static method that returns a(n) $typename$" text="public static bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a6e71c1-98ea-4b3b-8568-213c6bb01def" shortcut="Mc" description="A static method that returns a(n) $typename$" text="public static char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19918b52-2c40-4933-b2e4-5de7531dc426" shortcut="Mf" description="A static method that returns a(n) $typename$" text="public static float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aab5f414-d345-44ce-a184-ead8c9dfb5db" shortcut="Mby" description="A static method that returns a(n) $typename$" text="public static byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b594e4e-25d1-4f87-b4cc-a6ba5f9b1cd4" shortcut="Md" description="A static method that returns a(n) $typename$" text="public static double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06b3e4f8-1981-4586-b99c-954fc8d3b6ca" shortcut="Mi" description="A static method that returns a(n) $typename$" text="public static int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ede17031-0120-4e99-a726-8c5ac336c9cb" shortcut="Mm" description="A static method that returns a(n) $typename$" text="public static decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f0c55de-d599-4690-9ad0-0cbfad17c8bc" shortcut="Ms" description="A static method that returns a(n) $typename$" text="public static string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="877bf99e-df94-4aea-8fc5-aef770e8a56c" shortcut="Ml" description="A static method that returns a(n) $typename$" text="public static long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="490d5549-be38-41e6-8ba1-65fbe0db1b98" shortcut="Mu" description="A static method that returns a(n) $typename$" text="public static uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="153babec-9c12-4b5c-83d9-32fddb917fab" shortcut="Mg" description="A static method that returns a(n) $typename$" text="public static System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b5d32bf-4700-45c7-8011-d13ffc8358ea" shortcut="Mt" description="A static method that returns a(n) $typename$" text="public static System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44c0a39d-92d0-408c-bf2f-3e2e09fd91b0" shortcut="Msb" description="A static method that returns a(n) $typename$" text="public static System.Text.StringBuilder $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f3e0156-0f6f-463e-a699-fbb984673958" shortcut="Ml.b" description="A static method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public static System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6d5f40b-3d6f-4843-8d53-5639b8dae1a3" shortcut="Ml.c" description="A static method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public static System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a6bc80c-2562-42d6-9668-bc3224c620e8" shortcut="Ml.f" description="A static method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public static System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a1cf37d-891a-415a-a060-ee508a1f0f9c" shortcut="Ml.by" description="A static method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public static System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14b94872-11cf-40b1-8891-e3b0e9b3e827" shortcut="Ml.d" description="A static method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public static System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a87db1e-5c6e-414d-a5a9-bbd680f433f3" shortcut="Ml.i" description="A static method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public static System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68e4e260-1e96-46e4-ac55-5b584175701b" shortcut="Ml.m" description="A static method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public static System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39f2c981-6c8a-42bb-86bb-012995e9f1dc" shortcut="Ml.s" description="A static method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public static System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a1e1842-9ef6-4d94-ac3f-5cea3ebf514b" shortcut="Ml.l" description="A static method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public static System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0ea77f2-a3e3-4b52-8604-24d4715e9dea" shortcut="Ml.u" description="A static method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public static System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad23cc18-a528-4da8-acfa-462159280107" shortcut="Ml.g" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public static System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="249273a5-8817-4fc1-b30f-b21abc6cf848" shortcut="Ml.t" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public static System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bbc97435-8f98-41bc-8d7f-9f48bc2ba4a2" shortcut="Ml.sb" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8461243a-63d2-41a5-b24c-7ef13823af92" shortcut="Mh.b" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public static System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="546d5ae1-7108-43dc-8b8a-30a91e7a4baa" shortcut="Mh.c" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public static System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="700b2522-ab8e-4910-a81e-a00f704172c9" shortcut="Mh.f" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public static System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f4026e6-4a23-4b00-9dc6-3b524dd6813c" shortcut="Mh.by" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public static System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c2712bb-1b90-4ab5-a37d-e1d170d1f7ee" shortcut="Mh.d" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public static System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d93e556-9edf-41b6-bd7f-5618435dcd89" shortcut="Mh.i" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public static System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f4d7c3e-b7e5-4b32-80c5-e26d5591fc1b" shortcut="Mh.m" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public static System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72203eca-2b7d-4187-9aba-4b1ed00893bf" shortcut="Mh.s" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public static System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6f90a63-7375-4322-8dc2-05cad97ae859" shortcut="Mh.l" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public static System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f2c4312-a162-45f4-812d-d73caacf64d5" shortcut="Mh.u" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public static System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3dc1f499-9d56-49c5-a418-3e868ed49262" shortcut="Mh.g" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a0eac96-8e98-41ad-a5e8-fb6ad4850d9d" shortcut="Mh.t" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19b9d456-3939-44e4-8c14-6a7b7d873192" shortcut="Mh.sb" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4598197-59d8-4373-8fe5-d57e333db2c2" shortcut="M~b" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public static System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98c74384-fd71-4f27-a513-e24223b12164" shortcut="M~c" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public static System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19fd0e6e-51fd-4b9a-ad94-7a221b17e456" shortcut="M~f" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public static System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30244a01-e628-469a-bb7e-248fb285d068" shortcut="M~by" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public static System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c385351f-6207-4534-9a3e-00724be6934a" shortcut="M~d" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public static System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a84d4e5-6ad0-4e12-bd9c-0ec3b8d4299c" shortcut="M~i" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public static System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21b1f621-6b92-49ce-ab2b-19e3a8784935" shortcut="M~m" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public static System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="61057f49-d8db-47c2-8a85-cc47640216b0" shortcut="M~s" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public static System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0f93f4f-0562-45a3-9d86-3c36130f1f47" shortcut="M~l" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public static System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11969cf6-c93f-466a-85fc-abdfc7b9176f" shortcut="M~u" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public static System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92e542e3-5fc1-4aa6-aed5-5c7c1960752f" shortcut="M~g" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9fbea6b-23e3-484d-a17d-3d3462a08641" shortcut="M~t" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ed83f8c-7582-4fc1-b3d5-4bf6a130499a" shortcut="M~sb" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7a27bff-1539-40c5-b092-1a54be463b1e" shortcut="pb" description="An automatic property of type $typename$" text="public bool $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c871c0a1-fc4c-481f-85a7-c6f79e1441a5" shortcut="pc" description="An automatic property of type $typename$" text="public char $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0ad4fe0-53d0-4af1-bc66-8a7cb7162ae8" shortcut="pf" description="An automatic property of type $typename$" text="public float $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c384bdc-ab69-473a-9ebe-00244a760231" shortcut="pby" description="An automatic property of type $typename$" text="public byte $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e4daa4e-c748-4de1-973a-56effe642644" shortcut="pd" description="An automatic property of type $typename$" text="public double $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cdbd69fe-5532-42a3-99fb-040fd0e8ee17" shortcut="pi" description="An automatic property of type $typename$" text="public int $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6010f860-edfb-4663-9bb6-315b52118891" shortcut="pm" description="An automatic property of type $typename$" text="public decimal $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6aab8ef5-69d0-4273-8c4c-87f0b12d0f7f" shortcut="ps" description="An automatic property of type $typename$" text="public string $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d222f61a-1ef5-43bd-8f7c-6f1e73e26054" shortcut="pl" description="An automatic property of type $typename$" text="public long $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="beda8220-afe3-4cc4-ba9d-745b524a6204" shortcut="pu" description="An automatic property of type $typename$" text="public uint $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3772e21b-c59d-418a-a33e-4288eab319a7" shortcut="pg" description="An automatic property of type $typename$" text="public System.Guid $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0931d949-c41c-499f-830c-c8128331ed4b" shortcut="pt" description="An automatic property of type $typename$" text="public System.DateTime $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ffe821c4-9445-4c63-a48d-da67f3581a4a" shortcut="psb" description="An automatic property of type $typename$" text="public System.Text.StringBuilder $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="642aa689-320c-4d38-b2e4-607792e52c73" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="449e389b-4e09-45d9-8340-8aec62dd34ad" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f747d9b-10a7-4ba0-8702-4a94e2396ffc" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0279655a-21f4-438c-bbc3-848eee1a8d00" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ab6f56c-8485-4df0-aa63-501aadd5f671" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8b44125-c9f1-484c-8f05-0cd6f0effe4a" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="542f0751-6057-4815-8a13-df3322b03113" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="141b88ff-bab3-45ee-80c5-19fbbf3b8af4" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c9846c4-2d0a-4152-9a45-8b65a3825382" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2a4278e-16f4-4b4c-9f17-d4064d3f91cb" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a9587c81-e0cb-4b02-859a-a6ceae777877" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e56b97a-1cf3-4747-9775-aacef7c8ac4a" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="893aebb2-4483-4c83-a84d-3ad045d5f802" shortcut="pl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c5327f4-b56f-40ea-8b24-47ea1e8077b8" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa7db94a-654d-4a63-8503-30e2f7b6f008" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="929fe828-d2ff-4a57-b2f6-93dece699afe" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa30ae3b-216f-44df-8372-7626285eaf8a" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6bb24ac4-ca60-4711-b080-51bd77c5862d" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca501bf7-8945-4307-83a7-6c7e5fc1c4b5" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8bf79d6-df2e-4fa2-b984-64ac455e4563" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d78d192-0185-403b-a23c-516db97ca31f" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d32f421f-9489-474f-ac86-c41f049caaca" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fcdc9622-44fb-4371-98b7-7aa9d007b348" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4749331-17bf-48d8-a500-9e2dd584bbb8" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33845e49-ca1d-406a-af35-e7f62fdc4710" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5846602-f89b-479c-8f2a-f25bb7fa4e4f" shortcut="ph.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a1d46ff-ba0e-4cdf-a7bc-95ce5f0bdd84" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c51dd29a-55a7-4716-88eb-7021b7a9e603" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ace9eb0-b67d-446b-8f47-e59252694023" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be0a307c-42e6-4e80-9aff-24a916c8f3d3" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57ed279a-f7eb-40a3-8af3-c72959a39d9f" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb73adb5-fba0-42d0-b691-7dcab01eb1ee" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52dd5298-8857-4c48-9239-c07c3c526acb" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a00645d-e8ed-4e1f-8d1f-0d42e4ec5b5f" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2bad6e1-098c-43ea-9d2e-1a62473a09ba" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="073fbce7-efac-473b-a75f-2005f0442084" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7bd26b1-b16d-4f7d-8237-c64dfc46b121" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0304a28b-e0b0-4a41-858f-10123e7fa67b" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0faee944-2a27-4656-887b-c157a6fe4286" shortcut="p~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5e61c01-231b-40b5-b0ae-114df93c231c" shortcut="prb" description="An automatic property of type $typename$ with a private setter" text="public bool $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b24dc0c-613b-41b3-bb99-a52d1a4d344b" shortcut="prc" description="An automatic property of type $typename$ with a private setter" text="public char $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37da187b-a97b-4431-b1b5-02f6fb526602" shortcut="prf" description="An automatic property of type $typename$ with a private setter" text="public float $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="205ea455-7da2-4478-b049-f778d00ffff1" shortcut="prby" description="An automatic property of type $typename$ with a private setter" text="public byte $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47fdfcc7-fdc4-43f2-ae31-7544cd76e848" shortcut="prd" description="An automatic property of type $typename$ with a private setter" text="public double $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79916d6a-4674-4005-9c76-e90bacce1f42" shortcut="pri" description="An automatic property of type $typename$ with a private setter" text="public int $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1da7f1d3-9961-4ecc-a528-f6ef4f81e5bf" shortcut="prm" description="An automatic property of type $typename$ with a private setter" text="public decimal $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e8bfbf5-9484-422c-b6db-0bdbaf2014be" shortcut="prs" description="An automatic property of type $typename$ with a private setter" text="public string $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abf0d81f-9556-45a3-87af-7b98adcf5d5f" shortcut="prl" description="An automatic property of type $typename$ with a private setter" text="public long $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba39545d-f45f-44ba-a0d8-2ee584992c08" shortcut="pru" description="An automatic property of type $typename$ with a private setter" text="public uint $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fbe048bb-71e6-4c17-9791-4a90c045019f" shortcut="prg" description="An automatic property of type $typename$ with a private setter" text="public System.Guid $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9d057f3-37b0-4fb7-964a-a6cb05011174" shortcut="prt" description="An automatic property of type $typename$ with a private setter" text="public System.DateTime $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8dea3bd5-69c2-413e-8f91-f1036e4efd38" shortcut="prsb" description="An automatic property of type $typename$ with a private setter" text="public System.Text.StringBuilder $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2768b2d2-134e-4b97-889e-e80194081810" shortcut="prl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with a private setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c21037e1-8c79-45e6-86f9-c69be9f4e188" shortcut="prl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with a private setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bce505d4-717e-4dac-9133-b9f4fb796613" shortcut="prl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with a private setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a56bf1a9-ee5e-4238-a62b-194413d79192" shortcut="prl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with a private setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21155164-7e52-49d2-80fd-2c12b6fe993a" shortcut="prl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with a private setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07c9d9ae-a3a2-41e6-9c87-4a132705c2de" shortcut="prl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with a private setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="355c07ef-25f7-4847-ae8f-2c74e34c5bca" shortcut="prl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b36632b-e236-4dac-beb5-e5d9297e9e27" shortcut="prl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with a private setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5942f6c-711c-4986-90f3-d049301f2071" shortcut="prl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with a private setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1e55d11-c44c-431b-afc0-1eb5f2f2e90b" shortcut="prl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with a private setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a51bfd6-7b84-430c-b6aa-ebf8f15a7d67" shortcut="prl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c95d377-7063-4c5f-965e-66c93d8dea39" shortcut="prl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f89cd0d-2054-43ff-b503-b3d5d6b7783d" shortcut="prl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e077dc28-1eb5-4d5a-97b6-8a347e16aa84" shortcut="prh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0656d55d-1521-48a1-af37-d3f2ce175b28" shortcut="prh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c69cd47-5ae4-4fbb-bd59-c4b4b492fc1b" shortcut="prh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8e1b2d3-474f-4422-ab5c-9b2aaad7d087" shortcut="prh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41c96c55-dad1-45d0-a051-054fa6483efc" shortcut="prh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36751e7e-e5d0-4b48-b22b-ff1d0565071f" shortcut="prh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a7d3a38-b4dd-4691-a99a-6b72c37bbd51" shortcut="prh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad3c2271-2c78-43c8-aa6f-2798ac81ed37" shortcut="prh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c4f904c-c3b2-4e19-8cd6-f516e7519f93" shortcut="prh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3990cd6d-d8d8-4d28-bdf5-8d48f5678069" shortcut="prh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75b1771f-ba34-48da-bfce-b60d9e7bf192" shortcut="prh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc546599-eb8d-481c-8e7e-ab421db27497" shortcut="prh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1116b8bf-2fc5-4813-905b-c51a85e5bd1f" shortcut="prh.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1f9cc97-21fb-4d8b-b5bd-473425db0aa9" shortcut="pr~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11587f17-6af9-42c1-9722-9714fbb5edb6" shortcut="pr~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c473fbf-73ea-4c74-8d5a-f81b674409b8" shortcut="pr~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="113227be-69fd-49ce-88ca-6bc2f5718072" shortcut="pr~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44f830f1-255a-4a8c-af65-01a7c15de7c4" shortcut="pr~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa0adf37-c6df-49ca-a17b-43cb3ec5fcf9" shortcut="pr~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aaaf5b3d-d10a-4a54-9a5c-b61a103fad17" shortcut="pr~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c19ea52-4948-4380-8f38-d69f20485a5d" shortcut="pr~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14c53a35-6dd7-492a-82f5-59271a0dec9c" shortcut="pr~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c46a3096-959c-42d4-b9e5-b685db435782" shortcut="pr~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c81340c1-47af-4b9e-875d-a794d5a3ebbb" shortcut="pr~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47339681-fee5-43ab-b14c-75c7ca73df62" shortcut="pr~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae62e465-c2c8-45d8-9a11-fc8a8b09226d" shortcut="pr~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b672afd7-5dd4-42f3-af0f-00dcfbf7fbf0" shortcut="pgb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public bool $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b392c18-10c0-41a8-affa-7988615a2bd9" shortcut="pgc" description="An automatic property of type $typename$ with an empty getter and no setter" text="public char $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="330d4646-d4db-4a99-a4f4-77ca981e0315" shortcut="pgf" description="An automatic property of type $typename$ with an empty getter and no setter" text="public float $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0378a93-6bfa-4f3e-b9a1-61adb0ced568" shortcut="pgby" description="An automatic property of type $typename$ with an empty getter and no setter" text="public byte $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2d7c62f-81f6-449c-bcc7-38e2bc815a57" shortcut="pgd" description="An automatic property of type $typename$ with an empty getter and no setter" text="public double $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae50deca-4319-4864-b680-87736bbbcec2" shortcut="pgi" description="An automatic property of type $typename$ with an empty getter and no setter" text="public int $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e9e7d69-b9b6-4d96-919b-64e48e1094c4" shortcut="pgm" description="An automatic property of type $typename$ with an empty getter and no setter" text="public decimal $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6df63e4-8416-4f07-a2f4-0acdeb30be6a" shortcut="pgs" description="An automatic property of type $typename$ with an empty getter and no setter" text="public string $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4aefe7b-9142-4114-812c-bcc0c9c0ab19" shortcut="pgl" description="An automatic property of type $typename$ with an empty getter and no setter" text="public long $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d31859cd-b26e-40b2-a49e-50f9d23f9610" shortcut="pgu" description="An automatic property of type $typename$ with an empty getter and no setter" text="public uint $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9638df22-ef6d-4b71-a780-71a3679562c4" shortcut="pgg" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Guid $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01cdb736-5d0c-42b5-bf58-2bd28b3edf02" shortcut="pgt" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.DateTime $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d5492df-1e7a-46ef-ab61-99adf69106a2" shortcut="pgsb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Text.StringBuilder $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="041afbf4-86d5-4009-ab2b-4a1a3828efc4" shortcut="pgl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2806601b-2fc1-4cfe-9e32-5b7a8da0c38e" shortcut="pgl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fee498ba-8200-4782-a514-89abe8add9d2" shortcut="pgl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="066dba33-f8df-4625-9521-98e14008e1c3" shortcut="pgl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35f9124e-1d7b-4fa7-8ecf-31b57d5e92b2" shortcut="pgl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7bd02602-52e8-4526-bdf1-021f63059b0a" shortcut="pgl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed485293-b188-420e-9983-c38888f9d250" shortcut="pgl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e5d5aa9-13f8-4da6-90fc-b6f428b80a79" shortcut="pgl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a79b750-0373-4dee-863f-b460da0bb4a6" shortcut="pgl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c14c143-c545-42e2-a256-8980c8a6a9e6" shortcut="pgl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ff850d9-ae4e-46ee-997a-4860abf52e1e" shortcut="pgl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5fa2f19f-63a8-453a-8c12-b22b01d8fc13" shortcut="pgl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="caec01a7-f557-440f-9154-7789379d2684" shortcut="pgl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa06858d-4c69-463f-a6fa-3cf057f13cf4" shortcut="pgh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f555d92d-b808-4b21-ae6e-7e88c125b3c4" shortcut="pgh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1de22e7d-e304-4b3e-8808-04be48698ca6" shortcut="pgh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0ecd117-24f8-445f-a78a-dea43d2e94a3" shortcut="pgh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d64579b8-7414-4249-87b5-b4c5b0d3c326" shortcut="pgh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b50a47b9-6573-4cf9-b2f4-0b0bb614149f" shortcut="pgh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b77eb23-8d62-465c-b3f4-dec5e6c5c47f" shortcut="pgh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a01d0945-6588-4aa6-9ddf-66eb53e7710f" shortcut="pgh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3e05c69-9759-4fb0-8676-542e4d02eaf6" shortcut="pgh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="737195a7-ca03-424a-9291-53690eec29d2" shortcut="pgh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7eff90dd-170c-4143-9bad-724bd691e92d" shortcut="pgh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0476a98e-6539-46aa-983c-0276bc81a166" shortcut="pgh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6a55902-3390-4b8b-b839-0607b4b96c12" shortcut="pgh.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ed3d27b-a6fa-44fa-a9f3-d305ab6b5273" shortcut="pg~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a668ec9d-07f5-4ed7-b28e-166ba5c873a1" shortcut="pg~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1baf3f4-77d9-436d-b21c-2ed51707c541" shortcut="pg~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d0b4f81-3544-4f50-86df-6777adcb07c2" shortcut="pg~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df70be37-8a2c-4ee9-9d3e-58d622be4fbd" shortcut="pg~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="662af00d-d162-4c3a-a190-d1c5a0cc7c5b" shortcut="pg~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="499edbe4-ef5f-482e-aceb-9508bbe8fb78" shortcut="pg~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93f727de-3fdf-4ccc-9450-b1034e3684e7" shortcut="pg~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1050ad35-4478-450d-8802-e6b8ae4296c7" shortcut="pg~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98fb8c91-6ffb-4516-b815-cd2d62b6091f" shortcut="pg~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5acfa01e-6f94-4e2a-a498-5b0b9538743c" shortcut="pg~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd35f5e1-1949-4644-9fc4-63ea005721ee" shortcut="pg~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc38ace6-594f-4548-9900-f37866049e9d" shortcut="pg~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a0ac96f-58ce-4d18-8faf-cc9275cbeba7" shortcut="vb" description="A field of type $typename$" text="Private $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a1abc67-f49c-4625-a8ae-1bf83828dabf" shortcut="vc" description="A field of type $typename$" text="Private $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="200bd6fd-dc9a-442c-910f-cdeeabd9226f" shortcut="vf" description="A field of type $typename$" text="Private $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7168df14-9863-497c-9de9-353371c0d489" shortcut="vby" description="A field of type $typename$" text="Private $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="395e4c99-64a0-4842-9125-dee0080f5be7" shortcut="vd" description="A field of type $typename$" text="Private $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6107c31d-f583-412e-8779-651922e0716b" shortcut="vi" description="A field of type $typename$" text="Private $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="631e76e5-b1d5-4ba4-b73f-e133f26f9f61" shortcut="vm" description="A field of type $typename$" text="Private $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="570ae51a-c316-4c8d-af7b-b2f243f809d6" shortcut="vs" description="A field of type $typename$" text="Private $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="870fac19-1513-4134-be45-061c48c97ada" shortcut="vl" description="A field of type $typename$" text="Private $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47a388db-5526-4422-bae8-54c6c0317d73" shortcut="vu" description="A field of type $typename$" text="Private $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6861a99f-07fd-4615-84af-5e0d048db1e6" shortcut="vg" description="A field of type $typename$" text="Private $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="353ca576-b03c-442c-82a5-3e1c663579cb" shortcut="vt" description="A field of type $typename$" text="Private $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="333ae022-94eb-4b30-966b-e32ace16d10e" shortcut="vl.b" description="A field of type System.Collections.Generic.List(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1cc97012-8b51-4d5c-8932-bee855a844f8" shortcut="vl.c" description="A field of type System.Collections.Generic.List(Of Char)" text="Private $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="533bd314-94d3-4f79-adb6-0dcf632b5c50" shortcut="vl.f" description="A field of type System.Collections.Generic.List(Of Single)" text="Private $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f93dec2-160e-4df6-b53e-15d970090513" shortcut="vl.by" description="A field of type System.Collections.Generic.List(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95c21a2a-8ff4-4f29-800b-ec8d874aa2bd" shortcut="vl.d" description="A field of type System.Collections.Generic.List(Of Double)" text="Private $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89295112-e2be-41f6-b596-e0fef4718665" shortcut="vl.i" description="A field of type System.Collections.Generic.List(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0f77622-257a-43ba-9135-499fb84f977a" shortcut="vl.m" description="A field of type System.Collections.Generic.List(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f3a2d27-92fc-4edd-961c-9e4910f63c47" shortcut="vl.s" description="A field of type System.Collections.Generic.List(Of String)" text="Private $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a765fe0-e450-4c66-a44b-8079559f4b95" shortcut="vl.l" description="A field of type System.Collections.Generic.List(Of Long)" text="Private $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="024ca6f3-c162-4706-87df-1d417b6b8699" shortcut="vl.u" description="A field of type System.Collections.Generic.List(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b067974f-d9f6-4cd2-87c1-d369f8aa9cf4" shortcut="vl.g" description="A field of type System.Collections.Generic.List(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa9d7238-0d6a-4f24-8bde-21cef600e89f" shortcut="vl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="425f1249-8abb-49ff-8af3-e235989c0559" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc581a39-e892-4a18-8517-6ac498db49c4" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet(Of Char)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ccb2812-e7eb-42eb-be41-7a2955f9205c" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet(Of Single)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6cc0acb-b755-4ac9-b530-48d0107ae0c0" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba2a2314-c871-4c44-8aa8-9084e46dc1e4" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet(Of Double)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65c9c08c-520f-4392-b580-771ff04329cb" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1a3e975-a0aa-4775-a8a6-d4e201adc5e7" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15244d74-5a43-4315-938c-a0cfa6e003b3" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet(Of String)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4496decb-36c5-40f5-87d0-ef67e4913105" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet(Of Long)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19eb4d5e-cf37-4598-b699-2d8eff479b16" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5c7295b-836e-43fa-802f-f00d27aa04aa" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f80958f4-14dd-4a75-8621-9a3bda67e407" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="611217cb-d720-4aa4-8513-9d0330e0ee53" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8026bff5-d1af-439c-b0d1-5fb267f1d886" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f266a74-e963-48ee-9f2b-ea1086371a09" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf0f1956-ec54-4960-a2ff-9870016abab3" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="987f3e08-2086-43a4-9857-042d18500435" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e47af7ca-834a-42c3-b744-042f83a5239e" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f2c2312-df89-4623-887e-a5e30645a39b" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d6494ba-700a-4fa2-a96d-f3ca56de9d41" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable(Of String)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc7e1b28-f4b6-45c3-9a25-417221ecded9" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a56bdf95-b95d-4c3c-aef1-bf3ea33cd9e5" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cb5cbfe-ee10-48f1-a17e-b6bd54183939" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b4b61dd-c796-463a-b522-11b45c0f10f3" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0791206-c204-4f9f-a7fe-22fcd9d29613" shortcut="vrb" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e389b54-1efe-4cd3-a580-5f4a928b5464" shortcut="vrc" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c47728d-57a5-4fba-8da3-e3c8a303b1bf" shortcut="vrf" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b35c9f4-b76f-4d18-83a2-ea20e8c955da" shortcut="vrby" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc2d3442-c7cb-4634-8993-34e2e07e476b" shortcut="vrd" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75ae26ea-7c64-4087-b3cd-a4537d7f3e9a" shortcut="vri" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc7e0aac-41f1-48fe-af06-04c564224d55" shortcut="vrm" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed3f694c-7531-42a2-b907-fe5c0b2d972b" shortcut="vrs" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fed58bc7-f8ed-4ec7-b000-a9780558ddee" shortcut="vrl" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e875814-eb49-441e-b73a-aca47dd4fecf" shortcut="vru" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b8a825a-50a7-4da6-95ec-c842f1711cda" shortcut="vrg" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47f8ba0d-f2b9-4d3d-9daf-a3b15aeb4123" shortcut="vrt" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47a0e172-6056-4085-aeb7-60c63113050f" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83a6ad13-a7a7-428c-a76b-a65cef9bc75e" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42d357fd-21b3-45f3-8703-46525178dc0f" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ebd502b-0eb8-41ff-aeff-f7275739888f" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad30de84-f1e4-453c-87cd-afb755223245" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d8fa85f-1806-4e1d-a9c0-7ee850db6c35" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f559b8e1-1837-4271-b68c-9058fe44c52f" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e846970-9028-4bdc-abcc-240fbc582af2" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75c146f0-b065-4970-bfd2-21b5d737328d" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee92b030-8597-4830-ae5d-ca0e95711c75" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="355ea26f-6914-429a-aaa6-c1dbfdbb9deb" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8dfb31ec-33e9-4a57-b735-c81e786b4033" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78db55e3-2228-4d91-a577-1ed8c87b04ee" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc451e3d-fc32-4cf0-83f9-39be6ef13842" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abcd5690-92e8-4f5c-b069-65a79ea8e033" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af4bf27b-56ab-4cec-88c7-dcef48e0b522" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f148ba08-7516-4767-8d52-567ed331682f" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb42b892-ce37-4770-a49a-d6ae0b5f3fc6" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d542587c-7e9c-4895-8617-3ba4668f5235" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="509717a8-bdd4-4d62-848e-c81bf31335b7" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78de7bf7-d4de-455b-a641-3e586dcae35b" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e336c20-ee82-434a-b40e-39846bec6afe" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6ad84b5-57ba-4784-bd9c-dd1874a61cec" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="412992fc-2446-4716-a7ea-1027cc8bf5f6" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6bff83c4-55d6-4fd1-ae79-19ddeff5657b" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d931c28-83fb-449f-8621-35710c606e5b" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f43b01b-1a83-4520-9421-43c0a0a4ff32" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ffcbaa7-e222-4ee9-a229-163227a45ff1" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6253ff7e-325c-413c-89e0-53305d14aeab" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1ca5a5d-39e0-4776-98bf-be4ef703f582" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01ad0689-93dd-45d4-b3a7-2ed766e16498" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5710647-66cf-4e19-abb1-df92bba665f5" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3acc40a2-af17-4a05-b643-b488958305af" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48c6032f-265b-4d3d-b114-474658148236" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99cc9c74-6655-4ba5-8ad8-7dcd78de30e0" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9dc67924-ae7f-4113-b9f7-d585e4e0921a" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84bb2b4d-4ce2-4a38-996e-3c459a944e5c" shortcut="Vb" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="154771bc-edf8-4c73-b82a-e4635a95e0ce" shortcut="Vc" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2a4508a-b122-4852-9e83-841a7fdeb74b" shortcut="Vf" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14d34994-a3f1-44c4-af6f-9bed31218a67" shortcut="Vby" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b4e4f0b-b81f-4c55-9a0b-df87b5d441cc" shortcut="Vd" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2aedec17-6f80-4bed-988d-789798cfbb10" shortcut="Vi" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b72b16e3-08e3-481e-9bb8-23bf95471712" shortcut="Vm" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cdc90413-d7de-42ca-954d-67c3f19acbfd" shortcut="Vs" description="A shared field of type $typename$" text="Private Shared $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7645993f-fb78-430b-81e8-157e125cc00a" shortcut="Vl" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb5293af-b64b-48f0-a3ec-d58ace6a5c62" shortcut="Vu" description="A shared field of type $typename$" text="Private Shared $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11debcc6-baf5-4026-a091-7fd77d68e35d" shortcut="Vg" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40853d3e-54aa-4d1a-901a-6fa5f98e44b8" shortcut="Vt" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3be2a20b-21db-4611-bf04-99820de4731b" shortcut="Vl.b" description="A shared field of type System.Collections.Generic.List(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3e7a6b9-8325-40ca-91c7-fc7dec59904c" shortcut="Vl.c" description="A shared field of type System.Collections.Generic.List(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9837fa00-2274-4545-9dc6-8df2d0b6bef2" shortcut="Vl.f" description="A shared field of type System.Collections.Generic.List(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70a028a3-dc71-4985-a37d-6b08487bbc41" shortcut="Vl.by" description="A shared field of type System.Collections.Generic.List(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f42b915-4aac-4c6e-9e21-daaf4cd918bb" shortcut="Vl.d" description="A shared field of type System.Collections.Generic.List(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d23a351-8cd3-4d17-b826-52180b8aa3be" shortcut="Vl.i" description="A shared field of type System.Collections.Generic.List(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3432384-0216-4ec6-ad61-1fbfd0411bc7" shortcut="Vl.m" description="A shared field of type System.Collections.Generic.List(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7240253c-2c93-4dce-a0ac-15a16292c5f8" shortcut="Vl.s" description="A shared field of type System.Collections.Generic.List(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="249d50a6-1fff-4b45-9cc3-633491b51e06" shortcut="Vl.l" description="A shared field of type System.Collections.Generic.List(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abaf6fc9-3fd0-4e45-b36b-fb81e181262a" shortcut="Vl.u" description="A shared field of type System.Collections.Generic.List(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65318558-bdef-4ba3-8ead-5fae17a00b4f" shortcut="Vl.g" description="A shared field of type System.Collections.Generic.List(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba376d75-3839-4e8b-b13d-13bf634db7f7" shortcut="Vl.t" description="A shared field of type System.Collections.Generic.List(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d11e8853-e85b-46af-a093-f68ffb5b9c8a" shortcut="Vh.b" description="A shared field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b1a07f1-0283-485e-9f6a-9d7f502924b4" shortcut="Vh.c" description="A shared field of type System.Collections.Generic.HashSet(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81d679d5-d7bc-4e37-b87c-965c4de8ce68" shortcut="Vh.f" description="A shared field of type System.Collections.Generic.HashSet(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58430553-10b7-48e7-b5dd-3e3318a8a76c" shortcut="Vh.by" description="A shared field of type System.Collections.Generic.HashSet(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36921ec0-5b09-44e3-96e1-f84db7a0db4f" shortcut="Vh.d" description="A shared field of type System.Collections.Generic.HashSet(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38e99dfe-f517-421a-950c-bec03160de35" shortcut="Vh.i" description="A shared field of type System.Collections.Generic.HashSet(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2f78ed0-9bc6-494f-9e61-c1211b593b71" shortcut="Vh.m" description="A shared field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7eefc09-30ce-499f-bd5a-5ca3b4b04f0d" shortcut="Vh.s" description="A shared field of type System.Collections.Generic.HashSet(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c072426-f6f5-42f9-b8af-577e5c480c33" shortcut="Vh.l" description="A shared field of type System.Collections.Generic.HashSet(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e95a632-aca6-472b-86bc-ed3d6b1b3876" shortcut="Vh.u" description="A shared field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a4d0966-af5c-45e8-bff3-e12971875cab" shortcut="Vh.g" description="A shared field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5218c74-646b-4317-adc8-85471954ccf4" shortcut="Vh.t" description="A shared field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d13a45fb-9dbc-4927-ab63-28f4b7800a32" shortcut="V~b" description="A shared field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e996a4dc-4225-4af1-ac39-caa56b2fe501" shortcut="V~c" description="A shared field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e16dfd06-ef96-485f-97e2-3858bd62b5dd" shortcut="V~f" description="A shared field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63823909-d155-4b10-95f3-8ecd05ed3c6f" shortcut="V~by" description="A shared field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76344ddc-c8a1-4165-b63f-1c2f67fb18c3" shortcut="V~d" description="A shared field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a8cdf30-cad3-4032-adb3-2ea91dcb05d7" shortcut="V~i" description="A shared field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b14c5220-7922-4aa2-8a0a-635e64f5b261" shortcut="V~m" description="A shared field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="636812f1-586f-4ec6-82cd-eb5f6f7c041b" shortcut="V~s" description="A shared field of type System.Collections.Generic.IEnumerable(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2349acc-db71-401f-bc87-0fdbefc77d09" shortcut="V~l" description="A shared field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a42aa2c6-51c0-4435-b75a-23418ee76e3d" shortcut="V~u" description="A shared field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e24153c0-5137-4f3b-b632-bf4aa6b405dd" shortcut="V~g" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8403da31-e520-424f-8b85-e341df847528" shortcut="V~t" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96b2c15b-388e-4180-9422-dfa759dc5306" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da238ad6-0155-4ed7-b0ce-c402d75da9df" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e52b1b0d-fc2a-49b9-997a-10976b042cf3" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="388b8527-0429-4948-a67a-8104f659eebe" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab3d703c-2ea8-49fb-92da-3e8bb6fef00b" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fac12003-0664-4d5e-8133-c9f1770d36ca" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49540fbb-bee9-4f95-8a63-2b0ca6efc56b" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23d16cb9-a8a1-43b4-9511-0f470a847468" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58969e34-46bf-4a70-85c2-f60c3e3cb6d7" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7b7e585-b1c7-4f2e-8ac1-ec53dcb5d8f3" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3b2aee4-98c5-44b9-96fb-de79a3f05de7" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62b3ab8f-de3a-4c1b-a653-01bc8a49497e" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="15b1d751-9b25-40a6-a4f5-0b22badcfa9d" shortcut="nl.b" description="A field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26ce81e6-78e6-4609-83bd-b57d6bf884b6" shortcut="nl.c" description="A field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c3769c24-e03c-4fd0-bb4a-d47b5464ce92" shortcut="nl.f" description="A field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8c1af93-7ea0-4be9-b1e3-e9d221eae635" shortcut="nl.by" description="A field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e2d7615-b710-4df0-b952-fcb72b4a7465" shortcut="nl.d" description="A field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a723404-e9b0-4478-b17b-45fcb8d7a7c6" shortcut="nl.i" description="A field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f957bbc2-d233-43cd-a718-45c1e82f9c21" shortcut="nl.m" description="A field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a025b79-7608-4e6a-8d9b-14e4300daf3e" shortcut="nl.s" description="A field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69d14340-bc34-4ddb-8f12-547dd742ea66" shortcut="nl.l" description="A field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45ff16e8-6c06-46c3-9c16-10fdc91d7ba6" shortcut="nl.u" description="A field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e677fd73-e10d-4ff4-b35e-d3c447c1c3c8" shortcut="nl.g" description="A field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6cb9f465-cb5d-4777-9fd6-260684041ea6" shortcut="nl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f3d10d5-63aa-4317-9c21-4535a419f543" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efbe14c6-130c-49a1-a854-5ad6d931f02b" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d83f103b-b250-4ac0-bd35-55404f56c50c" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1fa78afe-cffd-4343-9eee-1967cefeae81" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ba0b981-4864-41ea-ad97-fbf902229e2c" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3947a394-9d81-45ad-91ca-e51571f069bd" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76890a81-7ee0-49ae-a5f2-772b2f196ca5" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc86642f-69ed-4f2c-9974-24167734bcc3" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="052db68e-cedc-4250-948f-5317b079930b" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f901a615-68a3-473a-847c-d836d236fbab" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6ba0179-af22-4df0-ae71-3b12bbcd8761" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f13518f-e9cb-4c17-a359-23113c8e68e5" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b5b08a8-0220-4abe-8681-28f518073eda" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4d7410a-0258-46d9-8914-a5d55feb1c7a" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ba5faaf-2859-4f22-bbc9-e58f88cd86cb" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97ebd3d8-e3d3-4bb6-a5cf-3dc2890d33b8" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae474f00-cc80-46c5-a253-0e4bb61cdd4b" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c4947cb-e1ae-4ded-a3ae-876b1f657f89" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78f16d2a-149e-4c50-9193-29595db1365c" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48464123-43c7-4a93-b054-459bb85ae277" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efca8a06-4ea3-49c9-a7ac-4c7f524a4b07" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f90f4c2f-127e-4430-a797-fdde3eadd7d3" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="337f874b-039a-40b9-8751-95de44c12bd8" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea9efd65-db7f-45b5-9948-297c35e1b72d" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a3f2f25-947c-4edb-a5c7-e3a0f01ae006" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9c6b946-68a7-44ba-99a2-a2039aa7fa2a" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="786575d4-ac6c-43b0-9b23-0d57e3e6e880" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e39112dc-a550-4227-9ac1-a5185a1878e1" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efdccf24-5ac9-4172-ab1d-1ad2be959c76" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f38afd1-8026-492c-b896-e2e8e19fe03c" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60db2ebf-ae70-4013-86a8-deef0127dc84" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c3551d8b-1b4e-4f32-814c-0411407ff655" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0642f65-f186-4905-914f-62e360d40c05" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b5c2b61-57cd-494f-8b5e-b2c13cde01c2" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91e8068e-41ad-47a8-bc8e-b8f3b9329179" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ca84ff8-6374-4c47-b593-5577ae55b383" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7dbe57ce-a52f-4b02-9de0-07474fc26a35" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09cb165a-6450-46ea-a4d9-26d83a76effa" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6173fb62-10db-4ffe-9195-7ed143f06286" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a9011ed-3993-4943-9ccb-32bece8482d3" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4825628b-c390-43bd-9975-92b503f7e8f6" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e9060fb-c7f9-45cc-9d7f-8d47452936fa" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5182d87f-b7db-42f3-934b-da9dfd98b333" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd998cb1-7164-490c-97ea-b32b8e3034d9" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31b1ee0a-5565-48ca-ae03-81745e2ccc8e" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="582bc334-f948-421a-aee1-10fc92e85652" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79788c87-6ff7-498a-b0c2-5a1e9f64af76" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd660f87-3523-486d-a500-7f26d9f791f8" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a60033c4-3334-4ba5-aba6-658cc76139e1" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2d72790-b2b8-4f27-95da-fa48c07fc97c" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e4358cf-c964-4d10-af29-75e22b78b221" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7656fd9a-bb9e-446c-b846-51c16ad6024c" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="200d892f-e0e3-4034-9814-4939ac830fcc" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57ec6a20-9afe-4fb3-a0e7-7d491889cde4" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5e070c3-54fe-4b61-b135-361b8a970e44" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7682f05-8da3-4284-8fa4-a0d6fd28398f" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27722c9d-1f91-461b-b2a0-f12ee5e73160" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5206bcca-305f-4666-9ce8-9e16f7be08ec" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d7b9f99-9db2-4b62-b7cf-12038a8b76d9" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba8796db-663a-4a62-b98b-6659b0491bc0" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2af515ad-17ec-4b56-8dc8-3b27d42b17ff" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3bfb1bde-e86a-4c8e-b3f9-7556015d1ee3" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fbb1e24-e742-4265-abc1-9a2f875a8cc8" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3812a7c-6cb5-4deb-8706-97c5492d3026" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9184102b-9ac5-4982-9a18-ca4a7837465c" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80644a63-57de-4c08-bdfd-27ef961d54a2" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b840c27-fe2b-4657-bfd8-a3f57b2dc98d" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d52e61c5-354d-485c-85d6-26c35793d0ab" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77fd596d-5d96-4590-9dcc-3f447e82a865" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db72eb5d-ac2b-4f0e-a8d3-99948a757b3a" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="844305ed-be15-4f99-a589-9fe883bdf2c9" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94354f1f-b005-45ec-94de-d2f89132678e" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b250cc89-6e88-4e6a-9c1a-0d6caa8ceed2" shortcut="tb" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8bd95f82-e334-400b-80d5-b208243b44d3" shortcut="tc" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19ca4c63-ed67-41a0-8e98-dce05fd0a0f3" shortcut="tf" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="847e8737-25f5-42d4-9d10-e57b5f3d18a1" shortcut="tby" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a1f3571-a907-4bdc-b6c2-3e86ea707b65" shortcut="td" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f9d8d91-93dd-4e5f-b395-fe8470a92597" shortcut="ti" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb017ed0-3a80-4978-87bc-6708ecd38903" shortcut="tm" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bae9241c-0bb2-416f-a127-1062f844321a" shortcut="ts" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c67edb9f-87bc-4d16-bc30-f3b8ddaf5326" shortcut="tl" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc82a65b-d4f7-4296-8e44-16f6df2b03a5" shortcut="tu" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c532868-79d0-4a30-9402-c44cba359615" shortcut="tg" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fea54b55-eb39-4676-93b6-68f2b26c0118" shortcut="tt" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b1060c9-37e9-4194-8a22-e43a0261be0b" shortcut="tl.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14a93064-8aac-4b71-9e67-02739927eb6f" shortcut="tl.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64919d2a-7918-4f6f-ae7a-e424bf3dd563" shortcut="tl.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ba0e935-8427-4030-b817-ec0dc031ac24" shortcut="tl.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9356e7f-fa7d-415a-97f2-6d6483d04fa1" shortcut="tl.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45f0fd41-6af3-4eee-a818-38419cd3ce6f" shortcut="tl.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3464f2f3-b980-45f1-b9f8-5935803352db" shortcut="tl.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80742d02-9a82-4132-97aa-c4a4d18e3ba7" shortcut="tl.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf2819e9-9f8e-416e-a92d-d6ac0b270a16" shortcut="tl.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a527a62-9793-4845-8f76-5feb4d61b4ea" shortcut="tl.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bab861cd-621e-40a7-aa45-415f7cd8ae73" shortcut="tl.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b530bda-62b9-4fa5-8b4d-69666d45b8fc" shortcut="tl.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31756653-93e8-40de-9f27-ac2df823c15d" shortcut="th.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="014d7430-d865-4f72-8dd4-53bc98bd41e7" shortcut="th.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23a18c56-b3cb-432d-b5c6-af3fe5c4f249" shortcut="th.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f94b8dd-5d68-4a1d-a2bc-ae6196319599" shortcut="th.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="419f9464-b2ae-41e5-829e-bb00c814c0fe" shortcut="th.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9098098f-f694-49aa-a5d5-52fe5c910470" shortcut="th.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f21dcee5-38bf-4a8d-a7a1-fac1c44afd4d" shortcut="th.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f06c99d-1eac-42af-95de-f62b782fc09b" shortcut="th.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ccc01c89-f8f9-4e30-b6e5-225df2967f8d" shortcut="th.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d1236e4-be7b-4999-b476-3c2b0f7e7652" shortcut="th.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a027afc3-8a30-4195-9443-c6ca3b658aa8" shortcut="th.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db5a100b-3ca2-441b-93cc-8b715123996b" shortcut="th.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d095d037-1d06-49de-9657-4da343b6b37b" shortcut="t~b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cdf3a2e-14fa-471e-af0b-e2b997245d9d" shortcut="t~c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d76d4c0-2a36-43e2-9705-5dd513c75f9b" shortcut="t~f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39de9665-8ff0-4ff5-9c58-e541e10cb031" shortcut="t~by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17d0be66-66c2-4fe5-a069-5d0598d3f3be" shortcut="t~d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d86d6574-7475-4334-87e9-1f87806b7918" shortcut="t~i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f71e3cc-be3c-4c6f-bd64-3fb55f9184ab" shortcut="t~m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="762307b8-8d77-49af-8371-7b15fba4d2ef" shortcut="t~s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b7ef827-79f7-4260-8554-8aa8ed9dff54" shortcut="t~l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb2f2a38-4914-4b9a-b3a9-fca739e7f29d" shortcut="t~u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f789cf41-3aa6-4195-a7c5-5c0c4bfaf379" shortcut="t~g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67eb0c0c-f0de-4078-862f-6d67cef7bd8c" shortcut="t~t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bd91593-aefe-4a6d-836d-d142bd374d1f" shortcut="mb" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1df863cc-b48a-483b-b90e-4859000c8459" shortcut="mc" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48b0a212-3b69-4687-b6fa-12658ad9e82b" shortcut="mf" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3815351e-902b-469d-8bda-376fbddc924f" shortcut="mby" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97a31863-3a97-44d2-a433-50a21fdcc644" shortcut="md" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22cd0580-36a4-43be-8224-965578a17a8b" shortcut="mi" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58bf8069-b016-4529-888f-eb3205bbc390" shortcut="mm" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf2c3302-0680-470b-a636-a4dbef03963e" shortcut="ms" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f688091-e6e6-47d3-8e21-2e230aec5921" shortcut="ml" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2cc5efe5-97aa-456c-a28d-408e7fda7f43" shortcut="mu" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5215d625-9bdb-4f42-967b-17814b5c94d2" shortcut="mg" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4662c715-ce47-4654-8092-6451863dacca" shortcut="mt" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21d89d59-ce04-44de-b239-2008956da158" shortcut="ml.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e17f6df-0d9c-4693-a671-c3c95622c0d7" shortcut="ml.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d3c189e-e711-4f04-ab8d-94f51266a4e7" shortcut="ml.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b98144c-6d4a-42f8-bf22-3c9cd9fd286f" shortcut="ml.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d922b998-1548-4e33-8f39-a9f1c441c6ee" shortcut="ml.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf889c32-c8d4-4732-b209-adbdf0010f15" shortcut="ml.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18e59802-4428-4dbd-875b-73e22e26a794" shortcut="ml.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="428cd9ee-953e-4763-8547-6c0ff522fccb" shortcut="ml.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3c44876-5bc6-443e-b59b-181c9decb6e6" shortcut="ml.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7468e2e-a415-46aa-a497-ecbb92c55600" shortcut="ml.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c568db4c-20ea-4026-b9e7-d971cb460f94" shortcut="ml.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="205df035-befe-4c17-bd44-855e07dac729" shortcut="ml.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="526759d5-f118-416f-b5a7-6fa5858dc0ac" shortcut="mh.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c4a6f80-86b7-4fbe-8b6e-aa719ec8bcbd" shortcut="mh.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c00eaad-eb08-41d4-9cac-9f360bd69ee9" shortcut="mh.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92aef83a-8d18-4245-9bd3-7beec9e66c1f" shortcut="mh.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07f58e7f-35f0-408f-af5e-25e512e35211" shortcut="mh.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b35e811-c9f9-464f-8a06-9a8c8c5ef83b" shortcut="mh.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="268aca9c-f633-41cf-b3a4-b8202a846004" shortcut="mh.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f84ec379-4750-45b8-9bde-4f327a783eb4" shortcut="mh.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="788b46de-f6b2-4a69-8e5f-d50503053e41" shortcut="mh.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea36df5c-e887-4c64-af48-e790926a9799" shortcut="mh.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99dddea7-07cc-4980-a960-6ace53e1339b" shortcut="mh.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a682f15-f818-4958-a2d6-9eb2accad3a2" shortcut="mh.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0fdcc0a5-cb28-4bca-bbc5-73983390c069" shortcut="m~b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3b90619-60b1-4603-9ec5-778f0119a1ac" shortcut="m~c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51a969ea-f629-442e-a57c-9e8a33a49c68" shortcut="m~f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f94c1325-8546-4965-9fd0-28d48697eaf5" shortcut="m~by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1ed20d8-4f49-4e3b-bdbc-bf54a86cefe5" shortcut="m~d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cee484c6-4943-467c-b25f-43234bf78463" shortcut="m~i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19826ed6-a0a0-4ab9-91da-58dd0ddcc180" shortcut="m~m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="195a48f5-7383-433d-87ee-8cebcb7f5cca" shortcut="m~s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="843cc2a5-4d9a-4a98-95d7-6b2d0e640e73" shortcut="m~l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35d82037-451d-4059-8534-41ce2dcb6936" shortcut="m~u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af504496-0159-466a-b7d1-23d422fd6c99" shortcut="m~g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b6fbaea-a122-48a1-ad60-f79f4faa8d26" shortcut="m~t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68be0ef6-2e69-4190-9181-521cec851774" shortcut="Mb" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e1d498c-2817-4140-b599-055ebe7951c6" shortcut="Mc" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8a57543-7f53-4f71-be1d-0945d3713a59" shortcut="Mf" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9feb2e90-a871-47af-9e9f-3765f810547a" shortcut="Mby" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2050fc8d-c980-45b4-aafa-b252646b8e8b" shortcut="Md" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ccbbd62-9b79-4b09-800e-8888e149d499" shortcut="Mi" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="331e4ad1-b8d6-49c3-ac95-6a20feda8868" shortcut="Mm" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18d39d1f-382c-4545-9321-5bfa90d7496d" shortcut="Ms" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43662728-c8f9-4598-b977-952b6a76f67d" shortcut="Ml" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc2ca539-6414-41cd-ac85-c260e21f53d6" shortcut="Mu" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0804f1f-5add-43d8-be3e-e560c90564b6" shortcut="Mg" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c8494c2-c0ad-42b8-a192-05b266705c31" shortcut="Mt" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4e2849c-dc61-4b7e-9fea-9cef4cb71900" shortcut="Ml.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3bb7a5b-b665-464e-ba1b-f64e7f7e7569" shortcut="Ml.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c0917bb-df84-46c9-9997-77ec6a8487dc" shortcut="Ml.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f78d98e7-b882-4fb4-ab5b-e28d784e5b63" shortcut="Ml.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1f7f285-234b-49f8-8396-00d70e9eee97" shortcut="Ml.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88fca594-01d4-4e5d-a005-c2cc926acd1f" shortcut="Ml.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec4746a4-c5b3-41af-98f5-88acf60dd081" shortcut="Ml.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90c0a906-fb12-474c-8e31-f82dbdeb2c55" shortcut="Ml.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c68f8622-6d38-470a-8a96-76707f013686" shortcut="Ml.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b891ca3-4385-44c6-bf89-a479d7f70fd8" shortcut="Ml.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1119a9d8-e9d8-4528-96f4-b4a7aea5a813" shortcut="Ml.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b8335c0-5300-4513-aa35-93d9e06bf1e5" shortcut="Ml.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8a1a295-37a6-44d1-b8a7-dfbcd1dc0c70" shortcut="Mh.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e55b14d-2662-42ba-8e19-fe4b1a71b4f9" shortcut="Mh.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1be5afbc-8c7c-497b-a0bf-de093aef7938" shortcut="Mh.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6322f24-6132-49cd-9eb5-16a5dce661cc" shortcut="Mh.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2e33b46-0692-4663-80ac-c8813b5acb54" shortcut="Mh.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="721e75c2-1efc-4e3e-aa7b-3be7e9a8bb02" shortcut="Mh.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8397f1a-05a5-4563-bad0-738243ba8176" shortcut="Mh.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e781bb89-8a05-487a-b23e-c0648e17878d" shortcut="Mh.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c9f846d-4b5a-43b0-95d1-d1a3b24b4c90" shortcut="Mh.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de92500c-643d-42b7-a6cd-cfe2987619ae" shortcut="Mh.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8877c612-cd71-4f2b-9a40-2b8bcb5fe04d" shortcut="Mh.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b6374e5-7264-4e3a-8700-c98838a5f6f2" shortcut="Mh.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e83a4b3-f8b3-4273-b70e-807f8c81dc16" shortcut="M~b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a512777-0dd6-488e-b400-1753f86fc3cb" shortcut="M~c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a7facd7-a61b-418b-b152-1938007246ca" shortcut="M~f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd038ce6-d036-4539-839f-96788695036c" shortcut="M~by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56d3d460-fb25-47b1-a8b9-a1dcb4541c68" shortcut="M~d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87f12b0b-7d3f-4f5e-a29c-64e65d0540d7" shortcut="M~i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af3426c5-f058-40d1-8c80-37dac92d86f1" shortcut="M~m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="feaaeb46-e250-43e0-873f-eb1bb3207ec0" shortcut="M~s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01d32239-d8fa-4279-adc2-2db54753c17b" shortcut="M~l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="879fd6ae-082c-4453-8e80-af849cd43cf6" shortcut="M~u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f19fdf2c-ee26-40b9-8705-983db4944b00" shortcut="M~g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a6dc5d0-3bdc-4c42-bce1-9f2c51ce3a31" shortcut="M~t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eaf4162f-b525-4dfe-8b94-101e226b6b7a" shortcut="mb" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4d7a2e8-f066-426a-84b1-d464ab067a5e" shortcut="mc" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="242962ba-793d-4cc7-9c4b-41a687de5370" shortcut="mf" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b7df1f6-4cf4-404e-9640-391b5f9bbf65" shortcut="mby" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="545795c2-ce5d-4258-81ff-d06941c1db0d" shortcut="md" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f91b9db9-7889-4d81-a879-673ba4e4b15c" shortcut="mi" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9a16b5c2-0b53-4057-bba8-4a47d5f8c7eb" shortcut="mm" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="332e580e-cbeb-446a-802e-20cc1ebb6f8f" shortcut="ms" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ee8f7ce-d6e5-4f4b-b19e-95899a363db2" shortcut="ml" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62e8be62-7911-47e0-9427-0b486623093f" shortcut="mu" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c79e6f69-7684-4c33-b1a2-881992e8e90b" shortcut="mg" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71ebaafd-5430-41b9-b78f-2f2883852c29" shortcut="mt" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31e27ecd-69d7-4c7e-b474-25cd00e2b2f6" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0af02868-f944-4a58-b7dc-b7db28891e31" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0e66f75-960c-4d2b-8c6d-ecca65271be0" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99a695ea-38b1-4461-8ff6-faa1563e0d0a" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97d49a1b-a3ce-4157-b47d-fa4d23f924a9" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02de0ed5-a356-4655-a10c-9f3479abf5c4" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="325ab099-7912-48e0-b3e0-fc433bdf54da" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66d3fd71-6817-4940-bca4-b60ef4bb97e0" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="209d890e-9c39-4647-ae34-2b9d4c0b615f" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="478324d6-fe70-4a18-bc4b-9164d684240f" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d1626ab-3c0f-45d7-8f06-3659bb473a7c" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ff64e27-d41e-4af9-8763-4a80cefdbf3b" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b5675d1-9613-450c-83d3-0a679330d0bd" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57d71b5e-3ab3-401b-bc90-274c3baca414" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b2398ce-eff5-4edf-90aa-3330860fcc13" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80dd3613-9474-4514-b9f5-2fdb3b414545" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c555cda2-b4e9-45c8-b08c-6ada459db3e0" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="027b0ea6-6cb2-4144-949c-b38bdf8b395a" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e41ed163-e19e-4467-a382-e9f79dbfcf74" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="053cdb7f-74e7-43dc-98d6-dbdc8e62bd37" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="513c4cdc-03e3-4d5c-89df-ea992ece0b1e" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="627ff02e-4eb2-4bc2-8bb5-0df30a3bffbb" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca2f2a9b-523c-4e84-9ffe-3b6180b59d5d" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55b8e12d-fc65-442b-bf6d-a36a7bea1b0d" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18d40913-8eb5-4fdc-9737-5919646cef4f" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b2db8a4-7d59-42a8-a072-c164d81970a7" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7dd6fe9-397f-4526-8815-8628812105dc" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f96e80b4-281e-40aa-9224-d13484c74cf6" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6acf21ef-27f9-4ec3-aba0-55ae9f506f32" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6320c977-a4fd-416c-974e-e578025b0443" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f1d941a-14bf-42f7-ac04-17a4c9f341fc" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="237c52b5-d264-4a76-bd5c-0c932d1c74b4" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70121d8e-e3f1-48d7-8369-65424812f939" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2e8ae3a-1c2b-494b-8561-9cf3d07a1481" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef1b96be-8d96-42ce-bde2-935188e271ea" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07e91415-0823-4f49-889b-8758c09bf2ae" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c6628ba-5c13-4b80-af6b-5416c0e90f06" shortcut="Mb" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f75c1f1-b187-4b8a-a42f-eeaad463ce8e" shortcut="Mc" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6c5e64c-2545-4953-b43e-65d4411c1716" shortcut="Mf" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a8b04d7-cd41-42ad-bb6e-aff36462735f" shortcut="Mby" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6930752b-c077-4fcb-8bb0-37b58d55ea5c" shortcut="Md" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7bb6650-40dc-41f0-a226-5fabea4459d8" shortcut="Mi" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73b36ee5-8b1e-4bfc-8b34-14121e559ea2" shortcut="Mm" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ada747b-1cce-4832-88b2-7c74f8abbda6" shortcut="Ms" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e109965a-0e73-4f12-8df7-196160f6d099" shortcut="Ml" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce2047d8-136b-4666-830c-1242513c2464" shortcut="Mu" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8528cf48-efb0-48af-9986-5fec11ace3a4" shortcut="Mg" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8251032-c08f-4441-8099-655a6ac07996" shortcut="Mt" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ecb3d1c-273d-4fe4-b97d-873e1197d646" shortcut="Ml.b" description="A shared method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e62671a8-f4ea-474c-a334-c5fa0c02579b" shortcut="Ml.c" description="A shared method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="563a8686-2718-47f5-9ae3-3fc89cdf7591" shortcut="Ml.f" description="A shared method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2c281f8-3477-45a6-98f5-d074ddd07ca1" shortcut="Ml.by" description="A shared method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b0a5aee-f788-4866-a38a-0119c5d43173" shortcut="Ml.d" description="A shared method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff51fa71-3f1f-43bc-9c88-47cceab01b44" shortcut="Ml.i" description="A shared method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b9c442c-2e71-403b-b032-3e05478babd2" shortcut="Ml.m" description="A shared method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="355a0b61-c7ab-4c95-a945-15901b718c8b" shortcut="Ml.s" description="A shared method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a986efcc-4ce9-444e-9635-00b58d7172de" shortcut="Ml.l" description="A shared method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e4cd1b1-ae6f-4bd2-aaa3-b1bdde2d31c1" shortcut="Ml.u" description="A shared method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60e13e94-2606-466d-b083-f78aae53d6d4" shortcut="Ml.g" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c628456c-9da7-4183-958b-8031b1f629e1" shortcut="Ml.t" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4dc14a48-d000-4a3d-b54a-ac6ceace3c6e" shortcut="Mh.b" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d6ec217-cd5a-4c16-8262-d78e0e8a9e46" shortcut="Mh.c" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75f1005e-782b-4e1c-bca7-954fac039cc6" shortcut="Mh.f" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f05ede4a-3652-49d1-bca2-d035a084f704" shortcut="Mh.by" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41544a34-7e76-44a8-941e-a4f40442fd06" shortcut="Mh.d" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd803883-c029-40c6-a564-27581ed91d5d" shortcut="Mh.i" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43e3d94a-6c1e-4c17-817c-afb94a6e2ec0" shortcut="Mh.m" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcb2aa5a-e2f6-43e0-80f0-f59b1c518c8b" shortcut="Mh.s" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ccb9aaf-0a06-4d35-8429-54443ac92648" shortcut="Mh.l" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="341da847-e89d-4e5a-bb78-3341c4347bf0" shortcut="Mh.u" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97029fd1-9bf2-4a1c-aa0e-8088ae3f1650" shortcut="Mh.g" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9335394a-cfd7-4594-a752-fc481a8f3253" shortcut="Mh.t" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed93bc8d-74f4-470d-8065-afc21f57a180" shortcut="M~b" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57906a3c-e36a-4e07-a6b6-22552972e663" shortcut="M~c" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4fc7e3c-c458-4609-b75b-53a16f027283" shortcut="M~f" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="695edfa3-5fa1-4db2-bcd9-6c928f735894" shortcut="M~by" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56f91747-1604-47af-94f8-ea125a81b06c" shortcut="M~d" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1004d960-43ed-4a05-8ef0-4bb544d6bd02" shortcut="M~i" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2578ee0d-0400-4277-bce6-ff847b1f5338" shortcut="M~m" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8bbee79-62e3-443a-86c7-d582ab4c525e" shortcut="M~s" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eacda687-04db-416e-83fd-f1a36ecf7dfc" shortcut="M~l" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6439a67f-1ca4-4b82-9012-aa5f6cfc7199" shortcut="M~u" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="461db2ba-79c4-4d34-a065-0953483ee62e" shortcut="M~g" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec15d849-adc1-4535-8dcc-763160fa9132" shortcut="M~t" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e435edec-50fc-49aa-8235-65d1cd964c11" shortcut="pb" description="An automatic property of type $typename$" text="Public Property $propname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa0f61b1-7a1e-441b-a6d4-1dd4af828c86" shortcut="pc" description="An automatic property of type $typename$" text="Public Property $propname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0df8348d-30b8-47d7-b231-f28b1937cba5" shortcut="pf" description="An automatic property of type $typename$" text="Public Property $propname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72223d9e-ab29-41c4-9a93-781b5f8ea7a3" shortcut="pby" description="An automatic property of type $typename$" text="Public Property $propname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37ad5fc4-7a8d-4adf-b10e-3cb0c56e804f" shortcut="pd" description="An automatic property of type $typename$" text="Public Property $propname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8d2e43e-da08-4dd2-bfae-70860c24d416" shortcut="pi" description="An automatic property of type $typename$" text="Public Property $propname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b30b4db3-7175-4a11-bfd6-f02f885ae46b" shortcut="pm" description="An automatic property of type $typename$" text="Public Property $propname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ed353c8-24c3-49bb-aa56-a41a49c745ac" shortcut="ps" description="An automatic property of type $typename$" text="Public Property $propname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="888172fa-db80-45a8-82e4-2910a8176d14" shortcut="pl" description="An automatic property of type $typename$" text="Public Property $propname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="485642a5-e588-469c-924d-de23dcdd7bb1" shortcut="pu" description="An automatic property of type $typename$" text="Public Property $propname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ad578d5-9d8c-4d33-92a7-0d0efa2ca40b" shortcut="pg" description="An automatic property of type $typename$" text="Public Property $propname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fdacc2bb-2c0c-4da7-bc25-12bd031a860c" shortcut="pt" description="An automatic property of type $typename$" text="Public Property $propname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cbfd9aa-3b77-4a0d-bc52-622394fe9fec" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c092f73-8430-4418-8be2-86c831961605" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List(Of Char)" text="Public Property $propname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24bf7614-6dcb-4792-b6cd-08e724e97924" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List(Of Single)" text="Public Property $propname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06e142bf-9041-4a24-b0dc-8a99666c7bcf" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="419854ff-c97c-4da3-bf2e-61bb30fdc11f" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List(Of Double)" text="Public Property $propname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74459e93-6d81-4713-be1f-909f85cf2d14" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c0af320-d92b-4d10-9ee7-bc9fa27f4bad" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b858e67-79fb-4413-ba19-65bd36443add" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List(Of String)" text="Public Property $propname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75c4c0e6-7c3f-46f0-91f5-9571cb6a2f98" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List(Of Long)" text="Public Property $propname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2079ef7f-669b-442c-84e9-48ed43a03146" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f23ab39-f43a-4816-ae53-8f19c26dcf25" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9facb640-4122-4eb7-9b9f-fdb01d8b2486" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7413caf0-4f4d-43e0-aade-cd0c041dddd1" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e9726e9-04ff-4b7a-bc1a-dea8e0799abb" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet(Of Char)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdfc4a34-00e5-4aaf-8530-4ed666df3ead" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet(Of Single)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="973976bd-0fbd-4c50-a40e-f42364ad052f" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3dc4e677-f1a1-4695-8ab5-59764155e84d" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet(Of Double)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26833cb4-4f43-4c50-a35f-94811438a677" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="011be6f2-31fe-43c4-8da4-d6a3baf24880" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4f05ce9-0731-4302-9c8f-5fa6d5c5c979" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet(Of String)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e381607-1476-4536-8549-1ba23bed5a47" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet(Of Long)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88ba9d6c-074a-46a1-95d3-2a771b50a03b" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9fb4cfb-b854-4e51-8d9b-9ef06a7e9cc3" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55ab477e-d83b-4e6a-bcaf-b6c8e0eb8f10" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2afce1cd-d79b-4174-8d70-8335a4828b8d" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="964c8f4e-c674-4ba0-8709-46975a708ea6" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Char)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a1e9d1c-f76b-416c-95d1-ef474fd44741" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Single)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="419d7dd9-824d-4f2c-965f-a1524367458b" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c917453b-845f-4b79-b725-ccf491ddde03" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Double)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d11bf48-a053-426a-a4d8-389d8882cc7a" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bf82328-6cb5-415a-93d6-a71dcd5915e2" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="612f0171-665f-48e3-b1d6-85c136e53e1e" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable(Of String)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5aa049d0-a1e8-4ecb-8cfb-15dae43c2628" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Long)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48c420e3-0033-4912-9827-312da8bbd0b2" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0eec429-b3b2-4576-8cfe-e26e25fc80e7" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6f132b4-78eb-420b-9eec-92bd95f5b531" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
</TemplatesExport>